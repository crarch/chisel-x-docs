Index.PACKAGES = {"modules.Dummy2" : [{"name" : "modules.Dummy2.Dummy2Test", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/Dummy2\/Dummy2Test.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/Dummy2\/Dummy2Test.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/Dummy2\/Dummy2Test.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/Dummy2\/Dummy2Test.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/Dummy2\/Dummy2Test.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/Dummy2\/Dummy2Test.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/Dummy2\/Dummy2Test.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/Dummy2\/Dummy2Test.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/Dummy2\/Dummy2Test.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/Dummy2\/Dummy2Test.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/Dummy2\/Dummy2Test.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/Dummy2\/Dummy2Test.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/Dummy2\/Dummy2Test.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/Dummy2\/Dummy2Test.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/Dummy2\/Dummy2Test.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/Dummy2\/Dummy2Test.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/Dummy2\/Dummy2Test.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/Dummy2\/Dummy2Test.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "modules\/Dummy2\/Dummy2Test.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Dummy2\/Dummy2Test.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/Dummy2\/Dummy2Test.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/Dummy2\/Dummy2Test.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/Dummy2\/Dummy2Test.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/Dummy2\/Dummy2Test.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/Dummy2\/Dummy2Test.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/Dummy2\/Dummy2Test.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/Dummy2\/Dummy2Test.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/Dummy2\/Dummy2Test.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/Dummy2\/Dummy2Test.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/Dummy2\/Dummy2Test.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/Dummy2\/Dummy2Test.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/Dummy2\/Dummy2Test.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/Dummy2\/Dummy2Test.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/Dummy2\/Dummy2Test.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/Dummy2\/Dummy2Test.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/Dummy2\/Dummy2Test.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/Dummy2\/Dummy2Test.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "modules.Dummy2.Dummy2Test#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/Dummy2\/Dummy2Test.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/Dummy2\/Dummy2Test.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Dummy2\/Dummy2Test.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Dummy2\/Dummy2Test.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Dummy2\/Dummy2Test.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Dummy2\/Dummy2Test.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Dummy2\/Dummy2Test.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Dummy2\/Dummy2Test.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Dummy2\/Dummy2Test.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Dummy2\/Dummy2Test.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Dummy2\/Dummy2Test.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Dummy2\/Dummy2Test.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Dummy2\/Dummy2Test.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Dummy2\/Dummy2Test.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Dummy2\/Dummy2Test.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Dummy2\/Dummy2Test.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Dummy2\/Dummy2Test.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Dummy2\/Dummy2Test.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Dummy2\/Dummy2Test.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Dummy2\/Dummy2Test.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Dummy2\/Dummy2Test.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Dummy2\/Dummy2Test.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Dummy2\/Dummy2Test.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Dummy2\/Dummy2Test.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Dummy2\/Dummy2Test.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Dummy2\/Dummy2Test.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Dummy2\/Dummy2Test.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Dummy2\/Dummy2Test.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Dummy2\/Dummy2Test.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Dummy2\/Dummy2Test.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/Dummy2\/Dummy2Test.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/Dummy2\/Dummy2Test.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/Dummy2\/Dummy2Test.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/Dummy2\/Dummy2Test.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/Dummy2\/Dummy2Test.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/Dummy2\/Dummy2Test.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/Dummy2\/Dummy2Test.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/Dummy2\/Dummy2Test.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/Dummy2\/Dummy2Test.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/Dummy2\/Dummy2Test.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/Dummy2\/Dummy2Test.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/Dummy2\/Dummy2Test.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/Dummy2\/Dummy2Test.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/Dummy2\/Dummy2Test.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/Dummy2\/Dummy2Test.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/Dummy2\/Dummy2Test.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/Dummy2\/Dummy2Test.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/Dummy2\/Dummy2Test.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/Dummy2\/Dummy2Test.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/Dummy2\/Dummy2Test.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/Dummy2\/Dummy2Test.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/Dummy2\/Dummy2Test.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/Dummy2\/Dummy2Test.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/Dummy2\/Dummy2Test.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/Dummy2\/Dummy2Test.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Dummy2\/Dummy2Test.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Dummy2\/Dummy2Test.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/Dummy2\/Dummy2Test.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/Dummy2\/Dummy2Test.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Dummy2\/Dummy2Test.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Dummy2\/Dummy2Test.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/Dummy2\/Dummy2Test.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/Dummy2\/Dummy2Test.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/Dummy2\/Dummy2Test.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/Dummy2\/Dummy2Test.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/Dummy2\/Dummy2Test.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/Dummy2\/Dummy2Test.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/Dummy2\/Dummy2Test.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/Dummy2\/Dummy2Test.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/Dummy2\/Dummy2Test.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/Dummy2\/Dummy2Test.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/Dummy2\/Dummy2Test.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/Dummy2\/Dummy2Test.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/Dummy2\/Dummy2Test.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/Dummy2\/Dummy2Test.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/Dummy2\/Dummy2Test.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/Dummy2\/Dummy2Test.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/Dummy2\/Dummy2Test.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/Dummy2\/Dummy2Test.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/Dummy2\/Dummy2Test.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/Dummy2\/Dummy2Test.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/Dummy2\/Dummy2Test.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/Dummy2\/Dummy2Test.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/Dummy2\/Dummy2Test.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/Dummy2\/Dummy2Test.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/Dummy2\/Dummy2Test.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/Dummy2\/Dummy2Test.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "modules\/Dummy2\/Dummy2Test.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "modules\/Dummy2\/Dummy2Test.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "modules\/Dummy2\/Dummy2Test.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "modules\/Dummy2\/Dummy2Test.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "modules\/Dummy2\/Dummy2Test.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "modules\/Dummy2\/Dummy2Test.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "modules\/Dummy2\/Dummy2Test.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "modules\/Dummy2\/Dummy2Test.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "modules\/Dummy2\/Dummy2Test.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "modules\/Dummy2\/Dummy2Test.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/Dummy2\/Dummy2Test.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/Dummy2\/Dummy2Test.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/Dummy2\/Dummy2Test.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/Dummy2\/Dummy2Test.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/Dummy2\/Dummy2Test.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/Dummy2\/Dummy2Test.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/Dummy2\/Dummy2Test.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/Dummy2\/Dummy2Test.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/Dummy2\/Dummy2Test.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/Dummy2\/Dummy2Test.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/Dummy2\/Dummy2Test.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/Dummy2\/Dummy2Test.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/Dummy2\/Dummy2Test.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/Dummy2\/Dummy2Test.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/Dummy2\/Dummy2Test.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/Dummy2\/Dummy2Test.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/Dummy2\/Dummy2Test.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/Dummy2\/Dummy2Test.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/Dummy2\/Dummy2Test.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/Dummy2\/Dummy2Test.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/Dummy2\/Dummy2Test.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/Dummy2\/Dummy2Test.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/Dummy2\/Dummy2Test.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/Dummy2\/Dummy2Test.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/Dummy2\/Dummy2Test.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/Dummy2\/Dummy2Test.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/Dummy2\/Dummy2Test.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/Dummy2\/Dummy2Test.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/Dummy2\/Dummy2Test.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/Dummy2\/Dummy2Test.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/Dummy2\/Dummy2Test.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/Dummy2\/Dummy2Test.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Dummy2\/Dummy2Test.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Dummy2\/Dummy2Test.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Dummy2\/Dummy2Test.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Dummy2\/Dummy2Test.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Dummy2\/Dummy2Test.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Dummy2\/Dummy2Test.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Dummy2\/Dummy2Test.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Dummy2\/Dummy2Test.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Dummy2\/Dummy2Test.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Dummy2\/Dummy2Test.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/Dummy2\/Dummy2Test.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/Dummy2\/Dummy2Test.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/Dummy2\/Dummy2Test.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/Dummy2\/Dummy2Test.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/Dummy2\/Dummy2Test.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Dummy2\/Dummy2Test.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Dummy2\/Dummy2Test.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Dummy2\/Dummy2Test.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Dummy2\/Dummy2Test.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/Dummy2\/Dummy2Test.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/Dummy2\/Dummy2Test.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/Dummy2\/Dummy2Test.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/Dummy2\/Dummy2Test.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/Dummy2\/Dummy2Test.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/Dummy2\/Dummy2Test.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/Dummy2\/Dummy2Test.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/Dummy2\/Dummy2Test.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/Dummy2\/Dummy2Test.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/Dummy2\/Dummy2Test.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Dummy2\/Dummy2Test.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Dummy2\/Dummy2Test.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Dummy2\/Dummy2Test.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Dummy2\/Dummy2Test.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Dummy2\/Dummy2Test.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Dummy2\/Dummy2Test.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/Dummy2\/Dummy2Test.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Dummy2\/Dummy2Test.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Dummy2\/Dummy2Test.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Dummy2\/Dummy2Test.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Dummy2\/Dummy2Test.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Dummy2\/Dummy2Test.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Dummy2\/Dummy2Test.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Dummy2\/Dummy2Test.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Dummy2\/Dummy2Test.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Dummy2\/Dummy2Test.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Dummy2\/Dummy2Test.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Dummy2\/Dummy2Test.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Dummy2\/Dummy2Test.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Dummy2\/Dummy2Test.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Dummy2\/Dummy2Test.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Dummy2\/Dummy2Test.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Dummy2\/Dummy2Test.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Dummy2\/Dummy2Test.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Dummy2\/Dummy2Test.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Dummy2\/Dummy2Test.html", "kind" : "class"}], "modules.DDR" : [], "modules.ITLB.main" : [{"name" : "modules.ITLB.main.INVTLB", "shortDescription" : "", "members_class" : [{"label" : "VA", "tail" : ": UInt", "member" : "modules.ITLB.main.INVTLB.VA", "link" : "modules\/ITLB\/main\/INVTLB.html#VA:chisel3.UInt", "kind" : "val"}, {"label" : "ASID", "tail" : ": UInt", "member" : "modules.ITLB.main.INVTLB.ASID", "link" : "modules\/ITLB\/main\/INVTLB.html#ASID:chisel3.UInt", "kind" : "val"}, {"label" : "OP", "tail" : ": UInt", "member" : "modules.ITLB.main.INVTLB.OP", "link" : "modules\/ITLB\/main\/INVTLB.html#OP:chisel3.UInt", "kind" : "val"}, {"member" : "modules.ITLB.main.INVTLB#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ITLB\/main\/INVTLB.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ITLB\/main\/INVTLB.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): INVTLB.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ITLB\/main\/INVTLB.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ITLB\/main\/INVTLB.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ITLB\/main\/INVTLB.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ITLB\/main\/INVTLB.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ITLB\/main\/INVTLB.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ITLB\/main\/INVTLB.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ITLB\/main\/INVTLB.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ITLB\/main\/INVTLB.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ITLB\/main\/INVTLB.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ITLB\/main\/INVTLB.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/INVTLB.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/INVTLB.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ITLB\/main\/INVTLB.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ITLB\/main\/INVTLB.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ITLB\/main\/INVTLB.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ITLB\/main\/INVTLB.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ITLB\/main\/INVTLB.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/INVTLB.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/INVTLB.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ITLB\/main\/INVTLB.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/INVTLB.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/INVTLB.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ITLB\/main\/INVTLB.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ITLB\/main\/INVTLB.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ITLB\/main\/INVTLB.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ITLB\/main\/INVTLB.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ITLB\/main\/INVTLB.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): INVTLB.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ITLB\/main\/INVTLB.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ITLB\/main\/INVTLB.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ITLB\/main\/INVTLB.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ITLB\/main\/INVTLB.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ITLB\/main\/INVTLB.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ITLB\/main\/INVTLB.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ITLB\/main\/INVTLB.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ITLB\/main\/INVTLB.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ITLB\/main\/INVTLB.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ITLB\/main\/INVTLB.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): INVTLB.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ITLB\/main\/INVTLB.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ITLB\/main\/INVTLB.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ITLB\/main\/INVTLB.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/INVTLB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/INVTLB.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/INVTLB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/INVTLB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/INVTLB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/INVTLB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/INVTLB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/INVTLB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/INVTLB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/INVTLB.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/INVTLB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/INVTLB.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/INVTLB.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/INVTLB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/INVTLB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/INVTLB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/main\/INVTLB.html", "kind" : "class"}, {"name" : "modules.ITLB.main.ITLB", "shortDescription" : "", "members_class" : [{"label" : "readLine", "tail" : ": UInt", "member" : "modules.ITLB.main.ITLB.readLine", "link" : "modules\/ITLB\/main\/ITLB.html#readLine:chisel3.UInt", "kind" : "val"}, {"label" : "entry", "tail" : ": TLBTransField", "member" : "modules.ITLB.main.ITLB.entry", "link" : "modules\/ITLB\/main\/ITLB.html#entry:modules.ITLB.main.TLBTransField", "kind" : "val"}, {"label" : "result", "tail" : ": TLBEntry", "member" : "modules.ITLB.main.ITLB.result", "link" : "modules\/ITLB\/main\/ITLB.html#result:modules.ITLB.main.TLBEntry", "kind" : "val"}, {"label" : "hitIndex", "tail" : ": UInt", "member" : "modules.ITLB.main.ITLB.hitIndex", "link" : "modules\/ITLB\/main\/ITLB.html#hitIndex:chisel3.UInt", "kind" : "val"}, {"label" : "hit", "tail" : ": Bool", "member" : "modules.ITLB.main.ITLB.hit", "link" : "modules\/ITLB\/main\/ITLB.html#hit:chisel3.Bool", "kind" : "val"}, {"label" : "hitMap", "tail" : ": IndexedSeq[(Int, Bool)]", "member" : "modules.ITLB.main.ITLB.hitMap", "link" : "modules\/ITLB\/main\/ITLB.html#hitMap:IndexedSeq[(Int,chisel3.Bool)]", "kind" : "val"}, {"label" : "ASID", "tail" : ": UInt", "member" : "modules.ITLB.main.ITLB.ASID", "link" : "modules\/ITLB\/main\/ITLB.html#ASID:chisel3.UInt", "kind" : "val"}, {"label" : "vaddr", "tail" : ": UInt", "member" : "modules.ITLB.main.ITLB.vaddr", "link" : "modules\/ITLB\/main\/ITLB.html#vaddr:chisel3.UInt", "kind" : "val"}, {"label" : "TLBMem", "tail" : ": Mem[UInt]", "member" : "modules.ITLB.main.ITLB.TLBMem", "link" : "modules\/ITLB\/main\/ITLB.html#TLBMem:chisel3.Mem[chisel3.UInt]", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 5 definitions in type refinement *\/ }", "member" : "modules.ITLB.main.ITLB.io", "link" : "modules\/ITLB\/main\/ITLB.html#io:chisel3.Bundle{valmode:chisel3.UInt;valnormBundle:modules.ITLB.main.NORM;valtlbsrchBundle:modules.ITLB.main.TLBSRCH;valtlbrdBundle:modules.ITLB.main.TLBRD;valtlbwrBundle:modules.ITLB.main.TLBWR}", "kind" : "val"}, {"member" : "modules.ITLB.main.ITLB#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/ITLB\/main\/ITLB.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/ITLB\/main\/ITLB.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/ITLB\/main\/ITLB.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/ITLB\/main\/ITLB.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/ITLB\/main\/ITLB.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/ITLB\/main\/ITLB.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/ITLB\/main\/ITLB.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/ITLB\/main\/ITLB.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/ITLB\/main\/ITLB.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/ITLB\/main\/ITLB.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/ITLB\/main\/ITLB.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/ITLB\/main\/ITLB.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/ITLB\/main\/ITLB.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/ITLB\/main\/ITLB.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/ITLB\/main\/ITLB.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/ITLB\/main\/ITLB.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/ITLB\/main\/ITLB.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/ITLB\/main\/ITLB.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/ITLB\/main\/ITLB.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/ITLB\/main\/ITLB.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/ITLB\/main\/ITLB.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/ITLB\/main\/ITLB.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/ITLB\/main\/ITLB.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ITLB\/main\/ITLB.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ITLB\/main\/ITLB.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ITLB\/main\/ITLB.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ITLB\/main\/ITLB.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ITLB\/main\/ITLB.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ITLB.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ITLB\/main\/ITLB.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ITLB\/main\/ITLB.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ITLB\/main\/ITLB.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/ITLB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/ITLB.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/ITLB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/ITLB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/ITLB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/ITLB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/ITLB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/ITLB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/ITLB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/ITLB.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/ITLB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/ITLB.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ITLB\/main\/ITLB.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/ITLB.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/ITLB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/ITLB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/ITLB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/main\/ITLB.html", "kind" : "class"}, {"name" : "modules.ITLB.main.NORM", "shortDescription" : "", "members_class" : [{"label" : "paddrOut", "tail" : ": UInt", "member" : "modules.ITLB.main.NORM.paddrOut", "link" : "modules\/ITLB\/main\/NORM.html#paddrOut:chisel3.UInt", "kind" : "val"}, {"label" : "status", "tail" : ": UInt", "member" : "modules.ITLB.main.NORM.status", "link" : "modules\/ITLB\/main\/NORM.html#status:chisel3.UInt", "kind" : "val"}, {"label" : "vaddrInValid", "tail" : ": Bool", "member" : "modules.ITLB.main.NORM.vaddrInValid", "link" : "modules\/ITLB\/main\/NORM.html#vaddrInValid:chisel3.Bool", "kind" : "val"}, {"label" : "vaddrIn", "tail" : ": UInt", "member" : "modules.ITLB.main.NORM.vaddrIn", "link" : "modules\/ITLB\/main\/NORM.html#vaddrIn:chisel3.UInt", "kind" : "val"}, {"label" : "PLV", "tail" : ": UInt", "member" : "modules.ITLB.main.NORM.PLV", "link" : "modules\/ITLB\/main\/NORM.html#PLV:chisel3.UInt", "kind" : "val"}, {"label" : "ASID", "tail" : ": UInt", "member" : "modules.ITLB.main.NORM.ASID", "link" : "modules\/ITLB\/main\/NORM.html#ASID:chisel3.UInt", "kind" : "val"}, {"member" : "modules.ITLB.main.NORM#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ITLB\/main\/NORM.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ITLB\/main\/NORM.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): NORM.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ITLB\/main\/NORM.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ITLB\/main\/NORM.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ITLB\/main\/NORM.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ITLB\/main\/NORM.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ITLB\/main\/NORM.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ITLB\/main\/NORM.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ITLB\/main\/NORM.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ITLB\/main\/NORM.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ITLB\/main\/NORM.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ITLB\/main\/NORM.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/NORM.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/NORM.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ITLB\/main\/NORM.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ITLB\/main\/NORM.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ITLB\/main\/NORM.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ITLB\/main\/NORM.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ITLB\/main\/NORM.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/NORM.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/NORM.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ITLB\/main\/NORM.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/NORM.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/NORM.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ITLB\/main\/NORM.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ITLB\/main\/NORM.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ITLB\/main\/NORM.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ITLB\/main\/NORM.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ITLB\/main\/NORM.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): NORM.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ITLB\/main\/NORM.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ITLB\/main\/NORM.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ITLB\/main\/NORM.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ITLB\/main\/NORM.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ITLB\/main\/NORM.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ITLB\/main\/NORM.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ITLB\/main\/NORM.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ITLB\/main\/NORM.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ITLB\/main\/NORM.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ITLB\/main\/NORM.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): NORM.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ITLB\/main\/NORM.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ITLB\/main\/NORM.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ITLB\/main\/NORM.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/NORM.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/NORM.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/NORM.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/NORM.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/NORM.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/NORM.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/NORM.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/NORM.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/NORM.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/NORM.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/NORM.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/NORM.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/NORM.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/NORM.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/NORM.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/NORM.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/main\/NORM.html", "kind" : "class"}, {"name" : "modules.ITLB.main.TLBEntry", "shortDescription" : "", "object" : "modules\/ITLB\/main\/TLBEntry$.html", "members_class" : [{"label" : "ppn1", "tail" : ": TLBTransField", "member" : "modules.ITLB.main.TLBEntry.ppn1", "link" : "modules\/ITLB\/main\/TLBEntry.html#ppn1:modules.ITLB.main.TLBTransField", "kind" : "val"}, {"label" : "ppn0", "tail" : ": TLBTransField", "member" : "modules.ITLB.main.TLBEntry.ppn0", "link" : "modules\/ITLB\/main\/TLBEntry.html#ppn0:modules.ITLB.main.TLBTransField", "kind" : "val"}, {"label" : "index", "tail" : ": TLBIndexField", "member" : "modules.ITLB.main.TLBEntry.index", "link" : "modules\/ITLB\/main\/TLBEntry.html#index:modules.ITLB.main.TLBIndexField", "kind" : "val"}, {"member" : "modules.ITLB.main.TLBEntry#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ITLB\/main\/TLBEntry.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ITLB\/main\/TLBEntry.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): TLBEntry.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ITLB\/main\/TLBEntry.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ITLB\/main\/TLBEntry.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ITLB\/main\/TLBEntry.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ITLB\/main\/TLBEntry.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ITLB\/main\/TLBEntry.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ITLB\/main\/TLBEntry.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ITLB\/main\/TLBEntry.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ITLB\/main\/TLBEntry.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ITLB\/main\/TLBEntry.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ITLB\/main\/TLBEntry.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBEntry.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBEntry.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ITLB\/main\/TLBEntry.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ITLB\/main\/TLBEntry.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ITLB\/main\/TLBEntry.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ITLB\/main\/TLBEntry.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ITLB\/main\/TLBEntry.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBEntry.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBEntry.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ITLB\/main\/TLBEntry.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBEntry.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBEntry.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ITLB\/main\/TLBEntry.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ITLB\/main\/TLBEntry.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ITLB\/main\/TLBEntry.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ITLB\/main\/TLBEntry.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ITLB\/main\/TLBEntry.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): TLBEntry.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ITLB\/main\/TLBEntry.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ITLB\/main\/TLBEntry.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ITLB\/main\/TLBEntry.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ITLB\/main\/TLBEntry.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ITLB\/main\/TLBEntry.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ITLB\/main\/TLBEntry.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ITLB\/main\/TLBEntry.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ITLB\/main\/TLBEntry.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ITLB\/main\/TLBEntry.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ITLB\/main\/TLBEntry.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): TLBEntry.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ITLB\/main\/TLBEntry.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ITLB\/main\/TLBEntry.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ITLB\/main\/TLBEntry.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/TLBEntry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/TLBEntry.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/TLBEntry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/TLBEntry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/TLBEntry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/TLBEntry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/TLBEntry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBEntry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBEntry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBEntry.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/TLBEntry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/TLBEntry.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/TLBEntry.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/TLBEntry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/TLBEntry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/TLBEntry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getBundleWidth", "tail" : "(c: GlobalConfig): Int", "member" : "modules.ITLB.main.TLBEntry.getBundleWidth", "link" : "modules\/ITLB\/main\/TLBEntry$.html#getBundleWidth(implicitc:utils.GlobalConfigLoader.GlobalConfig):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/TLBEntry$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/TLBEntry$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/TLBEntry$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/TLBEntry$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/TLBEntry$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/TLBEntry$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/TLBEntry$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBEntry$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBEntry$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBEntry$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/TLBEntry$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/TLBEntry$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ITLB\/main\/TLBEntry$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/TLBEntry$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ITLB\/main\/TLBEntry$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ITLB\/main\/TLBEntry$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/TLBEntry$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/TLBEntry$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/TLBEntry$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/main\/TLBEntry.html", "kind" : "class"}, {"name" : "modules.ITLB.main.TLBIndexField", "shortDescription" : "", "object" : "modules\/ITLB\/main\/TLBIndexField$.html", "members_class" : [{"label" : "E", "tail" : ": Bool", "member" : "modules.ITLB.main.TLBIndexField.E", "link" : "modules\/ITLB\/main\/TLBIndexField.html#E:chisel3.Bool", "kind" : "val"}, {"label" : "ASID", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBIndexField.ASID", "link" : "modules\/ITLB\/main\/TLBIndexField.html#ASID:chisel3.UInt", "kind" : "val"}, {"label" : "G", "tail" : ": Bool", "member" : "modules.ITLB.main.TLBIndexField.G", "link" : "modules\/ITLB\/main\/TLBIndexField.html#G:chisel3.Bool", "kind" : "val"}, {"label" : "PS", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBIndexField.PS", "link" : "modules\/ITLB\/main\/TLBIndexField.html#PS:chisel3.UInt", "kind" : "val"}, {"label" : "VPPN", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBIndexField.VPPN", "link" : "modules\/ITLB\/main\/TLBIndexField.html#VPPN:chisel3.UInt", "kind" : "val"}, {"member" : "modules.ITLB.main.TLBIndexField#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ITLB\/main\/TLBIndexField.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ITLB\/main\/TLBIndexField.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): TLBIndexField.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ITLB\/main\/TLBIndexField.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ITLB\/main\/TLBIndexField.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ITLB\/main\/TLBIndexField.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ITLB\/main\/TLBIndexField.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ITLB\/main\/TLBIndexField.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ITLB\/main\/TLBIndexField.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ITLB\/main\/TLBIndexField.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ITLB\/main\/TLBIndexField.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ITLB\/main\/TLBIndexField.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ITLB\/main\/TLBIndexField.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBIndexField.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBIndexField.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ITLB\/main\/TLBIndexField.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ITLB\/main\/TLBIndexField.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ITLB\/main\/TLBIndexField.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ITLB\/main\/TLBIndexField.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ITLB\/main\/TLBIndexField.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBIndexField.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBIndexField.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ITLB\/main\/TLBIndexField.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBIndexField.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBIndexField.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ITLB\/main\/TLBIndexField.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ITLB\/main\/TLBIndexField.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ITLB\/main\/TLBIndexField.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ITLB\/main\/TLBIndexField.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ITLB\/main\/TLBIndexField.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): TLBIndexField.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ITLB\/main\/TLBIndexField.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ITLB\/main\/TLBIndexField.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ITLB\/main\/TLBIndexField.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ITLB\/main\/TLBIndexField.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ITLB\/main\/TLBIndexField.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ITLB\/main\/TLBIndexField.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ITLB\/main\/TLBIndexField.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ITLB\/main\/TLBIndexField.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ITLB\/main\/TLBIndexField.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ITLB\/main\/TLBIndexField.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): TLBIndexField.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ITLB\/main\/TLBIndexField.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ITLB\/main\/TLBIndexField.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ITLB\/main\/TLBIndexField.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/TLBIndexField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/TLBIndexField.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/TLBIndexField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/TLBIndexField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/TLBIndexField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/TLBIndexField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/TLBIndexField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBIndexField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBIndexField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBIndexField.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/TLBIndexField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/TLBIndexField.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/TLBIndexField.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/TLBIndexField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/TLBIndexField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/TLBIndexField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getBundleWidth", "tail" : "(c: GlobalConfig): Int", "member" : "modules.ITLB.main.TLBIndexField.getBundleWidth", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#getBundleWidth(implicitc:utils.GlobalConfigLoader.GlobalConfig):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/TLBIndexField$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/TLBIndexField$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/main\/TLBIndexField.html", "kind" : "class"}, {"name" : "modules.ITLB.main.TLBRD", "shortDescription" : "", "members_class" : [{"label" : "output", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBRD.output", "link" : "modules\/ITLB\/main\/TLBRD.html#output:chisel3.UInt", "kind" : "val"}, {"label" : "index", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBRD.index", "link" : "modules\/ITLB\/main\/TLBRD.html#index:chisel3.UInt", "kind" : "val"}, {"member" : "modules.ITLB.main.TLBRD#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ITLB\/main\/TLBRD.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ITLB\/main\/TLBRD.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): TLBRD.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ITLB\/main\/TLBRD.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ITLB\/main\/TLBRD.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ITLB\/main\/TLBRD.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ITLB\/main\/TLBRD.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ITLB\/main\/TLBRD.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ITLB\/main\/TLBRD.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ITLB\/main\/TLBRD.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ITLB\/main\/TLBRD.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ITLB\/main\/TLBRD.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ITLB\/main\/TLBRD.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBRD.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBRD.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ITLB\/main\/TLBRD.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ITLB\/main\/TLBRD.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ITLB\/main\/TLBRD.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ITLB\/main\/TLBRD.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ITLB\/main\/TLBRD.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBRD.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBRD.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ITLB\/main\/TLBRD.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBRD.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBRD.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ITLB\/main\/TLBRD.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ITLB\/main\/TLBRD.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ITLB\/main\/TLBRD.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ITLB\/main\/TLBRD.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ITLB\/main\/TLBRD.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): TLBRD.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ITLB\/main\/TLBRD.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ITLB\/main\/TLBRD.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ITLB\/main\/TLBRD.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ITLB\/main\/TLBRD.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ITLB\/main\/TLBRD.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ITLB\/main\/TLBRD.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ITLB\/main\/TLBRD.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ITLB\/main\/TLBRD.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ITLB\/main\/TLBRD.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ITLB\/main\/TLBRD.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): TLBRD.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ITLB\/main\/TLBRD.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ITLB\/main\/TLBRD.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ITLB\/main\/TLBRD.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/TLBRD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/TLBRD.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/TLBRD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/TLBRD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/TLBRD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/TLBRD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/TLBRD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBRD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBRD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBRD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/TLBRD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/TLBRD.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/TLBRD.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/TLBRD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/TLBRD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/TLBRD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/main\/TLBRD.html", "kind" : "class"}, {"name" : "modules.ITLB.main.TLBSRCH", "shortDescription" : "", "members_class" : [{"label" : "e", "tail" : ": Bool", "member" : "modules.ITLB.main.TLBSRCH.e", "link" : "modules\/ITLB\/main\/TLBSRCH.html#e:chisel3.Bool", "kind" : "val"}, {"label" : "index", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBSRCH.index", "link" : "modules\/ITLB\/main\/TLBSRCH.html#index:chisel3.UInt", "kind" : "val"}, {"label" : "VPPN", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBSRCH.VPPN", "link" : "modules\/ITLB\/main\/TLBSRCH.html#VPPN:chisel3.UInt", "kind" : "val"}, {"label" : "ASID", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBSRCH.ASID", "link" : "modules\/ITLB\/main\/TLBSRCH.html#ASID:chisel3.UInt", "kind" : "val"}, {"member" : "modules.ITLB.main.TLBSRCH#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ITLB\/main\/TLBSRCH.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ITLB\/main\/TLBSRCH.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): TLBSRCH.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ITLB\/main\/TLBSRCH.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ITLB\/main\/TLBSRCH.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ITLB\/main\/TLBSRCH.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ITLB\/main\/TLBSRCH.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ITLB\/main\/TLBSRCH.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ITLB\/main\/TLBSRCH.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ITLB\/main\/TLBSRCH.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ITLB\/main\/TLBSRCH.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ITLB\/main\/TLBSRCH.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ITLB\/main\/TLBSRCH.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBSRCH.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBSRCH.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ITLB\/main\/TLBSRCH.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ITLB\/main\/TLBSRCH.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ITLB\/main\/TLBSRCH.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ITLB\/main\/TLBSRCH.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ITLB\/main\/TLBSRCH.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBSRCH.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBSRCH.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ITLB\/main\/TLBSRCH.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBSRCH.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBSRCH.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ITLB\/main\/TLBSRCH.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ITLB\/main\/TLBSRCH.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ITLB\/main\/TLBSRCH.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ITLB\/main\/TLBSRCH.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ITLB\/main\/TLBSRCH.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): TLBSRCH.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ITLB\/main\/TLBSRCH.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ITLB\/main\/TLBSRCH.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ITLB\/main\/TLBSRCH.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ITLB\/main\/TLBSRCH.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ITLB\/main\/TLBSRCH.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ITLB\/main\/TLBSRCH.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ITLB\/main\/TLBSRCH.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ITLB\/main\/TLBSRCH.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ITLB\/main\/TLBSRCH.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ITLB\/main\/TLBSRCH.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): TLBSRCH.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ITLB\/main\/TLBSRCH.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ITLB\/main\/TLBSRCH.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ITLB\/main\/TLBSRCH.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/TLBSRCH.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/TLBSRCH.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/TLBSRCH.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/TLBSRCH.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/TLBSRCH.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/TLBSRCH.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/TLBSRCH.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBSRCH.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBSRCH.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBSRCH.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/TLBSRCH.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/TLBSRCH.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/TLBSRCH.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/TLBSRCH.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/TLBSRCH.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/TLBSRCH.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/main\/TLBSRCH.html", "kind" : "class"}, {"name" : "modules.ITLB.main.TLBTransField", "shortDescription" : "", "object" : "modules\/ITLB\/main\/TLBTransField$.html", "members_class" : [{"label" : "V", "tail" : ": Bool", "member" : "modules.ITLB.main.TLBTransField.V", "link" : "modules\/ITLB\/main\/TLBTransField.html#V:chisel3.Bool", "kind" : "val"}, {"label" : "D", "tail" : ": Bool", "member" : "modules.ITLB.main.TLBTransField.D", "link" : "modules\/ITLB\/main\/TLBTransField.html#D:chisel3.Bool", "kind" : "val"}, {"label" : "MAT", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBTransField.MAT", "link" : "modules\/ITLB\/main\/TLBTransField.html#MAT:chisel3.UInt", "kind" : "val"}, {"label" : "PLV", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBTransField.PLV", "link" : "modules\/ITLB\/main\/TLBTransField.html#PLV:chisel3.UInt", "kind" : "val"}, {"label" : "PPN", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBTransField.PPN", "link" : "modules\/ITLB\/main\/TLBTransField.html#PPN:chisel3.UInt", "kind" : "val"}, {"member" : "modules.ITLB.main.TLBTransField#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ITLB\/main\/TLBTransField.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ITLB\/main\/TLBTransField.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): TLBTransField.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ITLB\/main\/TLBTransField.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ITLB\/main\/TLBTransField.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ITLB\/main\/TLBTransField.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ITLB\/main\/TLBTransField.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ITLB\/main\/TLBTransField.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ITLB\/main\/TLBTransField.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ITLB\/main\/TLBTransField.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ITLB\/main\/TLBTransField.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ITLB\/main\/TLBTransField.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ITLB\/main\/TLBTransField.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBTransField.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBTransField.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ITLB\/main\/TLBTransField.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ITLB\/main\/TLBTransField.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ITLB\/main\/TLBTransField.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ITLB\/main\/TLBTransField.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ITLB\/main\/TLBTransField.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBTransField.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBTransField.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ITLB\/main\/TLBTransField.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBTransField.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBTransField.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ITLB\/main\/TLBTransField.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ITLB\/main\/TLBTransField.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ITLB\/main\/TLBTransField.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ITLB\/main\/TLBTransField.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ITLB\/main\/TLBTransField.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): TLBTransField.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ITLB\/main\/TLBTransField.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ITLB\/main\/TLBTransField.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ITLB\/main\/TLBTransField.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ITLB\/main\/TLBTransField.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ITLB\/main\/TLBTransField.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ITLB\/main\/TLBTransField.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ITLB\/main\/TLBTransField.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ITLB\/main\/TLBTransField.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ITLB\/main\/TLBTransField.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ITLB\/main\/TLBTransField.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): TLBTransField.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ITLB\/main\/TLBTransField.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ITLB\/main\/TLBTransField.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ITLB\/main\/TLBTransField.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/TLBTransField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/TLBTransField.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/TLBTransField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/TLBTransField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/TLBTransField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/TLBTransField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/TLBTransField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBTransField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBTransField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBTransField.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/TLBTransField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/TLBTransField.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/TLBTransField.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/TLBTransField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/TLBTransField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/TLBTransField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getBundleWidth", "tail" : "(c: GlobalConfig): Int", "member" : "modules.ITLB.main.TLBTransField.getBundleWidth", "link" : "modules\/ITLB\/main\/TLBTransField$.html#getBundleWidth(implicitc:utils.GlobalConfigLoader.GlobalConfig):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/TLBTransField$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/TLBTransField$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/TLBTransField$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/TLBTransField$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/TLBTransField$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/TLBTransField$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/TLBTransField$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBTransField$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBTransField$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBTransField$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/TLBTransField$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/TLBTransField$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ITLB\/main\/TLBTransField$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/TLBTransField$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ITLB\/main\/TLBTransField$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ITLB\/main\/TLBTransField$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/TLBTransField$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/TLBTransField$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/TLBTransField$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/main\/TLBTransField.html", "kind" : "class"}, {"name" : "modules.ITLB.main.TLBWR", "shortDescription" : "", "members_class" : [{"label" : "input", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBWR.input", "link" : "modules\/ITLB\/main\/TLBWR.html#input:chisel3.UInt", "kind" : "val"}, {"label" : "index", "tail" : ": UInt", "member" : "modules.ITLB.main.TLBWR.index", "link" : "modules\/ITLB\/main\/TLBWR.html#index:chisel3.UInt", "kind" : "val"}, {"member" : "modules.ITLB.main.TLBWR#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ITLB\/main\/TLBWR.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ITLB\/main\/TLBWR.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): TLBWR.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ITLB\/main\/TLBWR.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ITLB\/main\/TLBWR.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ITLB\/main\/TLBWR.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ITLB\/main\/TLBWR.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ITLB\/main\/TLBWR.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ITLB\/main\/TLBWR.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ITLB\/main\/TLBWR.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ITLB\/main\/TLBWR.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ITLB\/main\/TLBWR.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ITLB\/main\/TLBWR.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBWR.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ITLB\/main\/TLBWR.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ITLB\/main\/TLBWR.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ITLB\/main\/TLBWR.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ITLB\/main\/TLBWR.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ITLB\/main\/TLBWR.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ITLB\/main\/TLBWR.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBWR.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ITLB\/main\/TLBWR.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ITLB\/main\/TLBWR.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBWR.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ITLB\/main\/TLBWR.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ITLB\/main\/TLBWR.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ITLB\/main\/TLBWR.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ITLB\/main\/TLBWR.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ITLB\/main\/TLBWR.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ITLB\/main\/TLBWR.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): TLBWR.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ITLB\/main\/TLBWR.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ITLB\/main\/TLBWR.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ITLB\/main\/TLBWR.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ITLB\/main\/TLBWR.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ITLB\/main\/TLBWR.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ITLB\/main\/TLBWR.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ITLB\/main\/TLBWR.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ITLB\/main\/TLBWR.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ITLB\/main\/TLBWR.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ITLB\/main\/TLBWR.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): TLBWR.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ITLB\/main\/TLBWR.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ITLB\/main\/TLBWR.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ITLB\/main\/TLBWR.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/main\/TLBWR.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/main\/TLBWR.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/main\/TLBWR.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/main\/TLBWR.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/main\/TLBWR.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/main\/TLBWR.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/main\/TLBWR.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBWR.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBWR.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/main\/TLBWR.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/main\/TLBWR.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/main\/TLBWR.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/main\/TLBWR.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/main\/TLBWR.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/main\/TLBWR.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/main\/TLBWR.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/main\/TLBWR.html", "kind" : "class"}], "utest" : [], "modules.AXI4" : [{"name" : "modules.AXI4.AXI4Test", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/AXI4\/AXI4Test.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/AXI4\/AXI4Test.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/AXI4\/AXI4Test.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/AXI4\/AXI4Test.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/AXI4\/AXI4Test.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/AXI4\/AXI4Test.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/AXI4\/AXI4Test.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/AXI4\/AXI4Test.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/AXI4\/AXI4Test.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/AXI4\/AXI4Test.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/AXI4\/AXI4Test.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/AXI4\/AXI4Test.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/AXI4\/AXI4Test.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/AXI4\/AXI4Test.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/AXI4\/AXI4Test.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/AXI4\/AXI4Test.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/AXI4\/AXI4Test.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/AXI4\/AXI4Test.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "modules\/AXI4\/AXI4Test.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/AXI4\/AXI4Test.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/AXI4\/AXI4Test.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/AXI4\/AXI4Test.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/AXI4\/AXI4Test.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/AXI4\/AXI4Test.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/AXI4\/AXI4Test.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/AXI4\/AXI4Test.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/AXI4\/AXI4Test.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/AXI4\/AXI4Test.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/AXI4\/AXI4Test.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/AXI4\/AXI4Test.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/AXI4\/AXI4Test.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/AXI4\/AXI4Test.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/AXI4\/AXI4Test.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/AXI4\/AXI4Test.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/AXI4\/AXI4Test.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/AXI4\/AXI4Test.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/AXI4\/AXI4Test.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "AXI4BurstTest", "tail" : "", "member" : "modules.AXI4.AXI4Test.AXI4BurstTest", "link" : "modules\/AXI4\/AXI4Test.html#AXI4BurstTestextendsAXI4Test.this.AXI4Transmit", "kind" : "class"}, {"label" : "AXI4TransmitTest", "tail" : "", "member" : "modules.AXI4.AXI4Test.AXI4TransmitTest", "link" : "modules\/AXI4\/AXI4Test.html#AXI4TransmitTestextendsAXI4Test.this.AXI4Transmit", "kind" : "class"}, {"label" : "AXI4TransmitSlave", "tail" : "", "member" : "modules.AXI4.AXI4Test.AXI4TransmitSlave", "link" : "modules\/AXI4\/AXI4Test.html#AXI4TransmitSlaveextendsAXI4Test.this.AXI4Transmit", "kind" : "class"}, {"label" : "AXI4TransmitMaster", "tail" : "", "member" : "modules.AXI4.AXI4Test.AXI4TransmitMaster", "link" : "modules\/AXI4\/AXI4Test.html#AXI4TransmitMasterextendsAXI4Test.this.AXI4Transmit", "kind" : "class"}, {"label" : "AXI4Transmit", "tail" : "", "member" : "modules.AXI4.AXI4Test.AXI4Transmit", "link" : "modules\/AXI4\/AXI4Test.html#AXI4TransmitextendsModule", "kind" : "class"}, {"label" : "AXI4ConnectionTest", "tail" : "", "member" : "modules.AXI4.AXI4Test.AXI4ConnectionTest", "link" : "modules\/AXI4\/AXI4Test.html#AXI4ConnectionTestextendsModule", "kind" : "class"}, {"member" : "modules.AXI4.AXI4Test#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/AXI4\/AXI4Test.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/AXI4\/AXI4Test.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/AXI4\/AXI4Test.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/AXI4\/AXI4Test.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/AXI4\/AXI4Test.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/AXI4\/AXI4Test.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/AXI4\/AXI4Test.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/AXI4\/AXI4Test.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/AXI4\/AXI4Test.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/AXI4\/AXI4Test.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/AXI4\/AXI4Test.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/AXI4\/AXI4Test.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/AXI4\/AXI4Test.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/AXI4\/AXI4Test.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/AXI4\/AXI4Test.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/AXI4\/AXI4Test.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/AXI4\/AXI4Test.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/AXI4\/AXI4Test.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/AXI4\/AXI4Test.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/AXI4\/AXI4Test.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/AXI4\/AXI4Test.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/AXI4\/AXI4Test.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/AXI4\/AXI4Test.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/AXI4\/AXI4Test.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/AXI4\/AXI4Test.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/AXI4\/AXI4Test.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/AXI4\/AXI4Test.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/AXI4\/AXI4Test.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/AXI4\/AXI4Test.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/AXI4\/AXI4Test.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/AXI4\/AXI4Test.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/AXI4\/AXI4Test.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/AXI4\/AXI4Test.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/AXI4\/AXI4Test.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/AXI4\/AXI4Test.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/AXI4\/AXI4Test.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/AXI4\/AXI4Test.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/AXI4\/AXI4Test.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/AXI4\/AXI4Test.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/AXI4\/AXI4Test.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/AXI4\/AXI4Test.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/AXI4\/AXI4Test.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/AXI4\/AXI4Test.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/AXI4\/AXI4Test.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/AXI4\/AXI4Test.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/AXI4\/AXI4Test.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/AXI4\/AXI4Test.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/AXI4\/AXI4Test.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/AXI4\/AXI4Test.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/AXI4\/AXI4Test.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/AXI4\/AXI4Test.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/AXI4\/AXI4Test.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/AXI4\/AXI4Test.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/AXI4\/AXI4Test.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/AXI4\/AXI4Test.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/AXI4\/AXI4Test.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/AXI4\/AXI4Test.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/AXI4\/AXI4Test.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/AXI4\/AXI4Test.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/AXI4\/AXI4Test.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/AXI4\/AXI4Test.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/AXI4\/AXI4Test.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/AXI4\/AXI4Test.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/AXI4\/AXI4Test.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/AXI4\/AXI4Test.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/AXI4\/AXI4Test.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/AXI4\/AXI4Test.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/AXI4\/AXI4Test.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/AXI4\/AXI4Test.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/AXI4\/AXI4Test.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/AXI4\/AXI4Test.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/AXI4\/AXI4Test.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/AXI4\/AXI4Test.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/AXI4\/AXI4Test.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/AXI4\/AXI4Test.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/AXI4\/AXI4Test.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/AXI4\/AXI4Test.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/AXI4\/AXI4Test.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/AXI4\/AXI4Test.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/AXI4\/AXI4Test.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/AXI4\/AXI4Test.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/AXI4\/AXI4Test.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/AXI4\/AXI4Test.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/AXI4\/AXI4Test.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/AXI4\/AXI4Test.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/AXI4\/AXI4Test.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/AXI4\/AXI4Test.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/AXI4\/AXI4Test.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/AXI4\/AXI4Test.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/AXI4\/AXI4Test.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "modules\/AXI4\/AXI4Test.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "modules\/AXI4\/AXI4Test.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "modules\/AXI4\/AXI4Test.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "modules\/AXI4\/AXI4Test.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "modules\/AXI4\/AXI4Test.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "modules\/AXI4\/AXI4Test.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "modules\/AXI4\/AXI4Test.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "modules\/AXI4\/AXI4Test.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "modules\/AXI4\/AXI4Test.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "modules\/AXI4\/AXI4Test.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/AXI4\/AXI4Test.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/AXI4\/AXI4Test.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/AXI4\/AXI4Test.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/AXI4\/AXI4Test.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/AXI4\/AXI4Test.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/AXI4\/AXI4Test.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/AXI4\/AXI4Test.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/AXI4\/AXI4Test.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/AXI4\/AXI4Test.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/AXI4\/AXI4Test.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/AXI4\/AXI4Test.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/AXI4\/AXI4Test.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/AXI4\/AXI4Test.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/AXI4\/AXI4Test.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/AXI4\/AXI4Test.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/AXI4\/AXI4Test.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/AXI4\/AXI4Test.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/AXI4\/AXI4Test.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/AXI4\/AXI4Test.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/AXI4\/AXI4Test.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/AXI4\/AXI4Test.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/AXI4\/AXI4Test.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/AXI4\/AXI4Test.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/AXI4\/AXI4Test.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/AXI4\/AXI4Test.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/AXI4\/AXI4Test.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/AXI4\/AXI4Test.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/AXI4\/AXI4Test.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/AXI4\/AXI4Test.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/AXI4\/AXI4Test.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/AXI4\/AXI4Test.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/AXI4\/AXI4Test.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/AXI4\/AXI4Test.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/AXI4\/AXI4Test.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/AXI4\/AXI4Test.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/AXI4\/AXI4Test.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/AXI4\/AXI4Test.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/AXI4\/AXI4Test.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/AXI4\/AXI4Test.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/AXI4\/AXI4Test.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/AXI4\/AXI4Test.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/AXI4\/AXI4Test.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/AXI4\/AXI4Test.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/AXI4\/AXI4Test.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/AXI4\/AXI4Test.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/AXI4\/AXI4Test.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/AXI4\/AXI4Test.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/AXI4\/AXI4Test.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/AXI4\/AXI4Test.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/AXI4\/AXI4Test.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/AXI4\/AXI4Test.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/AXI4\/AXI4Test.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/AXI4\/AXI4Test.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/AXI4\/AXI4Test.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/AXI4\/AXI4Test.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/AXI4\/AXI4Test.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/AXI4\/AXI4Test.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/AXI4\/AXI4Test.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/AXI4\/AXI4Test.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/AXI4\/AXI4Test.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/AXI4\/AXI4Test.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/AXI4\/AXI4Test.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/AXI4\/AXI4Test.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/AXI4\/AXI4Test.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/AXI4\/AXI4Test.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/AXI4\/AXI4Test.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/AXI4\/AXI4Test.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/AXI4\/AXI4Test.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/AXI4\/AXI4Test.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/AXI4\/AXI4Test.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/AXI4\/AXI4Test.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/AXI4\/AXI4Test.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/AXI4\/AXI4Test.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/AXI4\/AXI4Test.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/AXI4Test.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/AXI4Test.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/AXI4Test.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/AXI4Test.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/AXI4Test.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/AXI4Test.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/AXI4Test.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/AXI4Test.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/AXI4Test.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/AXI4Test.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/AXI4Test.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/AXI4Test.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/AXI4Test.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/AXI4\/AXI4Test.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/AXI4\/AXI4Test.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/AXI4Test.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/AXI4Test.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/AXI4Test.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/AXI4Test.html", "kind" : "class"}], "modules" : [], "modules.Cache" : [{"name" : "modules.Cache.CacheConnectionTester", "shortDescription" : "", "members_class" : [{"label" : "interfaceWatcher", "tail" : ": ChiBusInterfaceWatcher[CacheChannel]", "member" : "modules.Cache.CacheConnectionTester.interfaceWatcher", "link" : "modules\/Cache\/CacheConnectionTester.html#interfaceWatcher:modules.ChiBus.main.ChiBusInterfaceWatcher[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"label" : "slaveModule", "tail" : ": ChiBusTestConnectSlave", "member" : "modules.Cache.CacheConnectionTester.slaveModule", "link" : "modules\/Cache\/CacheConnectionTester.html#slaveModule:modules.Cache.ChiBusTestConnectSlave", "kind" : "val"}, {"label" : "masterModule", "tail" : ": ChiBusTestConnectMaster", "member" : "modules.Cache.CacheConnectionTester.masterModule", "link" : "modules\/Cache\/CacheConnectionTester.html#masterModule:modules.Cache.ChiBusTestConnectMaster", "kind" : "val"}, {"member" : "modules.Cache.CacheConnectionTester#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Cache\/CacheConnectionTester.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Cache\/CacheConnectionTester.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Cache\/CacheConnectionTester.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Cache\/CacheConnectionTester.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Cache\/CacheConnectionTester.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Cache\/CacheConnectionTester.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Cache\/CacheConnectionTester.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Cache\/CacheConnectionTester.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Cache\/CacheConnectionTester.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Cache\/CacheConnectionTester.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Cache\/CacheConnectionTester.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Cache\/CacheConnectionTester.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Cache\/CacheConnectionTester.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Cache\/CacheConnectionTester.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Cache\/CacheConnectionTester.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Cache\/CacheConnectionTester.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Cache\/CacheConnectionTester.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Cache\/CacheConnectionTester.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Cache\/CacheConnectionTester.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Cache\/CacheConnectionTester.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Cache\/CacheConnectionTester.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Cache\/CacheConnectionTester.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Cache\/CacheConnectionTester.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/CacheConnectionTester.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/CacheConnectionTester.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/CacheConnectionTester.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/CacheConnectionTester.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/CacheConnectionTester.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CacheConnectionTester.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/CacheConnectionTester.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/CacheConnectionTester.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/CacheConnectionTester.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/CacheConnectionTester.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/CacheConnectionTester.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/CacheConnectionTester.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/CacheConnectionTester.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/CacheConnectionTester.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/CacheConnectionTester.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/CacheConnectionTester.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheConnectionTester.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheConnectionTester.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheConnectionTester.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/CacheConnectionTester.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/CacheConnectionTester.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/CacheConnectionTester.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/CacheConnectionTester.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/CacheConnectionTester.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/CacheConnectionTester.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/CacheConnectionTester.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/CacheConnectionTester.html", "kind" : "class"}, {"name" : "modules.Cache.CacheLowerLayer", "shortDescription" : "", "members_class" : [{"label" : "requestedAddress", "tail" : ": CacheAddrWire", "member" : "modules.Cache.CacheLowerLayer.requestedAddress", "link" : "modules\/Cache\/CacheLowerLayer.html#requestedAddress:modules.Cache.main.CacheAddrWire", "kind" : "val"}, {"label" : "stateMatrix", "tail" : ": Seq[(UInt, UInt)]", "member" : "modules.Cache.CacheLowerLayer.stateMatrix", "link" : "modules\/Cache\/CacheLowerLayer.html#stateMatrix:Seq[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "nextState", "tail" : ": UInt", "member" : "modules.Cache.CacheLowerLayer.nextState", "link" : "modules\/Cache\/CacheLowerLayer.html#nextState:chisel3.UInt", "kind" : "val"}, {"label" : "state", "tail" : ": UInt", "member" : "modules.Cache.CacheLowerLayer.state", "link" : "modules\/Cache\/CacheLowerLayer.html#state:chisel3.UInt", "kind" : "val"}, {"label" : "readingState", "tail" : ": UInt", "member" : "modules.Cache.CacheLowerLayer.readingState", "link" : "modules\/Cache\/CacheLowerLayer.html#readingState:chisel3.UInt", "kind" : "val"}, {"label" : "idleState", "tail" : ": UInt", "member" : "modules.Cache.CacheLowerLayer.idleState", "link" : "modules\/Cache\/CacheLowerLayer.html#idleState:chisel3.UInt", "kind" : "val"}, {"label" : "states", "tail" : ": List[UInt]", "member" : "modules.Cache.CacheLowerLayer.states", "link" : "modules\/Cache\/CacheLowerLayer.html#states:List[chisel3.UInt]", "kind" : "val"}, {"label" : "delay", "tail" : ": Int", "member" : "modules.Cache.CacheLowerLayer.delay", "link" : "modules\/Cache\/CacheLowerLayer.html#delay:Int", "kind" : "val"}, {"label" : "cnt", "tail" : ": UInt", "member" : "modules.Cache.CacheLowerLayer.cnt", "link" : "modules\/Cache\/CacheLowerLayer.html#cnt:chisel3.UInt", "kind" : "val"}, {"label" : "getChiBusSlavePort", "tail" : "(): ChiBusSlave[CacheChannel]", "member" : "modules.Cache.CacheLowerLayer.getChiBusSlavePort", "link" : "modules\/Cache\/CacheLowerLayer.html#getChiBusSlavePort:modules.ChiBus.main.ChiBusSlave[modules.Cache.main.CacheChannel]", "kind" : "def"}, {"label" : "chiBusSlave", "tail" : ": ChiBusSlave[CacheChannel]", "member" : "modules.Cache.CacheLowerLayer.chiBusSlave", "link" : "modules\/Cache\/CacheLowerLayer.html#chiBusSlave:modules.ChiBus.main.ChiBusSlave[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"member" : "modules.Cache.CacheLowerLayer#<init>", "error" : "unsupported entity"}, {"label" : "connectMaster", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusSlavePort.connectMaster", "link" : "modules\/Cache\/CacheLowerLayer.html#connectMaster[T2<:modules.ChiBus.main.WithChiBusMasterPort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Cache\/CacheLowerLayer.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Cache\/CacheLowerLayer.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Cache\/CacheLowerLayer.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Cache\/CacheLowerLayer.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Cache\/CacheLowerLayer.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Cache\/CacheLowerLayer.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Cache\/CacheLowerLayer.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Cache\/CacheLowerLayer.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Cache\/CacheLowerLayer.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Cache\/CacheLowerLayer.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Cache\/CacheLowerLayer.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Cache\/CacheLowerLayer.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Cache\/CacheLowerLayer.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Cache\/CacheLowerLayer.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Cache\/CacheLowerLayer.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Cache\/CacheLowerLayer.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Cache\/CacheLowerLayer.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Cache\/CacheLowerLayer.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Cache\/CacheLowerLayer.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Cache\/CacheLowerLayer.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Cache\/CacheLowerLayer.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Cache\/CacheLowerLayer.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Cache\/CacheLowerLayer.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/CacheLowerLayer.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/CacheLowerLayer.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/CacheLowerLayer.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/CacheLowerLayer.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/CacheLowerLayer.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CacheLowerLayer.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/CacheLowerLayer.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/CacheLowerLayer.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/CacheLowerLayer.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/CacheLowerLayer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/CacheLowerLayer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/CacheLowerLayer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/CacheLowerLayer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/CacheLowerLayer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/CacheLowerLayer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/CacheLowerLayer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheLowerLayer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheLowerLayer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheLowerLayer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/CacheLowerLayer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/CacheLowerLayer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/CacheLowerLayer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/CacheLowerLayer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/CacheLowerLayer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/CacheLowerLayer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/CacheLowerLayer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/CacheLowerLayer.html", "kind" : "class"}, {"name" : "modules.Cache.CacheTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/Cache\/CacheTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/Cache\/CacheTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/Cache\/CacheTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/Cache\/CacheTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/Cache\/CacheTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/Cache\/CacheTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/Cache\/CacheTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/Cache\/CacheTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/Cache\/CacheTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/Cache\/CacheTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/Cache\/CacheTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/Cache\/CacheTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/Cache\/CacheTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/Cache\/CacheTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/Cache\/CacheTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/Cache\/CacheTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/Cache\/CacheTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/Cache\/CacheTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/Cache\/CacheTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/Cache\/CacheTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/Cache\/CacheTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/Cache\/CacheTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/Cache\/CacheTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/Cache\/CacheTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/Cache\/CacheTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/Cache\/CacheTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/Cache\/CacheTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/Cache\/CacheTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/Cache\/CacheTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/Cache\/CacheTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/Cache\/CacheTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/Cache\/CacheTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/Cache\/CacheTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "modules\/Cache\/CacheTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Cache\/CacheTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/Cache\/CacheTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/Cache\/CacheTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/Cache\/CacheTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/Cache\/CacheTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/Cache\/CacheTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/Cache\/CacheTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/Cache\/CacheTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/Cache\/CacheTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/Cache\/CacheTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/Cache\/CacheTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/Cache\/CacheTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/Cache\/CacheTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/Cache\/CacheTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/Cache\/CacheTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/Cache\/CacheTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/Cache\/CacheTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/Cache\/CacheTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "modules.Cache.CacheTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/Cache\/CacheTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/Cache\/CacheTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/Cache\/CacheTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/Cache\/CacheTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/Cache\/CacheTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Cache\/CacheTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Cache\/CacheTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Cache\/CacheTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Cache\/CacheTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Cache\/CacheTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Cache\/CacheTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Cache\/CacheTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Cache\/CacheTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Cache\/CacheTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Cache\/CacheTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Cache\/CacheTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Cache\/CacheTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Cache\/CacheTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Cache\/CacheTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Cache\/CacheTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Cache\/CacheTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Cache\/CacheTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Cache\/CacheTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Cache\/CacheTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Cache\/CacheTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Cache\/CacheTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Cache\/CacheTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Cache\/CacheTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Cache\/CacheTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Cache\/CacheTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Cache\/CacheTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Cache\/CacheTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Cache\/CacheTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/Cache\/CacheTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/Cache\/CacheTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/Cache\/CacheTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/Cache\/CacheTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/Cache\/CacheTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/Cache\/CacheTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/Cache\/CacheTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/Cache\/CacheTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/Cache\/CacheTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/Cache\/CacheTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/Cache\/CacheTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/Cache\/CacheTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/Cache\/CacheTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/Cache\/CacheTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/Cache\/CacheTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/Cache\/CacheTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/Cache\/CacheTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/Cache\/CacheTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/Cache\/CacheTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/Cache\/CacheTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/Cache\/CacheTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/Cache\/CacheTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/Cache\/CacheTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/Cache\/CacheTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/Cache\/CacheTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Cache\/CacheTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Cache\/CacheTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/Cache\/CacheTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/Cache\/CacheTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Cache\/CacheTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Cache\/CacheTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/Cache\/CacheTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/Cache\/CacheTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/Cache\/CacheTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/Cache\/CacheTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/Cache\/CacheTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/Cache\/CacheTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/Cache\/CacheTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/Cache\/CacheTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/Cache\/CacheTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/Cache\/CacheTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/Cache\/CacheTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/Cache\/CacheTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/Cache\/CacheTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/Cache\/CacheTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/Cache\/CacheTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/Cache\/CacheTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/Cache\/CacheTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/Cache\/CacheTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/Cache\/CacheTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/Cache\/CacheTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/Cache\/CacheTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/Cache\/CacheTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/Cache\/CacheTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/Cache\/CacheTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/Cache\/CacheTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/Cache\/CacheTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "modules\/Cache\/CacheTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "modules\/Cache\/CacheTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "modules\/Cache\/CacheTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "modules\/Cache\/CacheTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "modules\/Cache\/CacheTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "modules\/Cache\/CacheTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "modules\/Cache\/CacheTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "modules\/Cache\/CacheTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "modules\/Cache\/CacheTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "modules\/Cache\/CacheTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/Cache\/CacheTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/Cache\/CacheTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/Cache\/CacheTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/Cache\/CacheTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/Cache\/CacheTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/Cache\/CacheTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/Cache\/CacheTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/Cache\/CacheTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/Cache\/CacheTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/Cache\/CacheTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/Cache\/CacheTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Cache\/CacheTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/Cache\/CacheTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/Cache\/CacheTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/Cache\/CacheTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/Cache\/CacheTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/Cache\/CacheTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/Cache\/CacheTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/Cache\/CacheTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/Cache\/CacheTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/Cache\/CacheTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/Cache\/CacheTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/Cache\/CacheTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/Cache\/CacheTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/Cache\/CacheTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/Cache\/CacheTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/Cache\/CacheTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/Cache\/CacheTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/Cache\/CacheTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/Cache\/CacheTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/Cache\/CacheTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/Cache\/CacheTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/Cache\/CacheTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/Cache\/CacheTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/Cache\/CacheTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/Cache\/CacheTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/Cache\/CacheTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Cache\/CacheTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Cache\/CacheTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Cache\/CacheTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Cache\/CacheTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Cache\/CacheTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Cache\/CacheTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Cache\/CacheTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Cache\/CacheTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Cache\/CacheTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Cache\/CacheTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/Cache\/CacheTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/Cache\/CacheTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/Cache\/CacheTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/Cache\/CacheTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/Cache\/CacheTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Cache\/CacheTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Cache\/CacheTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Cache\/CacheTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Cache\/CacheTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/Cache\/CacheTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/Cache\/CacheTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/Cache\/CacheTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/Cache\/CacheTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/Cache\/CacheTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/Cache\/CacheTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/Cache\/CacheTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/Cache\/CacheTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/Cache\/CacheTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/Cache\/CacheTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/Cache\/CacheTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Cache\/CacheTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Cache\/CacheTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Cache\/CacheTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Cache\/CacheTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Cache\/CacheTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Cache\/CacheTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/Cache\/CacheTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/CacheTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/CacheTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/CacheTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/CacheTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/CacheTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/CacheTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/CacheTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/CacheTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/CacheTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/CacheTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Cache\/CacheTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Cache\/CacheTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/CacheTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/CacheTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/CacheTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/CacheTest.html", "kind" : "class"}, {"name" : "modules.Cache.CacheTester", "shortDescription" : "", "members_class" : [{"label" : "memWatcher", "tail" : ": ChiBusInterfaceWatcher[CacheChannel]", "member" : "modules.Cache.CacheTester.memWatcher", "link" : "modules\/Cache\/CacheTester.html#memWatcher:modules.ChiBus.main.ChiBusInterfaceWatcher[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"label" : "busWatcher", "tail" : ": ChiBusInterfaceWatcher[CacheChannel]", "member" : "modules.Cache.CacheTester.busWatcher", "link" : "modules\/Cache\/CacheTester.html#busWatcher:modules.ChiBus.main.ChiBusInterfaceWatcher[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"label" : "lower", "tail" : ": CacheLowerLayer", "member" : "modules.Cache.CacheTester.lower", "link" : "modules\/Cache\/CacheTester.html#lower:modules.Cache.CacheLowerLayer", "kind" : "val"}, {"label" : "upper", "tail" : ": CacheUpperLayer", "member" : "modules.Cache.CacheTester.upper", "link" : "modules\/Cache\/CacheTester.html#upper:modules.Cache.CacheUpperLayer", "kind" : "val"}, {"label" : "cache", "tail" : ": Cache", "member" : "modules.Cache.CacheTester.cache", "link" : "modules\/Cache\/CacheTester.html#cache:modules.Cache.main.Cache", "kind" : "val"}, {"member" : "modules.Cache.CacheTester#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Cache\/CacheTester.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Cache\/CacheTester.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Cache\/CacheTester.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Cache\/CacheTester.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Cache\/CacheTester.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Cache\/CacheTester.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Cache\/CacheTester.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Cache\/CacheTester.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Cache\/CacheTester.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Cache\/CacheTester.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Cache\/CacheTester.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Cache\/CacheTester.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Cache\/CacheTester.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Cache\/CacheTester.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Cache\/CacheTester.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Cache\/CacheTester.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Cache\/CacheTester.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Cache\/CacheTester.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Cache\/CacheTester.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Cache\/CacheTester.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Cache\/CacheTester.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Cache\/CacheTester.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Cache\/CacheTester.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/CacheTester.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/CacheTester.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/CacheTester.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/CacheTester.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/CacheTester.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CacheTester.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/CacheTester.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/CacheTester.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/CacheTester.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/CacheTester.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/CacheTester.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/CacheTester.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/CacheTester.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/CacheTester.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/CacheTester.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/CacheTester.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheTester.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheTester.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheTester.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/CacheTester.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/CacheTester.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/CacheTester.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/CacheTester.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/CacheTester.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/CacheTester.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/CacheTester.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/CacheTester.html", "kind" : "class"}, {"name" : "modules.Cache.CacheUpperLayer", "shortDescription" : "", "members_class" : [{"label" : "getChiBusMasterPort", "tail" : "(): ChiBusMaster[CacheChannel]", "member" : "modules.Cache.CacheUpperLayer.getChiBusMasterPort", "link" : "modules\/Cache\/CacheUpperLayer.html#getChiBusMasterPort:modules.ChiBus.main.ChiBusMaster[modules.Cache.main.CacheChannel]", "kind" : "def"}, {"label" : "reading", "tail" : ": Bool", "member" : "modules.Cache.CacheUpperLayer.reading", "link" : "modules\/Cache\/CacheUpperLayer.html#reading:chisel3.Bool", "kind" : "val"}, {"label" : "cnt", "tail" : ": UInt", "member" : "modules.Cache.CacheUpperLayer.cnt", "link" : "modules\/Cache\/CacheUpperLayer.html#cnt:chisel3.UInt", "kind" : "val"}, {"label" : "chiBusMaster", "tail" : ": ChiBusMaster[CacheChannel]", "member" : "modules.Cache.CacheUpperLayer.chiBusMaster", "link" : "modules\/Cache\/CacheUpperLayer.html#chiBusMaster:modules.ChiBus.main.ChiBusMaster[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"member" : "modules.Cache.CacheUpperLayer#<init>", "error" : "unsupported entity"}, {"label" : "connectSlave", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusMasterPort.connectSlave", "link" : "modules\/Cache\/CacheUpperLayer.html#connectSlave[T2<:modules.ChiBus.main.WithChiBusSlavePort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Cache\/CacheUpperLayer.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Cache\/CacheUpperLayer.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Cache\/CacheUpperLayer.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Cache\/CacheUpperLayer.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Cache\/CacheUpperLayer.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Cache\/CacheUpperLayer.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Cache\/CacheUpperLayer.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Cache\/CacheUpperLayer.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Cache\/CacheUpperLayer.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Cache\/CacheUpperLayer.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Cache\/CacheUpperLayer.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Cache\/CacheUpperLayer.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Cache\/CacheUpperLayer.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Cache\/CacheUpperLayer.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Cache\/CacheUpperLayer.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Cache\/CacheUpperLayer.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Cache\/CacheUpperLayer.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Cache\/CacheUpperLayer.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Cache\/CacheUpperLayer.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Cache\/CacheUpperLayer.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Cache\/CacheUpperLayer.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Cache\/CacheUpperLayer.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Cache\/CacheUpperLayer.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/CacheUpperLayer.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/CacheUpperLayer.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/CacheUpperLayer.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/CacheUpperLayer.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/CacheUpperLayer.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CacheUpperLayer.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/CacheUpperLayer.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/CacheUpperLayer.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/CacheUpperLayer.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/CacheUpperLayer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/CacheUpperLayer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/CacheUpperLayer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/CacheUpperLayer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/CacheUpperLayer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/CacheUpperLayer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/CacheUpperLayer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheUpperLayer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheUpperLayer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/CacheUpperLayer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/CacheUpperLayer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/CacheUpperLayer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/CacheUpperLayer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/CacheUpperLayer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/CacheUpperLayer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/CacheUpperLayer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/CacheUpperLayer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/CacheUpperLayer.html", "kind" : "class"}, {"name" : "modules.Cache.ChiBusTestConnectMaster", "shortDescription" : "", "members_class" : [{"label" : "getChiBusMasterPort", "tail" : "(): ChiBusMaster[CacheChannel]", "member" : "modules.Cache.ChiBusTestConnectMaster.getChiBusMasterPort", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#getChiBusMasterPort:modules.ChiBus.main.ChiBusMaster[modules.Cache.main.CacheChannel]", "kind" : "def"}, {"label" : "reading", "tail" : ": Bool", "member" : "modules.Cache.ChiBusTestConnectMaster.reading", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#reading:chisel3.Bool", "kind" : "val"}, {"label" : "cnt", "tail" : ": UInt", "member" : "modules.Cache.ChiBusTestConnectMaster.cnt", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#cnt:chisel3.UInt", "kind" : "val"}, {"label" : "masterBus", "tail" : ": ChiBusMaster[CacheChannel]", "member" : "modules.Cache.ChiBusTestConnectMaster.masterBus", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#masterBus:modules.ChiBus.main.ChiBusMaster[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"member" : "modules.Cache.ChiBusTestConnectMaster#<init>", "error" : "unsupported entity"}, {"label" : "connectSlave", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusMasterPort.connectSlave", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#connectSlave[T2<:modules.ChiBus.main.WithChiBusSlavePort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ChiBusTestConnectMaster.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/ChiBusTestConnectMaster.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/ChiBusTestConnectMaster.html", "kind" : "class"}, {"name" : "modules.Cache.ChiBusTestConnectSlave", "shortDescription" : "", "members_class" : [{"label" : "getChiBusSlavePort", "tail" : "(): ChiBusSlave[CacheChannel]", "member" : "modules.Cache.ChiBusTestConnectSlave.getChiBusSlavePort", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#getChiBusSlavePort:modules.ChiBus.main.ChiBusSlave[modules.Cache.main.CacheChannel]", "kind" : "def"}, {"label" : "cnt", "tail" : ": UInt", "member" : "modules.Cache.ChiBusTestConnectSlave.cnt", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#cnt:chisel3.UInt", "kind" : "val"}, {"label" : "slaveBus", "tail" : ": ChiBusSlave[CacheChannel]", "member" : "modules.Cache.ChiBusTestConnectSlave.slaveBus", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#slaveBus:modules.ChiBus.main.ChiBusSlave[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"member" : "modules.Cache.ChiBusTestConnectSlave#<init>", "error" : "unsupported entity"}, {"label" : "connectMaster", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusSlavePort.connectMaster", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#connectMaster[T2<:modules.ChiBus.main.WithChiBusMasterPort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ChiBusTestConnectSlave.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/ChiBusTestConnectSlave.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/ChiBusTestConnectSlave.html", "kind" : "class"}], "modules.ITLB" : [{"name" : "modules.ITLB.ITLBTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/ITLB\/ITLBTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/ITLB\/ITLBTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/ITLB\/ITLBTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/ITLB\/ITLBTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/ITLB\/ITLBTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/ITLB\/ITLBTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/ITLB\/ITLBTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/ITLB\/ITLBTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/ITLB\/ITLBTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/ITLB\/ITLBTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/ITLB\/ITLBTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/ITLB\/ITLBTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/ITLB\/ITLBTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/ITLB\/ITLBTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/ITLB\/ITLBTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/ITLB\/ITLBTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/ITLB\/ITLBTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/ITLB\/ITLBTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "modules\/ITLB\/ITLBTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/ITLB\/ITLBTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/ITLB\/ITLBTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/ITLB\/ITLBTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/ITLB\/ITLBTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/ITLB\/ITLBTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/ITLB\/ITLBTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/ITLB\/ITLBTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/ITLB\/ITLBTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/ITLB\/ITLBTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/ITLB\/ITLBTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/ITLB\/ITLBTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/ITLB\/ITLBTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/ITLB\/ITLBTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/ITLB\/ITLBTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/ITLB\/ITLBTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/ITLB\/ITLBTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/ITLB\/ITLBTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/ITLB\/ITLBTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "modules.ITLB.ITLBTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/ITLB\/ITLBTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/ITLB\/ITLBTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/ITLB\/ITLBTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/ITLB\/ITLBTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/ITLB\/ITLBTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/ITLB\/ITLBTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/ITLB\/ITLBTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/ITLB\/ITLBTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/ITLB\/ITLBTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/ITLB\/ITLBTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/ITLB\/ITLBTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/ITLB\/ITLBTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/ITLB\/ITLBTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/ITLB\/ITLBTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/ITLB\/ITLBTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/ITLB\/ITLBTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/ITLB\/ITLBTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/ITLB\/ITLBTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/ITLB\/ITLBTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/ITLB\/ITLBTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/ITLB\/ITLBTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/ITLB\/ITLBTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/ITLB\/ITLBTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/ITLB\/ITLBTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/ITLB\/ITLBTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/ITLB\/ITLBTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/ITLB\/ITLBTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/ITLB\/ITLBTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/ITLB\/ITLBTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/ITLB\/ITLBTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/ITLB\/ITLBTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/ITLB\/ITLBTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/ITLB\/ITLBTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/ITLB\/ITLBTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/ITLB\/ITLBTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/ITLB\/ITLBTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/ITLB\/ITLBTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/ITLB\/ITLBTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/ITLB\/ITLBTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/ITLB\/ITLBTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/ITLB\/ITLBTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/ITLB\/ITLBTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/ITLB\/ITLBTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/ITLB\/ITLBTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/ITLB\/ITLBTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/ITLB\/ITLBTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/ITLB\/ITLBTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/ITLB\/ITLBTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/ITLB\/ITLBTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/ITLB\/ITLBTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/ITLB\/ITLBTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/ITLB\/ITLBTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/ITLB\/ITLBTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/ITLB\/ITLBTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/ITLB\/ITLBTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/ITLB\/ITLBTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/ITLB\/ITLBTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/ITLB\/ITLBTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/ITLB\/ITLBTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/ITLB\/ITLBTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/ITLB\/ITLBTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/ITLB\/ITLBTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/ITLB\/ITLBTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/ITLB\/ITLBTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/ITLB\/ITLBTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/ITLB\/ITLBTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/ITLB\/ITLBTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/ITLB\/ITLBTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/ITLB\/ITLBTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/ITLB\/ITLBTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/ITLB\/ITLBTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/ITLB\/ITLBTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/ITLB\/ITLBTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/ITLB\/ITLBTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/ITLB\/ITLBTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/ITLB\/ITLBTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/ITLB\/ITLBTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/ITLB\/ITLBTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/ITLB\/ITLBTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/ITLB\/ITLBTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/ITLB\/ITLBTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/ITLB\/ITLBTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/ITLB\/ITLBTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/ITLB\/ITLBTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/ITLB\/ITLBTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/ITLB\/ITLBTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/ITLB\/ITLBTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/ITLB\/ITLBTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/ITLB\/ITLBTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/ITLB\/ITLBTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "modules\/ITLB\/ITLBTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "modules\/ITLB\/ITLBTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "modules\/ITLB\/ITLBTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "modules\/ITLB\/ITLBTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "modules\/ITLB\/ITLBTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "modules\/ITLB\/ITLBTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "modules\/ITLB\/ITLBTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "modules\/ITLB\/ITLBTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "modules\/ITLB\/ITLBTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "modules\/ITLB\/ITLBTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/ITLB\/ITLBTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/ITLB\/ITLBTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/ITLB\/ITLBTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/ITLB\/ITLBTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/ITLB\/ITLBTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/ITLB\/ITLBTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/ITLB\/ITLBTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/ITLB\/ITLBTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/ITLB\/ITLBTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/ITLB\/ITLBTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/ITLB\/ITLBTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/ITLB\/ITLBTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/ITLB\/ITLBTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/ITLB\/ITLBTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/ITLB\/ITLBTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/ITLB\/ITLBTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/ITLB\/ITLBTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/ITLB\/ITLBTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/ITLB\/ITLBTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/ITLB\/ITLBTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/ITLB\/ITLBTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/ITLB\/ITLBTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/ITLB\/ITLBTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/ITLB\/ITLBTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/ITLB\/ITLBTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/ITLB\/ITLBTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/ITLB\/ITLBTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/ITLB\/ITLBTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/ITLB\/ITLBTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/ITLB\/ITLBTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/ITLB\/ITLBTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/ITLB\/ITLBTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/ITLB\/ITLBTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/ITLB\/ITLBTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/ITLB\/ITLBTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/ITLB\/ITLBTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/ITLB\/ITLBTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/ITLB\/ITLBTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/ITLB\/ITLBTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/ITLB\/ITLBTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/ITLB\/ITLBTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/ITLB\/ITLBTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/ITLB\/ITLBTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/ITLB\/ITLBTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/ITLB\/ITLBTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/ITLB\/ITLBTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/ITLB\/ITLBTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/ITLB\/ITLBTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/ITLB\/ITLBTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/ITLB\/ITLBTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/ITLB\/ITLBTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/ITLB\/ITLBTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/ITLB\/ITLBTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/ITLB\/ITLBTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/ITLB\/ITLBTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/ITLB\/ITLBTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/ITLB\/ITLBTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/ITLB\/ITLBTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/ITLB\/ITLBTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/ITLB\/ITLBTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/ITLB\/ITLBTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/ITLB\/ITLBTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/ITLB\/ITLBTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/ITLB\/ITLBTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/ITLB\/ITLBTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/ITLB\/ITLBTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/ITLB\/ITLBTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/ITLB\/ITLBTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/ITLB\/ITLBTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/ITLB\/ITLBTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/ITLB\/ITLBTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/ITLB\/ITLBTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/ITLB\/ITLBTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/ITLB\/ITLBTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ITLB\/ITLBTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ITLB\/ITLBTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ITLB\/ITLBTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ITLB\/ITLBTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ITLB\/ITLBTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ITLB\/ITLBTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ITLB\/ITLBTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/ITLBTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/ITLBTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ITLB\/ITLBTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ITLB\/ITLBTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ITLB\/ITLBTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ITLB\/ITLBTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ITLB\/ITLBTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ITLB\/ITLBTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ITLB\/ITLBTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ITLB\/ITLBTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ITLB\/ITLBTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ITLB\/ITLBTest.html", "kind" : "class"}], "lang" : [{"name" : "lang.ArbiterTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "lang\/ArbiterTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "lang\/ArbiterTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "lang\/ArbiterTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "lang\/ArbiterTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "lang\/ArbiterTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "lang\/ArbiterTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "lang\/ArbiterTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "lang\/ArbiterTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "lang\/ArbiterTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "lang\/ArbiterTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "lang\/ArbiterTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "lang\/ArbiterTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "lang\/ArbiterTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "lang\/ArbiterTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "lang\/ArbiterTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "lang\/ArbiterTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "lang\/ArbiterTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "lang\/ArbiterTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "lang\/ArbiterTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "lang\/ArbiterTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "lang\/ArbiterTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "lang\/ArbiterTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "lang\/ArbiterTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "lang\/ArbiterTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "lang\/ArbiterTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "lang\/ArbiterTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "lang\/ArbiterTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "lang\/ArbiterTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "lang\/ArbiterTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "lang\/ArbiterTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "lang\/ArbiterTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "lang\/ArbiterTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "lang\/ArbiterTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "lang\/ArbiterTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "lang\/ArbiterTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "lang\/ArbiterTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "lang\/ArbiterTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "lang\/ArbiterTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "lang\/ArbiterTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "lang\/ArbiterTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "lang\/ArbiterTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "lang\/ArbiterTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "lang\/ArbiterTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "lang\/ArbiterTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "lang\/ArbiterTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "lang\/ArbiterTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "lang\/ArbiterTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "lang\/ArbiterTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "lang\/ArbiterTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "lang\/ArbiterTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "lang\/ArbiterTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "lang\/ArbiterTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "lang.ArbiterTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "lang\/ArbiterTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "lang\/ArbiterTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "lang\/ArbiterTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "lang\/ArbiterTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "lang\/ArbiterTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "lang\/ArbiterTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "lang\/ArbiterTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/ArbiterTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/ArbiterTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/ArbiterTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/ArbiterTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/ArbiterTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/ArbiterTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/ArbiterTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/ArbiterTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/ArbiterTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/ArbiterTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/ArbiterTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/ArbiterTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/ArbiterTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/ArbiterTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/ArbiterTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/ArbiterTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/ArbiterTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/ArbiterTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/ArbiterTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/ArbiterTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/ArbiterTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/ArbiterTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/ArbiterTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/ArbiterTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/ArbiterTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/ArbiterTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "lang\/ArbiterTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "lang\/ArbiterTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "lang\/ArbiterTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "lang\/ArbiterTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "lang\/ArbiterTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "lang\/ArbiterTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "lang\/ArbiterTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "lang\/ArbiterTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "lang\/ArbiterTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "lang\/ArbiterTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "lang\/ArbiterTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "lang\/ArbiterTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "lang\/ArbiterTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "lang\/ArbiterTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "lang\/ArbiterTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "lang\/ArbiterTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "lang\/ArbiterTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "lang\/ArbiterTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "lang\/ArbiterTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "lang\/ArbiterTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "lang\/ArbiterTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "lang\/ArbiterTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "lang\/ArbiterTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "lang\/ArbiterTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "lang\/ArbiterTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "lang\/ArbiterTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "lang\/ArbiterTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "lang\/ArbiterTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "lang\/ArbiterTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "lang\/ArbiterTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "lang\/ArbiterTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "lang\/ArbiterTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "lang\/ArbiterTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "lang\/ArbiterTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "lang\/ArbiterTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "lang\/ArbiterTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "lang\/ArbiterTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "lang\/ArbiterTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "lang\/ArbiterTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "lang\/ArbiterTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "lang\/ArbiterTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "lang\/ArbiterTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "lang\/ArbiterTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "lang\/ArbiterTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "lang\/ArbiterTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "lang\/ArbiterTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "lang\/ArbiterTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "lang\/ArbiterTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "lang\/ArbiterTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "lang\/ArbiterTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "lang\/ArbiterTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "lang\/ArbiterTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "lang\/ArbiterTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "lang\/ArbiterTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "lang\/ArbiterTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "lang\/ArbiterTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "lang\/ArbiterTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "lang\/ArbiterTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "lang\/ArbiterTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "lang\/ArbiterTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "lang\/ArbiterTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "lang\/ArbiterTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "lang\/ArbiterTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "lang\/ArbiterTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "lang\/ArbiterTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "lang\/ArbiterTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "lang\/ArbiterTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "lang\/ArbiterTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "lang\/ArbiterTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "lang\/ArbiterTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "lang\/ArbiterTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "lang\/ArbiterTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "lang\/ArbiterTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "lang\/ArbiterTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "lang\/ArbiterTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "lang\/ArbiterTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "lang\/ArbiterTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "lang\/ArbiterTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "lang\/ArbiterTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "lang\/ArbiterTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "lang\/ArbiterTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "lang\/ArbiterTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "lang\/ArbiterTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "lang\/ArbiterTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "lang\/ArbiterTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "lang\/ArbiterTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "lang\/ArbiterTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "lang\/ArbiterTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "lang\/ArbiterTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "lang\/ArbiterTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "lang\/ArbiterTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "lang\/ArbiterTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "lang\/ArbiterTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "lang\/ArbiterTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "lang\/ArbiterTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "lang\/ArbiterTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "lang\/ArbiterTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "lang\/ArbiterTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "lang\/ArbiterTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "lang\/ArbiterTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "lang\/ArbiterTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "lang\/ArbiterTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "lang\/ArbiterTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "lang\/ArbiterTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/ArbiterTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/ArbiterTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/ArbiterTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/ArbiterTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/ArbiterTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/ArbiterTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/ArbiterTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/ArbiterTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "lang\/ArbiterTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "lang\/ArbiterTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "lang\/ArbiterTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "lang\/ArbiterTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "lang\/ArbiterTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "lang\/ArbiterTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "lang\/ArbiterTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "lang\/ArbiterTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "lang\/ArbiterTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "lang\/ArbiterTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "lang\/ArbiterTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "lang\/ArbiterTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "lang\/ArbiterTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "lang\/ArbiterTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "lang\/ArbiterTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "lang\/ArbiterTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "lang\/ArbiterTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "lang\/ArbiterTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "lang\/ArbiterTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "lang\/ArbiterTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "lang\/ArbiterTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "lang\/ArbiterTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/ArbiterTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/ArbiterTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/ArbiterTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/ArbiterTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/ArbiterTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/ArbiterTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "lang\/ArbiterTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lang\/ArbiterTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lang\/ArbiterTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lang\/ArbiterTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lang\/ArbiterTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lang\/ArbiterTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lang\/ArbiterTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lang\/ArbiterTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/ArbiterTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/ArbiterTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/ArbiterTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lang\/ArbiterTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lang\/ArbiterTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lang\/ArbiterTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lang\/ArbiterTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lang\/ArbiterTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lang\/ArbiterTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lang\/ArbiterTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lang\/ArbiterTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lang\/ArbiterTest.html", "kind" : "class"}, {"name" : "lang.ArbiterTester", "shortDescription" : "", "members_class" : [{"label" : "arb", "tail" : ": Arbiter[Bool]", "member" : "lang.ArbiterTester.arb", "link" : "lang\/ArbiterTester.html#arb:chisel3.util.Arbiter[chisel3.Bool]", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "lang.ArbiterTester.io", "link" : "lang\/ArbiterTester.html#io:chisel3.Bundle{valinDec0:chisel3.util.DecoupledIO[chisel3.Bool];valinDec1:chisel3.util.DecoupledIO[chisel3.Bool];valoutDec:chisel3.util.DecoupledIO[chisel3.Bool]}", "kind" : "val"}, {"member" : "lang.ArbiterTester#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "lang\/ArbiterTester.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "lang\/ArbiterTester.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "lang\/ArbiterTester.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "lang\/ArbiterTester.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "lang\/ArbiterTester.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "lang\/ArbiterTester.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "lang\/ArbiterTester.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "lang\/ArbiterTester.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "lang\/ArbiterTester.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "lang\/ArbiterTester.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "lang\/ArbiterTester.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "lang\/ArbiterTester.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "lang\/ArbiterTester.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "lang\/ArbiterTester.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "lang\/ArbiterTester.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "lang\/ArbiterTester.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "lang\/ArbiterTester.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "lang\/ArbiterTester.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "lang\/ArbiterTester.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "lang\/ArbiterTester.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "lang\/ArbiterTester.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "lang\/ArbiterTester.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "lang\/ArbiterTester.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "lang\/ArbiterTester.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "lang\/ArbiterTester.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "lang\/ArbiterTester.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "lang\/ArbiterTester.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "lang\/ArbiterTester.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ArbiterTester.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "lang\/ArbiterTester.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "lang\/ArbiterTester.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "lang\/ArbiterTester.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lang\/ArbiterTester.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lang\/ArbiterTester.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lang\/ArbiterTester.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lang\/ArbiterTester.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lang\/ArbiterTester.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lang\/ArbiterTester.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lang\/ArbiterTester.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/ArbiterTester.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/ArbiterTester.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/ArbiterTester.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lang\/ArbiterTester.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lang\/ArbiterTester.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lang\/ArbiterTester.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lang\/ArbiterTester.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lang\/ArbiterTester.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lang\/ArbiterTester.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lang\/ArbiterTester.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lang\/ArbiterTester.html", "kind" : "class"}, {"name" : "lang.BundleLink", "shortDescription" : "", "members_class" : [{"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "lang.BundleLink.io", "link" : "lang\/BundleLink.html#io:chisel3.Bundle{valpin1:chisel3.Bool;valpin2:chisel3.Bool}", "kind" : "val"}, {"label" : "link2", "tail" : ": Link2", "member" : "lang.BundleLink.link2", "link" : "lang\/BundleLink.html#link2:BundleLink.this.Link2", "kind" : "val"}, {"label" : "link1", "tail" : ": Link1", "member" : "lang.BundleLink.link1", "link" : "lang\/BundleLink.html#link1:BundleLink.this.Link1", "kind" : "val"}, {"label" : "Link2", "tail" : "", "member" : "lang.BundleLink.Link2", "link" : "lang\/BundleLink.html#Link2extendsBundleLink.this.LinkDiff", "kind" : "class"}, {"label" : "Link1", "tail" : "", "member" : "lang.BundleLink.Link1", "link" : "lang\/BundleLink.html#Link1extendsBundleLink.this.LinkDiff", "kind" : "class"}, {"label" : "LinkDiff", "tail" : "", "member" : "lang.BundleLink.LinkDiff", "link" : "lang\/BundleLink.html#LinkDiffextendsModule", "kind" : "class"}, {"label" : "Link", "tail" : "", "member" : "lang.BundleLink.Link", "link" : "lang\/BundleLink.html#LinkextendsModule", "kind" : "class"}, {"member" : "lang.BundleLink#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "lang\/BundleLink.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "lang\/BundleLink.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "lang\/BundleLink.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "lang\/BundleLink.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "lang\/BundleLink.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "lang\/BundleLink.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "lang\/BundleLink.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "lang\/BundleLink.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "lang\/BundleLink.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "lang\/BundleLink.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "lang\/BundleLink.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "lang\/BundleLink.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "lang\/BundleLink.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "lang\/BundleLink.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "lang\/BundleLink.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "lang\/BundleLink.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "lang\/BundleLink.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "lang\/BundleLink.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "lang\/BundleLink.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "lang\/BundleLink.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "lang\/BundleLink.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "lang\/BundleLink.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "lang\/BundleLink.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "lang\/BundleLink.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "lang\/BundleLink.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "lang\/BundleLink.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "lang\/BundleLink.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "lang\/BundleLink.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): BundleLink.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "lang\/BundleLink.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "lang\/BundleLink.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "lang\/BundleLink.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lang\/BundleLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lang\/BundleLink.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lang\/BundleLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lang\/BundleLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lang\/BundleLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lang\/BundleLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lang\/BundleLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/BundleLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/BundleLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/BundleLink.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lang\/BundleLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lang\/BundleLink.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lang\/BundleLink.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lang\/BundleLink.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lang\/BundleLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lang\/BundleLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lang\/BundleLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lang\/BundleLink.html", "kind" : "class"}, {"name" : "lang.BundleLinkTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "lang\/BundleLinkTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "lang\/BundleLinkTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "lang\/BundleLinkTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "lang\/BundleLinkTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "lang\/BundleLinkTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "lang\/BundleLinkTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "lang\/BundleLinkTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "lang\/BundleLinkTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "lang\/BundleLinkTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "lang\/BundleLinkTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "lang\/BundleLinkTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "lang\/BundleLinkTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "lang\/BundleLinkTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "lang\/BundleLinkTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "lang\/BundleLinkTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "lang\/BundleLinkTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "lang\/BundleLinkTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "lang\/BundleLinkTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "lang\/BundleLinkTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "lang\/BundleLinkTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "lang\/BundleLinkTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "lang\/BundleLinkTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "lang\/BundleLinkTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "lang\/BundleLinkTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "lang\/BundleLinkTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "lang\/BundleLinkTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "lang\/BundleLinkTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "lang\/BundleLinkTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "lang\/BundleLinkTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "lang\/BundleLinkTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "lang\/BundleLinkTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "lang\/BundleLinkTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "lang\/BundleLinkTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "lang\/BundleLinkTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "lang\/BundleLinkTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "lang\/BundleLinkTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "lang\/BundleLinkTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "lang\/BundleLinkTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "lang\/BundleLinkTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "lang\/BundleLinkTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "lang\/BundleLinkTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "lang\/BundleLinkTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "lang\/BundleLinkTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "lang\/BundleLinkTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "lang\/BundleLinkTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "lang\/BundleLinkTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "lang\/BundleLinkTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "lang\/BundleLinkTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "lang\/BundleLinkTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "lang\/BundleLinkTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "lang\/BundleLinkTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "lang\/BundleLinkTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "lang.BundleLinkTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "lang\/BundleLinkTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "lang\/BundleLinkTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "lang\/BundleLinkTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "lang\/BundleLinkTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "lang\/BundleLinkTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "lang\/BundleLinkTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "lang\/BundleLinkTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/BundleLinkTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/BundleLinkTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/BundleLinkTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/BundleLinkTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/BundleLinkTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/BundleLinkTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/BundleLinkTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/BundleLinkTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/BundleLinkTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/BundleLinkTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/BundleLinkTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/BundleLinkTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/BundleLinkTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/BundleLinkTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/BundleLinkTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/BundleLinkTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/BundleLinkTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/BundleLinkTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/BundleLinkTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/BundleLinkTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/BundleLinkTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/BundleLinkTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/BundleLinkTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/BundleLinkTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/BundleLinkTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/BundleLinkTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "lang\/BundleLinkTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "lang\/BundleLinkTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "lang\/BundleLinkTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "lang\/BundleLinkTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "lang\/BundleLinkTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "lang\/BundleLinkTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "lang\/BundleLinkTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "lang\/BundleLinkTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "lang\/BundleLinkTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "lang\/BundleLinkTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "lang\/BundleLinkTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "lang\/BundleLinkTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "lang\/BundleLinkTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "lang\/BundleLinkTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "lang\/BundleLinkTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "lang\/BundleLinkTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "lang\/BundleLinkTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "lang\/BundleLinkTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "lang\/BundleLinkTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "lang\/BundleLinkTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "lang\/BundleLinkTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "lang\/BundleLinkTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "lang\/BundleLinkTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "lang\/BundleLinkTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "lang\/BundleLinkTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "lang\/BundleLinkTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "lang\/BundleLinkTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "lang\/BundleLinkTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "lang\/BundleLinkTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "lang\/BundleLinkTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "lang\/BundleLinkTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "lang\/BundleLinkTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "lang\/BundleLinkTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "lang\/BundleLinkTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "lang\/BundleLinkTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "lang\/BundleLinkTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "lang\/BundleLinkTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "lang\/BundleLinkTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "lang\/BundleLinkTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "lang\/BundleLinkTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "lang\/BundleLinkTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "lang\/BundleLinkTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "lang\/BundleLinkTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "lang\/BundleLinkTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "lang\/BundleLinkTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "lang\/BundleLinkTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "lang\/BundleLinkTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "lang\/BundleLinkTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "lang\/BundleLinkTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "lang\/BundleLinkTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "lang\/BundleLinkTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "lang\/BundleLinkTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "lang\/BundleLinkTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "lang\/BundleLinkTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "lang\/BundleLinkTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "lang\/BundleLinkTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "lang\/BundleLinkTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "lang\/BundleLinkTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "lang\/BundleLinkTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "lang\/BundleLinkTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "lang\/BundleLinkTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "lang\/BundleLinkTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "lang\/BundleLinkTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "lang\/BundleLinkTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "lang\/BundleLinkTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "lang\/BundleLinkTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "lang\/BundleLinkTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "lang\/BundleLinkTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "lang\/BundleLinkTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "lang\/BundleLinkTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "lang\/BundleLinkTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "lang\/BundleLinkTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "lang\/BundleLinkTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "lang\/BundleLinkTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "lang\/BundleLinkTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "lang\/BundleLinkTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "lang\/BundleLinkTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "lang\/BundleLinkTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "lang\/BundleLinkTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "lang\/BundleLinkTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "lang\/BundleLinkTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "lang\/BundleLinkTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "lang\/BundleLinkTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "lang\/BundleLinkTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "lang\/BundleLinkTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "lang\/BundleLinkTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "lang\/BundleLinkTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "lang\/BundleLinkTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "lang\/BundleLinkTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "lang\/BundleLinkTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "lang\/BundleLinkTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "lang\/BundleLinkTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "lang\/BundleLinkTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "lang\/BundleLinkTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "lang\/BundleLinkTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "lang\/BundleLinkTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "lang\/BundleLinkTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "lang\/BundleLinkTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "lang\/BundleLinkTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "lang\/BundleLinkTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "lang\/BundleLinkTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "lang\/BundleLinkTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "lang\/BundleLinkTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "lang\/BundleLinkTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/BundleLinkTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/BundleLinkTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/BundleLinkTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/BundleLinkTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/BundleLinkTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/BundleLinkTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/BundleLinkTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/BundleLinkTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "lang\/BundleLinkTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "lang\/BundleLinkTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "lang\/BundleLinkTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "lang\/BundleLinkTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "lang\/BundleLinkTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "lang\/BundleLinkTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "lang\/BundleLinkTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "lang\/BundleLinkTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "lang\/BundleLinkTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "lang\/BundleLinkTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "lang\/BundleLinkTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "lang\/BundleLinkTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "lang\/BundleLinkTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "lang\/BundleLinkTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "lang\/BundleLinkTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "lang\/BundleLinkTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "lang\/BundleLinkTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "lang\/BundleLinkTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "lang\/BundleLinkTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "lang\/BundleLinkTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "lang\/BundleLinkTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "lang\/BundleLinkTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/BundleLinkTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/BundleLinkTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/BundleLinkTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/BundleLinkTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/BundleLinkTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/BundleLinkTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "lang\/BundleLinkTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lang\/BundleLinkTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lang\/BundleLinkTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lang\/BundleLinkTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lang\/BundleLinkTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lang\/BundleLinkTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lang\/BundleLinkTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lang\/BundleLinkTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/BundleLinkTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/BundleLinkTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/BundleLinkTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lang\/BundleLinkTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lang\/BundleLinkTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lang\/BundleLinkTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lang\/BundleLinkTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lang\/BundleLinkTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lang\/BundleLinkTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lang\/BundleLinkTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lang\/BundleLinkTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lang\/BundleLinkTest.html", "kind" : "class"}, {"name" : "lang.LangTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "lang\/LangTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "lang\/LangTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "lang\/LangTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "lang\/LangTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "lang\/LangTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "lang\/LangTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "lang\/LangTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "lang\/LangTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "lang\/LangTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "lang\/LangTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "lang\/LangTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "lang\/LangTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "lang\/LangTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "lang\/LangTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "lang\/LangTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "lang\/LangTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "lang\/LangTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "lang\/LangTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "lang\/LangTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "lang\/LangTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "lang\/LangTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "lang\/LangTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "lang\/LangTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "lang\/LangTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "lang\/LangTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "lang\/LangTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "lang\/LangTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "lang\/LangTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "lang\/LangTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "lang\/LangTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "lang\/LangTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "lang\/LangTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "lang\/LangTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "lang\/LangTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "lang\/LangTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "lang\/LangTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "lang\/LangTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "lang\/LangTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "lang\/LangTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "lang\/LangTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "lang\/LangTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "lang\/LangTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "lang\/LangTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "lang\/LangTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "lang\/LangTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "lang\/LangTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "lang\/LangTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "lang\/LangTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "lang\/LangTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "lang\/LangTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "lang\/LangTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "lang.LangTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "lang\/LangTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "lang\/LangTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "lang\/LangTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "lang\/LangTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "lang\/LangTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "lang\/LangTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "lang\/LangTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/LangTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/LangTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/LangTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/LangTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/LangTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/LangTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/LangTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/LangTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/LangTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/LangTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/LangTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/LangTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/LangTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/LangTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/LangTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/LangTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/LangTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/LangTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/LangTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/LangTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/LangTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/LangTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/LangTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/LangTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/LangTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/LangTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "lang\/LangTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "lang\/LangTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "lang\/LangTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "lang\/LangTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "lang\/LangTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "lang\/LangTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "lang\/LangTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "lang\/LangTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "lang\/LangTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "lang\/LangTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "lang\/LangTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "lang\/LangTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "lang\/LangTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "lang\/LangTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "lang\/LangTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "lang\/LangTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "lang\/LangTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "lang\/LangTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "lang\/LangTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "lang\/LangTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "lang\/LangTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "lang\/LangTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "lang\/LangTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "lang\/LangTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "lang\/LangTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "lang\/LangTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "lang\/LangTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "lang\/LangTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "lang\/LangTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "lang\/LangTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "lang\/LangTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "lang\/LangTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "lang\/LangTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "lang\/LangTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "lang\/LangTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "lang\/LangTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "lang\/LangTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "lang\/LangTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "lang\/LangTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "lang\/LangTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "lang\/LangTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "lang\/LangTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "lang\/LangTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "lang\/LangTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "lang\/LangTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "lang\/LangTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "lang\/LangTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "lang\/LangTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "lang\/LangTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "lang\/LangTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "lang\/LangTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "lang\/LangTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "lang\/LangTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "lang\/LangTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "lang\/LangTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "lang\/LangTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "lang\/LangTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "lang\/LangTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "lang\/LangTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "lang\/LangTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "lang\/LangTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "lang\/LangTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "lang\/LangTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "lang\/LangTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "lang\/LangTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "lang\/LangTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "lang\/LangTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "lang\/LangTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "lang\/LangTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "lang\/LangTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "lang\/LangTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "lang\/LangTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "lang\/LangTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "lang\/LangTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "lang\/LangTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "lang\/LangTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "lang\/LangTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "lang\/LangTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "lang\/LangTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "lang\/LangTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "lang\/LangTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "lang\/LangTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "lang\/LangTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "org.scalatest.TestSuite.withFixture", "link" : "lang\/LangTest.html#withFixture(test:TestSuite.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "lang\/LangTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "lang\/LangTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "lang\/LangTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "lang\/LangTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "lang\/LangTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "lang\/LangTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "lang\/LangTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "lang\/LangTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "lang\/LangTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "lang\/LangTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "lang\/LangTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/LangTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/LangTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/LangTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/LangTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/LangTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/LangTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/LangTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/LangTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "lang\/LangTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "lang\/LangTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "lang\/LangTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "lang\/LangTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "lang\/LangTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "lang\/LangTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "lang\/LangTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "lang\/LangTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "lang\/LangTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "lang\/LangTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "lang\/LangTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "lang\/LangTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "lang\/LangTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "lang\/LangTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "lang\/LangTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "lang\/LangTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "lang\/LangTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "lang\/LangTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "lang\/LangTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "lang\/LangTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "lang\/LangTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "lang\/LangTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/LangTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/LangTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/LangTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/LangTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/LangTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/LangTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "lang\/LangTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lang\/LangTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lang\/LangTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lang\/LangTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lang\/LangTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lang\/LangTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lang\/LangTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lang\/LangTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/LangTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/LangTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/LangTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lang\/LangTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lang\/LangTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lang\/LangTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lang\/LangTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lang\/LangTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lang\/LangTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lang\/LangTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lang\/LangTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lang\/LangTest.html", "kind" : "class"}, {"name" : "lang.UIntToBundle", "shortDescription" : "", "members_class" : [{"label" : "io", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "lang.UIntToBundle.io", "link" : "lang\/UIntToBundle.html#io:chisel3.Bundle{valbutton:chisel3.Bool;valinputUInt:chisel3.UInt;valoutputUInt:UIntToBundle.this.TestBundle}", "kind" : "val"}, {"label" : "TestBundle", "tail" : "", "member" : "lang.UIntToBundle.TestBundle", "link" : "lang\/UIntToBundle.html#TestBundleextendsBundle", "kind" : "class"}, {"member" : "lang.UIntToBundle#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "lang\/UIntToBundle.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "lang\/UIntToBundle.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "lang\/UIntToBundle.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "lang\/UIntToBundle.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "lang\/UIntToBundle.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "lang\/UIntToBundle.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "lang\/UIntToBundle.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "lang\/UIntToBundle.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "lang\/UIntToBundle.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "lang\/UIntToBundle.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "lang\/UIntToBundle.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "lang\/UIntToBundle.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "lang\/UIntToBundle.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "lang\/UIntToBundle.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "lang\/UIntToBundle.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "lang\/UIntToBundle.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "lang\/UIntToBundle.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "lang\/UIntToBundle.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "lang\/UIntToBundle.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "lang\/UIntToBundle.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "lang\/UIntToBundle.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "lang\/UIntToBundle.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "lang\/UIntToBundle.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "lang\/UIntToBundle.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "lang\/UIntToBundle.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "lang\/UIntToBundle.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "lang\/UIntToBundle.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "lang\/UIntToBundle.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): UIntToBundle.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "lang\/UIntToBundle.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "lang\/UIntToBundle.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "lang\/UIntToBundle.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lang\/UIntToBundle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lang\/UIntToBundle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lang\/UIntToBundle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lang\/UIntToBundle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lang\/UIntToBundle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lang\/UIntToBundle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lang\/UIntToBundle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/UIntToBundle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/UIntToBundle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/UIntToBundle.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lang\/UIntToBundle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lang\/UIntToBundle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lang\/UIntToBundle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lang\/UIntToBundle.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lang\/UIntToBundle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lang\/UIntToBundle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lang\/UIntToBundle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lang\/UIntToBundle.html", "kind" : "class"}, {"name" : "lang.UIntToBundleTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "lang\/UIntToBundleTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "lang\/UIntToBundleTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "lang\/UIntToBundleTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "lang\/UIntToBundleTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "lang\/UIntToBundleTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "lang\/UIntToBundleTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "lang\/UIntToBundleTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "lang\/UIntToBundleTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "lang\/UIntToBundleTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "lang\/UIntToBundleTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "lang\/UIntToBundleTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "lang\/UIntToBundleTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "lang\/UIntToBundleTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "lang\/UIntToBundleTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "lang\/UIntToBundleTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "lang\/UIntToBundleTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "lang\/UIntToBundleTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "lang\/UIntToBundleTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "lang\/UIntToBundleTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "lang\/UIntToBundleTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "lang\/UIntToBundleTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "lang\/UIntToBundleTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "lang\/UIntToBundleTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "lang\/UIntToBundleTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "lang\/UIntToBundleTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "lang\/UIntToBundleTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "lang\/UIntToBundleTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "lang\/UIntToBundleTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "lang\/UIntToBundleTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "lang\/UIntToBundleTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "lang\/UIntToBundleTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "lang\/UIntToBundleTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "lang\/UIntToBundleTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "lang\/UIntToBundleTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "lang\/UIntToBundleTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "lang\/UIntToBundleTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "lang\/UIntToBundleTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "lang\/UIntToBundleTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "lang\/UIntToBundleTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "lang\/UIntToBundleTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "lang\/UIntToBundleTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "lang\/UIntToBundleTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "lang\/UIntToBundleTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "lang\/UIntToBundleTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "lang\/UIntToBundleTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "lang\/UIntToBundleTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "lang\/UIntToBundleTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "lang\/UIntToBundleTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "lang\/UIntToBundleTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "lang\/UIntToBundleTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "lang\/UIntToBundleTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "lang\/UIntToBundleTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "lang.UIntToBundleTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "lang\/UIntToBundleTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "lang\/UIntToBundleTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "lang\/UIntToBundleTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "lang\/UIntToBundleTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "lang\/UIntToBundleTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "lang\/UIntToBundleTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "lang\/UIntToBundleTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/UIntToBundleTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/UIntToBundleTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/UIntToBundleTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "lang\/UIntToBundleTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/UIntToBundleTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/UIntToBundleTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "lang\/UIntToBundleTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/UIntToBundleTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/UIntToBundleTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "lang\/UIntToBundleTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/UIntToBundleTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/UIntToBundleTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/UIntToBundleTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "lang\/UIntToBundleTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/UIntToBundleTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/UIntToBundleTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/UIntToBundleTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "lang\/UIntToBundleTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/UIntToBundleTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/UIntToBundleTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/UIntToBundleTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "lang\/UIntToBundleTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/UIntToBundleTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/UIntToBundleTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/UIntToBundleTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "lang\/UIntToBundleTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "lang\/UIntToBundleTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "lang\/UIntToBundleTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "lang\/UIntToBundleTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "lang\/UIntToBundleTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "lang\/UIntToBundleTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "lang\/UIntToBundleTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "lang\/UIntToBundleTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "lang\/UIntToBundleTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "lang\/UIntToBundleTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "lang\/UIntToBundleTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "lang\/UIntToBundleTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "lang\/UIntToBundleTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "lang\/UIntToBundleTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "lang\/UIntToBundleTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "lang\/UIntToBundleTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "lang\/UIntToBundleTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "lang\/UIntToBundleTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "lang\/UIntToBundleTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "lang\/UIntToBundleTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "lang\/UIntToBundleTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "lang\/UIntToBundleTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "lang\/UIntToBundleTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "lang\/UIntToBundleTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "lang\/UIntToBundleTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "lang\/UIntToBundleTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "lang\/UIntToBundleTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "lang\/UIntToBundleTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "lang\/UIntToBundleTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "lang\/UIntToBundleTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "lang\/UIntToBundleTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "lang\/UIntToBundleTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "lang\/UIntToBundleTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "lang\/UIntToBundleTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "lang\/UIntToBundleTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "lang\/UIntToBundleTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "lang\/UIntToBundleTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "lang\/UIntToBundleTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "lang\/UIntToBundleTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "lang\/UIntToBundleTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "lang\/UIntToBundleTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "lang\/UIntToBundleTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "lang\/UIntToBundleTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "lang\/UIntToBundleTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "lang\/UIntToBundleTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "lang\/UIntToBundleTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "lang\/UIntToBundleTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "lang\/UIntToBundleTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "lang\/UIntToBundleTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "lang\/UIntToBundleTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "lang\/UIntToBundleTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "lang\/UIntToBundleTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "lang\/UIntToBundleTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "lang\/UIntToBundleTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "lang\/UIntToBundleTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "lang\/UIntToBundleTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "lang\/UIntToBundleTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "lang\/UIntToBundleTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "lang\/UIntToBundleTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "lang\/UIntToBundleTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "lang\/UIntToBundleTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "lang\/UIntToBundleTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "lang\/UIntToBundleTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "lang\/UIntToBundleTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "lang\/UIntToBundleTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "lang\/UIntToBundleTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "lang\/UIntToBundleTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "lang\/UIntToBundleTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "lang\/UIntToBundleTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "lang\/UIntToBundleTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "lang\/UIntToBundleTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "lang\/UIntToBundleTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "lang\/UIntToBundleTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "lang\/UIntToBundleTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "lang\/UIntToBundleTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "lang\/UIntToBundleTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "lang\/UIntToBundleTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "lang\/UIntToBundleTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "lang\/UIntToBundleTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "lang\/UIntToBundleTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "lang\/UIntToBundleTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "lang\/UIntToBundleTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "lang\/UIntToBundleTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "lang\/UIntToBundleTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "lang\/UIntToBundleTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "lang\/UIntToBundleTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "lang\/UIntToBundleTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "lang\/UIntToBundleTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "lang\/UIntToBundleTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "lang\/UIntToBundleTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "lang\/UIntToBundleTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "lang\/UIntToBundleTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "lang\/UIntToBundleTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "lang\/UIntToBundleTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "lang\/UIntToBundleTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "lang\/UIntToBundleTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "lang\/UIntToBundleTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "lang\/UIntToBundleTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "lang\/UIntToBundleTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "lang\/UIntToBundleTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "lang\/UIntToBundleTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "lang\/UIntToBundleTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "lang\/UIntToBundleTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "lang\/UIntToBundleTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "lang\/UIntToBundleTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/UIntToBundleTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/UIntToBundleTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/UIntToBundleTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "lang\/UIntToBundleTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/UIntToBundleTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/UIntToBundleTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/UIntToBundleTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "lang\/UIntToBundleTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "lang\/UIntToBundleTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "lang\/UIntToBundleTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "lang\/UIntToBundleTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "lang\/UIntToBundleTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "lang\/UIntToBundleTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "lang\/UIntToBundleTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "lang\/UIntToBundleTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "lang\/UIntToBundleTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "lang\/UIntToBundleTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "lang\/UIntToBundleTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "lang\/UIntToBundleTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "lang\/UIntToBundleTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "lang\/UIntToBundleTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "lang\/UIntToBundleTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "lang\/UIntToBundleTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "lang\/UIntToBundleTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "lang\/UIntToBundleTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "lang\/UIntToBundleTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "lang\/UIntToBundleTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "lang\/UIntToBundleTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "lang\/UIntToBundleTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "lang\/UIntToBundleTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/UIntToBundleTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/UIntToBundleTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/UIntToBundleTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/UIntToBundleTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "lang\/UIntToBundleTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "lang\/UIntToBundleTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "lang\/UIntToBundleTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lang\/UIntToBundleTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lang\/UIntToBundleTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lang\/UIntToBundleTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lang\/UIntToBundleTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lang\/UIntToBundleTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lang\/UIntToBundleTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lang\/UIntToBundleTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/UIntToBundleTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/UIntToBundleTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lang\/UIntToBundleTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lang\/UIntToBundleTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lang\/UIntToBundleTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lang\/UIntToBundleTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lang\/UIntToBundleTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lang\/UIntToBundleTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lang\/UIntToBundleTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lang\/UIntToBundleTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lang\/UIntToBundleTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lang\/UIntToBundleTest.html", "kind" : "class"}], "modules.ChiBus" : [], "modules.ChiBus.main" : [{"name" : "modules.ChiBus.main.BusTypes", "shortDescription" : "", "object" : "modules\/ChiBus\/main\/BusTypes$.html", "members_object" : [{"label" : "INPUT", "tail" : "", "member" : "modules.ChiBus.main.BusTypes.INPUT", "link" : "modules\/ChiBus\/main\/BusTypes$.html#INPUT", "kind" : "object"}, {"label" : "OUTPUT", "tail" : "", "member" : "modules.ChiBus.main.BusTypes.OUTPUT", "link" : "modules\/ChiBus\/main\/BusTypes$.html#OUTPUT", "kind" : "object"}, {"label" : "SLAVE", "tail" : "", "member" : "modules.ChiBus.main.BusTypes.SLAVE", "link" : "modules\/ChiBus\/main\/BusTypes$.html#SLAVE", "kind" : "object"}, {"label" : "MASTER", "tail" : "", "member" : "modules.ChiBus.main.BusTypes.MASTER", "link" : "modules\/ChiBus\/main\/BusTypes$.html#MASTER", "kind" : "object"}, {"label" : "DirectionType", "tail" : "", "member" : "modules.ChiBus.main.BusTypes.DirectionType", "link" : "modules\/ChiBus\/main\/BusTypes$.html#DirectionType", "kind" : "object"}, {"label" : "DirectionType", "tail" : "", "member" : "modules.ChiBus.main.BusTypes.DirectionType", "link" : "modules\/ChiBus\/main\/BusTypes$.html#DirectionTypeextendsAnyRef", "kind" : "trait"}, {"label" : "Direction", "tail" : "", "member" : "modules.ChiBus.main.BusTypes.Direction", "link" : "modules\/ChiBus\/main\/BusTypes$.html#DirectionextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/BusTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/BusTypes$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/BusTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/BusTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/BusTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/BusTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/BusTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/BusTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/BusTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/BusTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/BusTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/BusTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/BusTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/BusTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/BusTypes$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/BusTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/BusTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/BusTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/BusTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.ChiBus.main.Channel", "shortDescription" : "Basic channel class", "members_class" : [{"label" : "getIsOutputWithType", "tail" : "(x: => T2, masterOut: Boolean, description: String)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutputWithType", "link" : "modules\/ChiBus\/main\/Channel.html#getIsOutputWithType[T2<:chisel3.Data,T3<:modules.ChiBus.main.BusTypes.DirectionType](x:=>T2,masterOut:Boolean,description:String)(implicitac:T3):T2", "kind" : "def"}, {"label" : "getIsOutput", "tail" : "(setOutput: => T2, setInput: => T2, isMasterOut: Boolean)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutput", "link" : "modules\/ChiBus\/main\/Channel.html#getIsOutput[T2,T3<:modules.ChiBus.main.BusTypes.DirectionType](setOutput:=>T2,setInput:=>T2,isMasterOut:Boolean)(implicitac:T3):T2", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.Channel.clearOutput", "link" : "modules\/ChiBus\/main\/Channel.html#clearOutput():Unit", "kind" : "def"}, {"label" : "parseNamePool", "tail" : "(ac: T, c: GlobalConfig): Unit", "member" : "modules.ChiBus.main.Channel.parseNamePool", "link" : "modules\/ChiBus\/main\/Channel.html#parseNamePool[T<:modules.ChiBus.main.BusTypes.DirectionType](implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):Unit", "kind" : "def"}, {"label" : "addPorts", "tail" : "(ports: Seq[UInt]): Unit", "member" : "modules.ChiBus.main.Channel.addPorts", "link" : "modules\/ChiBus\/main\/Channel.html#addPorts(ports:Seq[chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "addPort", "tail" : "(port: UInt, name: String): ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.addPort", "link" : "modules\/ChiBus\/main\/Channel.html#addPort(port:chisel3.UInt,name:String):scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "def"}, {"label" : "getNamePrefix", "tail" : "(name: String)(ac: T, c: GlobalConfig): String", "member" : "modules.ChiBus.main.Channel.getNamePrefix", "link" : "modules\/ChiBus\/main\/Channel.html#getNamePrefix[T<:modules.ChiBus.main.BusTypes.DirectionType](name:String)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):String", "kind" : "def"}, {"label" : "portPool", "tail" : ": ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.portPool", "link" : "modules\/ChiBus\/main\/Channel.html#portPool:scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "val"}, {"label" : "infixName", "tail" : ": String", "member" : "modules.ChiBus.main.Channel.infixName", "link" : "modules\/ChiBus\/main\/Channel.html#infixName:String", "kind" : "val"}, {"member" : "modules.ChiBus.main.Channel#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ChiBus\/main\/Channel.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ChiBus\/main\/Channel.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): Channel.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ChiBus\/main\/Channel.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ChiBus\/main\/Channel.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ChiBus\/main\/Channel.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ChiBus\/main\/Channel.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ChiBus\/main\/Channel.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ChiBus\/main\/Channel.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ChiBus\/main\/Channel.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ChiBus\/main\/Channel.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ChiBus\/main\/Channel.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ChiBus\/main\/Channel.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/Channel.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/Channel.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ChiBus\/main\/Channel.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ChiBus\/main\/Channel.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ChiBus\/main\/Channel.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ChiBus\/main\/Channel.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ChiBus\/main\/Channel.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/Channel.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/Channel.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ChiBus\/main\/Channel.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/Channel.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/Channel.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ChiBus\/main\/Channel.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ChiBus\/main\/Channel.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ChiBus\/main\/Channel.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ChiBus\/main\/Channel.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ChiBus\/main\/Channel.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): Channel.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ChiBus\/main\/Channel.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ChiBus\/main\/Channel.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ChiBus\/main\/Channel.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ChiBus\/main\/Channel.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ChiBus\/main\/Channel.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ChiBus\/main\/Channel.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ChiBus\/main\/Channel.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ChiBus\/main\/Channel.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ChiBus\/main\/Channel.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ChiBus\/main\/Channel.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Channel.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ChiBus\/main\/Channel.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ChiBus\/main\/Channel.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ChiBus\/main\/Channel.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/Channel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/Channel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/Channel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/Channel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/Channel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/Channel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/Channel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/Channel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/Channel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/Channel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/Channel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/Channel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/Channel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/Channel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/Channel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/Channel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "<=>", "tail" : "(that: T): Unit", "member" : "modules.ChiBus.main.Channel.<=>", "link" : "modules\/ChiBus\/main\/Channel.html#<=>[T<:modules.ChiBus.main.Channel](that:T):Unit", "kind" : "abstract def"}], "class" : "modules\/ChiBus\/main\/Channel.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.ChiBus", "shortDescription" : "", "object" : "modules\/ChiBus\/main\/ChiBus$.html", "members_object" : [{"label" : "connectChiBusWatcher", "tail" : "(slave: WithChiBusSlavePort[T], watcher: WithChiBusWatcherPort[T]): Unit", "member" : "modules.ChiBus.main.ChiBus.connectChiBusWatcher", "link" : "modules\/ChiBus\/main\/ChiBus$.html#connectChiBusWatcher[T<:modules.ChiBus.main.Channel](slave:modules.ChiBus.main.WithChiBusSlavePort[T],watcher:modules.ChiBus.main.WithChiBusWatcherPort[T]):Unit", "kind" : "def"}, {"label" : "connectChiBusWatcher", "tail" : "(master: WithChiBusMasterPort[T], watcher: WithChiBusWatcherPort[T]): Unit", "member" : "modules.ChiBus.main.ChiBus.connectChiBusWatcher", "link" : "modules\/ChiBus\/main\/ChiBus$.html#connectChiBusWatcher[T<:modules.ChiBus.main.Channel](master:modules.ChiBus.main.WithChiBusMasterPort[T],watcher:modules.ChiBus.main.WithChiBusWatcherPort[T]):Unit", "kind" : "def"}, {"label" : "connectChiBusModule", "tail" : "(master: WithChiBusMasterPort[T], slave: WithChiBusSlavePort[T]): Unit", "member" : "modules.ChiBus.main.ChiBus.connectChiBusModule", "link" : "modules\/ChiBus\/main\/ChiBus$.html#connectChiBusModule[T<:modules.ChiBus.main.Channel](master:modules.ChiBus.main.WithChiBusMasterPort[T],slave:modules.ChiBus.main.WithChiBusSlavePort[T]):Unit", "kind" : "def"}, {"label" : "connectChiBus", "tail" : "(slave: ChiBusSlave[T], watcher: ChiBusWatcher[T]): Unit", "member" : "modules.ChiBus.main.ChiBus.connectChiBus", "link" : "modules\/ChiBus\/main\/ChiBus$.html#connectChiBus[T<:modules.ChiBus.main.Channel](slave:modules.ChiBus.main.ChiBusSlave[T],watcher:modules.ChiBus.main.ChiBusWatcher[T]):Unit", "kind" : "def"}, {"label" : "connectChiBus", "tail" : "(master: ChiBusMaster[T], watcher: ChiBusWatcher[T]): Unit", "member" : "modules.ChiBus.main.ChiBus.connectChiBus", "link" : "modules\/ChiBus\/main\/ChiBus$.html#connectChiBus[T<:modules.ChiBus.main.Channel](master:modules.ChiBus.main.ChiBusMaster[T],watcher:modules.ChiBus.main.ChiBusWatcher[T]):Unit", "kind" : "def"}, {"label" : "connectChiBus", "tail" : "(master: ChiBusMaster[T], slave: ChiBusSlave[T]): Unit", "member" : "modules.ChiBus.main.ChiBus.connectChiBus", "link" : "modules\/ChiBus\/main\/ChiBus$.html#connectChiBus[T<:modules.ChiBus.main.Channel](master:modules.ChiBus.main.ChiBusMaster[T],slave:modules.ChiBus.main.ChiBusSlave[T]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBus$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBus$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBus$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBus$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBus$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBus$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBus$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBus$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBus$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBus$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBus$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBus$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/ChiBus$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBus$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ChiBus$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ChiBus$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBus$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBus$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBus$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.ChiBus.main.ChiBusDirectionInput", "shortDescription" : "", "object" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html", "members_object" : [{"label" : "direction", "tail" : ": INPUT.type", "member" : "modules.ChiBus.main.ChiBusDirectionInput.direction", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#direction:modules.ChiBus.main.BusTypes.INPUT.type", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "modules.ChiBus.main.BusTypes.DirectionType.toString", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusDirectionInput$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.ChiBus.main.ChiBusDirectionMaster", "shortDescription" : "", "object" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html", "members_object" : [{"label" : "direction", "tail" : ": MASTER.type", "member" : "modules.ChiBus.main.ChiBusDirectionMaster.direction", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#direction:modules.ChiBus.main.BusTypes.MASTER.type", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "modules.ChiBus.main.BusTypes.DirectionType.toString", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusDirectionMaster$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.ChiBus.main.ChiBusDirectionOutput", "shortDescription" : "", "object" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html", "members_object" : [{"label" : "direction", "tail" : ": OUTPUT.type", "member" : "modules.ChiBus.main.ChiBusDirectionOutput.direction", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#direction:modules.ChiBus.main.BusTypes.OUTPUT.type", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "modules.ChiBus.main.BusTypes.DirectionType.toString", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusDirectionOutput$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.ChiBus.main.ChiBusDirectionSlave", "shortDescription" : "", "object" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html", "members_object" : [{"label" : "direction", "tail" : ": SLAVE.type", "member" : "modules.ChiBus.main.ChiBusDirectionSlave.direction", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#direction:modules.ChiBus.main.BusTypes.SLAVE.type", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "modules.ChiBus.main.BusTypes.DirectionType.toString", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusDirectionSlave$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.ChiBus.main.ChiBusInterface", "shortDescription" : "", "members_class" : [{"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ChiBusInterface.clearOutput", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: => ChiBusInterface[T]): Unit", "member" : "modules.ChiBus.main.ChiBusInterface.<=>", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#<=>(that:=>modules.ChiBus.main.ChiBusInterface[T]):Unit", "kind" : "def"}, {"label" : "getChannel", "tail" : "(): T", "member" : "modules.ChiBus.main.ChiBusInterface.getChannel", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#getChannel:T", "kind" : "def"}, {"label" : "channel", "tail" : ": T", "member" : "modules.ChiBus.main.ChiBusInterface.channel", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#channel:T", "kind" : "val"}, {"label" : "getDirection", "tail" : "(): DirectionType", "member" : "modules.ChiBus.main.ChiBusInterface.getDirection", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#getDirection:modules.ChiBus.main.BusTypes.DirectionType", "kind" : "def"}, {"member" : "modules.ChiBus.main.ChiBusInterface#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): ChiBusInterface.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): ChiBusInterface.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ChiBusInterface.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getShakeHands", "tail" : "(): ShakeHandsReadyValid", "member" : "modules.ChiBus.main.ChiBusInterface.getShakeHands", "link" : "modules\/ChiBus\/main\/ChiBusInterface.html#getShakeHands:modules.ChiBus.main.ShakeHandsReadyValid", "kind" : "abstract def"}], "class" : "modules\/ChiBus\/main\/ChiBusInterface.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.ChiBusInterfaceNormal", "shortDescription" : "", "members_class" : [{"label" : "getShakeHands", "tail" : "(): ShakeHands[DirectionType]", "member" : "modules.ChiBus.main.ChiBusInterfaceNormal.getShakeHands", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#getShakeHands:modules.ChiBus.main.ShakeHands[modules.ChiBus.main.BusTypes.DirectionType]", "kind" : "def"}, {"label" : "shakeHands", "tail" : ": ShakeHands[DirectionType]", "member" : "modules.ChiBus.main.ChiBusInterfaceNormal.shakeHands", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#shakeHands:modules.ChiBus.main.ShakeHands[modules.ChiBus.main.BusTypes.DirectionType]", "kind" : "val"}, {"member" : "modules.ChiBus.main.ChiBusInterfaceNormal#<init>", "error" : "unsupported entity"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ChiBusInterface.clearOutput", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: => ChiBusInterface[T]): Unit", "member" : "modules.ChiBus.main.ChiBusInterface.<=>", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#<=>(that:=>modules.ChiBus.main.ChiBusInterface[T]):Unit", "kind" : "def"}, {"label" : "getChannel", "tail" : "(): T", "member" : "modules.ChiBus.main.ChiBusInterface.getChannel", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#getChannel:T", "kind" : "def"}, {"label" : "channel", "tail" : ": T", "member" : "modules.ChiBus.main.ChiBusInterface.channel", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#channel:T", "kind" : "val"}, {"label" : "getDirection", "tail" : "(): DirectionType", "member" : "modules.ChiBus.main.ChiBusInterface.getDirection", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#getDirection:modules.ChiBus.main.BusTypes.DirectionType", "kind" : "def"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): ChiBusInterfaceNormal.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): ChiBusInterfaceNormal.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ChiBusInterfaceNormal.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ChiBus\/main\/ChiBusInterfaceNormal.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.ChiBusInterfaceWatcher", "shortDescription" : "", "members_class" : [{"label" : "getShakeHands", "tail" : "(): ShakeHandsWatcher", "member" : "modules.ChiBus.main.ChiBusInterfaceWatcher.getShakeHands", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#getShakeHands:modules.ChiBus.main.ShakeHandsWatcher", "kind" : "def"}, {"label" : "shakeHandsWatcher", "tail" : ": ShakeHandsWatcher", "member" : "modules.ChiBus.main.ChiBusInterfaceWatcher.shakeHandsWatcher", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#shakeHandsWatcher:modules.ChiBus.main.ShakeHandsWatcher", "kind" : "val"}, {"member" : "modules.ChiBus.main.ChiBusInterfaceWatcher#<init>", "error" : "unsupported entity"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ChiBusInterface.clearOutput", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: => ChiBusInterface[T]): Unit", "member" : "modules.ChiBus.main.ChiBusInterface.<=>", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#<=>(that:=>modules.ChiBus.main.ChiBusInterface[T]):Unit", "kind" : "def"}, {"label" : "getChannel", "tail" : "(): T", "member" : "modules.ChiBus.main.ChiBusInterface.getChannel", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#getChannel:T", "kind" : "def"}, {"label" : "channel", "tail" : ": T", "member" : "modules.ChiBus.main.ChiBusInterface.channel", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#channel:T", "kind" : "val"}, {"label" : "getDirection", "tail" : "(): DirectionType", "member" : "modules.ChiBus.main.ChiBusInterface.getDirection", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#getDirection:modules.ChiBus.main.BusTypes.DirectionType", "kind" : "def"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): ChiBusInterfaceWatcher.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): ChiBusInterfaceWatcher.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ChiBusInterfaceWatcher.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ChiBus\/main\/ChiBusInterfaceWatcher.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.ChiBusMaster", "shortDescription" : "", "members_class" : [{"label" : "getInterface", "tail" : "(): ChiBusInterfaceNormal[T]", "member" : "modules.ChiBus.main.ChiBusMaster.getInterface", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#getInterface:modules.ChiBus.main.ChiBusInterfaceNormal[T]", "kind" : "def"}, {"label" : "interfaceMaster", "tail" : ": ChiBusInterfaceNormal[T]", "member" : "modules.ChiBus.main.ChiBusMaster.interfaceMaster", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#interfaceMaster:modules.ChiBus.main.ChiBusInterfaceNormal[T]", "kind" : "val"}, {"label" : "channelGetterInner", "tail" : ": (DirectionType) => T", "member" : "modules.ChiBus.main.ChiBusMaster.channelGetterInner", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#channelGetterInner:modules.ChiBus.main.BusTypes.DirectionType=>T", "kind" : "implicit val"}, {"member" : "modules.ChiBus.main.ChiBusMaster#<init>", "error" : "unsupported entity"}, {"label" : "getNormalInterface", "tail" : "(channelGetter: (DirectionType) => T): ChiBusInterfaceNormal[T]", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getNormalInterface", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#getNormalInterface(implicitchannelGetter:modules.ChiBus.main.BusTypes.DirectionType=>T):modules.ChiBus.main.ChiBusInterfaceNormal[T]", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ChiBusMasterSlave.clearOutput", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: ChiBusMasterSlave[T]): Unit", "member" : "modules.ChiBus.main.ChiBusMasterSlave.<=>", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#<=>(that:modules.ChiBus.main.ChiBusMasterSlave[T]):Unit", "kind" : "def"}, {"label" : "getShakeHands", "tail" : "(): ShakeHandsReadyValid", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getShakeHands", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#getShakeHands:modules.ChiBus.main.ShakeHandsReadyValid", "kind" : "def"}, {"label" : "getChannel", "tail" : "(): T", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getChannel", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#getChannel:T", "kind" : "def"}, {"label" : "d", "tail" : ": DirectionType", "member" : "modules.ChiBus.main.ChiBusMasterSlave.d", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#d:modules.ChiBus.main.BusTypes.DirectionType", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusMaster.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ChiBus\/main\/ChiBusMaster.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.ChiBusMasterSlave", "shortDescription" : "", "members_class" : [{"label" : "getNormalInterface", "tail" : "(channelGetter: (DirectionType) => T): ChiBusInterfaceNormal[T]", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getNormalInterface", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#getNormalInterface(implicitchannelGetter:modules.ChiBus.main.BusTypes.DirectionType=>T):modules.ChiBus.main.ChiBusInterfaceNormal[T]", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ChiBusMasterSlave.clearOutput", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: ChiBusMasterSlave[T]): Unit", "member" : "modules.ChiBus.main.ChiBusMasterSlave.<=>", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#<=>(that:modules.ChiBus.main.ChiBusMasterSlave[T]):Unit", "kind" : "def"}, {"label" : "getShakeHands", "tail" : "(): ShakeHandsReadyValid", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getShakeHands", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#getShakeHands:modules.ChiBus.main.ShakeHandsReadyValid", "kind" : "def"}, {"label" : "getChannel", "tail" : "(): T", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getChannel", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#getChannel:T", "kind" : "def"}, {"label" : "d", "tail" : ": DirectionType", "member" : "modules.ChiBus.main.ChiBusMasterSlave.d", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#d:modules.ChiBus.main.BusTypes.DirectionType", "kind" : "implicit val"}, {"member" : "modules.ChiBus.main.ChiBusMasterSlave#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getInterface", "tail" : "(): ChiBusInterface[T]", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getInterface", "link" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html#getInterface:modules.ChiBus.main.ChiBusInterface[T]", "kind" : "abstract def"}], "class" : "modules\/ChiBus\/main\/ChiBusMasterSlave.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.ChiBusSlave", "shortDescription" : "", "members_class" : [{"label" : "getInterface", "tail" : "(): ChiBusInterfaceNormal[T]", "member" : "modules.ChiBus.main.ChiBusSlave.getInterface", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#getInterface:modules.ChiBus.main.ChiBusInterfaceNormal[T]", "kind" : "def"}, {"label" : "interfaceSlave", "tail" : ": ChiBusInterfaceNormal[T]", "member" : "modules.ChiBus.main.ChiBusSlave.interfaceSlave", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#interfaceSlave:modules.ChiBus.main.ChiBusInterfaceNormal[T]", "kind" : "val"}, {"label" : "channelGetterInner", "tail" : ": (DirectionType) => T", "member" : "modules.ChiBus.main.ChiBusSlave.channelGetterInner", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#channelGetterInner:modules.ChiBus.main.BusTypes.DirectionType=>T", "kind" : "implicit val"}, {"member" : "modules.ChiBus.main.ChiBusSlave#<init>", "error" : "unsupported entity"}, {"label" : "getNormalInterface", "tail" : "(channelGetter: (DirectionType) => T): ChiBusInterfaceNormal[T]", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getNormalInterface", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#getNormalInterface(implicitchannelGetter:modules.ChiBus.main.BusTypes.DirectionType=>T):modules.ChiBus.main.ChiBusInterfaceNormal[T]", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ChiBusMasterSlave.clearOutput", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: ChiBusMasterSlave[T]): Unit", "member" : "modules.ChiBus.main.ChiBusMasterSlave.<=>", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#<=>(that:modules.ChiBus.main.ChiBusMasterSlave[T]):Unit", "kind" : "def"}, {"label" : "getShakeHands", "tail" : "(): ShakeHandsReadyValid", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getShakeHands", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#getShakeHands:modules.ChiBus.main.ShakeHandsReadyValid", "kind" : "def"}, {"label" : "getChannel", "tail" : "(): T", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getChannel", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#getChannel:T", "kind" : "def"}, {"label" : "d", "tail" : ": DirectionType", "member" : "modules.ChiBus.main.ChiBusMasterSlave.d", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#d:modules.ChiBus.main.BusTypes.DirectionType", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusSlave.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ChiBus\/main\/ChiBusSlave.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.ChiBusWatcher", "shortDescription" : "", "members_class" : [{"label" : "getInterface", "tail" : "(): ChiBusInterfaceWatcher[T]", "member" : "modules.ChiBus.main.ChiBusWatcher.getInterface", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#getInterface:modules.ChiBus.main.ChiBusInterfaceWatcher[T]", "kind" : "def"}, {"label" : "interfaceWatcher", "tail" : ": ChiBusInterfaceWatcher[T]", "member" : "modules.ChiBus.main.ChiBusWatcher.interfaceWatcher", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#interfaceWatcher:modules.ChiBus.main.ChiBusInterfaceWatcher[T]", "kind" : "val"}, {"label" : "channelGetterInner", "tail" : ": (DirectionType) => T", "member" : "modules.ChiBus.main.ChiBusWatcher.channelGetterInner", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#channelGetterInner:modules.ChiBus.main.BusTypes.DirectionType=>T", "kind" : "implicit val"}, {"member" : "modules.ChiBus.main.ChiBusWatcher#<init>", "error" : "unsupported entity"}, {"label" : "getNormalInterface", "tail" : "(channelGetter: (DirectionType) => T): ChiBusInterfaceNormal[T]", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getNormalInterface", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#getNormalInterface(implicitchannelGetter:modules.ChiBus.main.BusTypes.DirectionType=>T):modules.ChiBus.main.ChiBusInterfaceNormal[T]", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ChiBusMasterSlave.clearOutput", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: ChiBusMasterSlave[T]): Unit", "member" : "modules.ChiBus.main.ChiBusMasterSlave.<=>", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#<=>(that:modules.ChiBus.main.ChiBusMasterSlave[T]):Unit", "kind" : "def"}, {"label" : "getShakeHands", "tail" : "(): ShakeHandsReadyValid", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getShakeHands", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#getShakeHands:modules.ChiBus.main.ShakeHandsReadyValid", "kind" : "def"}, {"label" : "getChannel", "tail" : "(): T", "member" : "modules.ChiBus.main.ChiBusMasterSlave.getChannel", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#getChannel:T", "kind" : "def"}, {"label" : "d", "tail" : ": DirectionType", "member" : "modules.ChiBus.main.ChiBusMasterSlave.d", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#d:modules.ChiBus.main.BusTypes.DirectionType", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ChiBusWatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ChiBus\/main\/ChiBusWatcher.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.ShakeHands", "shortDescription" : "Like Decoupled in chisel, but can use multi-directions wires in one port.", "members_class" : [{"label" : "<=>", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.ShakeHands.<=>", "link" : "modules\/ChiBus\/main\/ShakeHands.html#<=>[T2<:modules.ChiBus.main.Channel](that:T2):Unit", "kind" : "def"}, {"label" : "<==>", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.ShakeHands.<==>", "link" : "modules\/ChiBus\/main\/ShakeHands.html#<==>[T2<:modules.ChiBus.main.ShakeHandsReadyValid](that:T2):Unit", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ShakeHands.clearOutput", "link" : "modules\/ChiBus\/main\/ShakeHands.html#clearOutput():Unit", "kind" : "def"}, {"label" : "okay", "tail" : "(): Bool", "member" : "modules.ChiBus.main.ShakeHands.okay", "link" : "modules\/ChiBus\/main\/ShakeHands.html#okay:chisel3.Bool", "kind" : "def"}, {"label" : "getValid", "tail" : "(): Bool", "member" : "modules.ChiBus.main.ShakeHands.getValid", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getValid:chisel3.Bool", "kind" : "def"}, {"label" : "getReady", "tail" : "(): Bool", "member" : "modules.ChiBus.main.ShakeHands.getReady", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getReady:chisel3.Bool", "kind" : "def"}, {"label" : "valid", "tail" : ": Bool", "member" : "modules.ChiBus.main.ShakeHands.valid", "link" : "modules\/ChiBus\/main\/ShakeHands.html#valid:chisel3.Bool", "kind" : "val"}, {"label" : "ready", "tail" : ": Bool", "member" : "modules.ChiBus.main.ShakeHands.ready", "link" : "modules\/ChiBus\/main\/ShakeHands.html#ready:chisel3.Bool", "kind" : "val"}, {"label" : "getValidIsOutput", "tail" : "(): Boolean", "member" : "modules.ChiBus.main.ShakeHands.getValidIsOutput", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getValidIsOutput:Boolean", "kind" : "def"}, {"label" : "getValidWire", "tail" : "(description: String): Bool", "member" : "modules.ChiBus.main.ShakeHands.getValidWire", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getValidWire(description:String):chisel3.Bool", "kind" : "def"}, {"member" : "modules.ChiBus.main.ShakeHands#<init>", "error" : "unsupported entity"}, {"label" : "getIsOutputWithType", "tail" : "(x: => T2, masterOut: Boolean, description: String)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutputWithType", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getIsOutputWithType[T2<:chisel3.Data,T3<:modules.ChiBus.main.BusTypes.DirectionType](x:=>T2,masterOut:Boolean,description:String)(implicitac:T3):T2", "kind" : "def"}, {"label" : "getIsOutput", "tail" : "(setOutput: => T2, setInput: => T2, isMasterOut: Boolean)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutput", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getIsOutput[T2,T3<:modules.ChiBus.main.BusTypes.DirectionType](setOutput:=>T2,setInput:=>T2,isMasterOut:Boolean)(implicitac:T3):T2", "kind" : "def"}, {"label" : "parseNamePool", "tail" : "(ac: T, c: GlobalConfig): Unit", "member" : "modules.ChiBus.main.Channel.parseNamePool", "link" : "modules\/ChiBus\/main\/ShakeHands.html#parseNamePool[T<:modules.ChiBus.main.BusTypes.DirectionType](implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):Unit", "kind" : "def"}, {"label" : "addPorts", "tail" : "(ports: Seq[UInt]): Unit", "member" : "modules.ChiBus.main.Channel.addPorts", "link" : "modules\/ChiBus\/main\/ShakeHands.html#addPorts(ports:Seq[chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "addPort", "tail" : "(port: UInt, name: String): ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.addPort", "link" : "modules\/ChiBus\/main\/ShakeHands.html#addPort(port:chisel3.UInt,name:String):scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "def"}, {"label" : "getNamePrefix", "tail" : "(name: String)(ac: T, c: GlobalConfig): String", "member" : "modules.ChiBus.main.Channel.getNamePrefix", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getNamePrefix[T<:modules.ChiBus.main.BusTypes.DirectionType](name:String)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):String", "kind" : "def"}, {"label" : "portPool", "tail" : ": ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.portPool", "link" : "modules\/ChiBus\/main\/ShakeHands.html#portPool:scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "val"}, {"label" : "infixName", "tail" : ": String", "member" : "modules.ChiBus.main.Channel.infixName", "link" : "modules\/ChiBus\/main\/ShakeHands.html#infixName:String", "kind" : "val"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ChiBus\/main\/ShakeHands.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ChiBus\/main\/ShakeHands.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): ShakeHands.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ChiBus\/main\/ShakeHands.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ChiBus\/main\/ShakeHands.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ChiBus\/main\/ShakeHands.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ChiBus\/main\/ShakeHands.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ChiBus\/main\/ShakeHands.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ChiBus\/main\/ShakeHands.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ChiBus\/main\/ShakeHands.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ChiBus\/main\/ShakeHands.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ChiBus\/main\/ShakeHands.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ShakeHands.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ShakeHands.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ChiBus\/main\/ShakeHands.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ChiBus\/main\/ShakeHands.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ChiBus\/main\/ShakeHands.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ChiBus\/main\/ShakeHands.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ShakeHands.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ShakeHands.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ChiBus\/main\/ShakeHands.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ShakeHands.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ShakeHands.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ChiBus\/main\/ShakeHands.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ChiBus\/main\/ShakeHands.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ChiBus\/main\/ShakeHands.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ChiBus\/main\/ShakeHands.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ChiBus\/main\/ShakeHands.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): ShakeHands.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ChiBus\/main\/ShakeHands.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ChiBus\/main\/ShakeHands.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ChiBus\/main\/ShakeHands.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ChiBus\/main\/ShakeHands.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ChiBus\/main\/ShakeHands.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ChiBus\/main\/ShakeHands.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ChiBus\/main\/ShakeHands.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ChiBus\/main\/ShakeHands.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ChiBus\/main\/ShakeHands.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ChiBus\/main\/ShakeHands.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ShakeHands.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ChiBus\/main\/ShakeHands.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ChiBus\/main\/ShakeHands.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ChiBus\/main\/ShakeHands.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ShakeHands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ShakeHands.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ShakeHands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ShakeHands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ShakeHands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ShakeHands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ShakeHands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ShakeHands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ShakeHands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ShakeHands.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ShakeHands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ShakeHands.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ShakeHands.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ShakeHands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ShakeHands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ShakeHands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ChiBus\/main\/ShakeHands.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.ShakeHandsReadyValid", "trait" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ShakeHandsReadyValid.clearOutput", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#clearOutput():Unit", "kind" : "abstract def"}, {"label" : "getValidIsOutput", "tail" : "(): Boolean", "member" : "modules.ChiBus.main.ShakeHandsReadyValid.getValidIsOutput", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#getValidIsOutput:Boolean", "kind" : "abstract def"}, {"label" : "<==>", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.ShakeHandsReadyValid.<==>", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#<==>[T2<:modules.ChiBus.main.ShakeHandsReadyValid](that:T2):Unit", "kind" : "abstract def"}, {"label" : "getValid", "tail" : "(): Bool", "member" : "modules.ChiBus.main.ShakeHandsReadyValid.getValid", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#getValid:chisel3.Bool", "kind" : "abstract def"}, {"label" : "getReady", "tail" : "(): Bool", "member" : "modules.ChiBus.main.ShakeHandsReadyValid.getReady", "link" : "modules\/ChiBus\/main\/ShakeHandsReadyValid.html#getReady:chisel3.Bool", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "modules.ChiBus.main.ShakeHandsWatcher", "shortDescription" : "Watcher for ShakeHands, all Input wires", "members_class" : [{"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.ShakeHandsWatcher.clearOutput", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: T): Unit", "member" : "modules.ChiBus.main.ShakeHandsWatcher.<=>", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#<=>[T<:modules.ChiBus.main.Channel](that:T):Unit", "kind" : "def"}, {"label" : "getValidIsOutput", "tail" : "(): Boolean", "member" : "modules.ChiBus.main.ShakeHandsWatcher.getValidIsOutput", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#getValidIsOutput:Boolean", "kind" : "def"}, {"label" : "<==>", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.ShakeHandsWatcher.<==>", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#<==>[T2<:modules.ChiBus.main.ShakeHandsReadyValid](that:T2):Unit", "kind" : "def"}, {"label" : "okay", "tail" : "(): Bool", "member" : "modules.ChiBus.main.ShakeHandsWatcher.okay", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#okay:chisel3.Bool", "kind" : "def"}, {"label" : "getValid", "tail" : "(): Bool", "member" : "modules.ChiBus.main.ShakeHandsWatcher.getValid", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#getValid:chisel3.Bool", "kind" : "def"}, {"label" : "getReady", "tail" : "(): Bool", "member" : "modules.ChiBus.main.ShakeHandsWatcher.getReady", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#getReady:chisel3.Bool", "kind" : "def"}, {"label" : "valid", "tail" : ": Bool", "member" : "modules.ChiBus.main.ShakeHandsWatcher.valid", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#valid:chisel3.Bool", "kind" : "val"}, {"label" : "ready", "tail" : ": Bool", "member" : "modules.ChiBus.main.ShakeHandsWatcher.ready", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#ready:chisel3.Bool", "kind" : "val"}, {"member" : "modules.ChiBus.main.ShakeHandsWatcher#<init>", "error" : "unsupported entity"}, {"label" : "getIsOutputWithType", "tail" : "(x: => T2, masterOut: Boolean, description: String)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutputWithType", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#getIsOutputWithType[T2<:chisel3.Data,T3<:modules.ChiBus.main.BusTypes.DirectionType](x:=>T2,masterOut:Boolean,description:String)(implicitac:T3):T2", "kind" : "def"}, {"label" : "getIsOutput", "tail" : "(setOutput: => T2, setInput: => T2, isMasterOut: Boolean)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutput", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#getIsOutput[T2,T3<:modules.ChiBus.main.BusTypes.DirectionType](setOutput:=>T2,setInput:=>T2,isMasterOut:Boolean)(implicitac:T3):T2", "kind" : "def"}, {"label" : "parseNamePool", "tail" : "(ac: T, c: GlobalConfig): Unit", "member" : "modules.ChiBus.main.Channel.parseNamePool", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#parseNamePool[T<:modules.ChiBus.main.BusTypes.DirectionType](implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):Unit", "kind" : "def"}, {"label" : "addPorts", "tail" : "(ports: Seq[UInt]): Unit", "member" : "modules.ChiBus.main.Channel.addPorts", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#addPorts(ports:Seq[chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "addPort", "tail" : "(port: UInt, name: String): ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.addPort", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#addPort(port:chisel3.UInt,name:String):scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "def"}, {"label" : "getNamePrefix", "tail" : "(name: String)(ac: T, c: GlobalConfig): String", "member" : "modules.ChiBus.main.Channel.getNamePrefix", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#getNamePrefix[T<:modules.ChiBus.main.BusTypes.DirectionType](name:String)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):String", "kind" : "def"}, {"label" : "portPool", "tail" : ": ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.portPool", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#portPool:scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "val"}, {"label" : "infixName", "tail" : ": String", "member" : "modules.ChiBus.main.Channel.infixName", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#infixName:String", "kind" : "val"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): ShakeHandsWatcher.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): ShakeHandsWatcher.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ShakeHandsWatcher.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/ChiBus\/main\/ShakeHandsWatcher.html", "kind" : "class"}, {"name" : "modules.ChiBus.main.WithChiBusMasterPort", "trait" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html", "kind" : "trait", "members_trait" : [{"label" : "connectSlave", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusMasterPort.connectSlave", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#connectSlave[T2<:modules.ChiBus.main.WithChiBusSlavePort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getChiBusMasterPort", "tail" : "(): ChiBusMaster[T]", "member" : "modules.ChiBus.main.WithChiBusMasterPort.getChiBusMasterPort", "link" : "modules\/ChiBus\/main\/WithChiBusMasterPort.html#getChiBusMasterPort:modules.ChiBus.main.ChiBusMaster[T]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "modules.ChiBus.main.WithChiBusSlavePort", "trait" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html", "kind" : "trait", "members_trait" : [{"label" : "connectMaster", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusSlavePort.connectMaster", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#connectMaster[T2<:modules.ChiBus.main.WithChiBusMasterPort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getChiBusSlavePort", "tail" : "(): ChiBusSlave[T]", "member" : "modules.ChiBus.main.WithChiBusSlavePort.getChiBusSlavePort", "link" : "modules\/ChiBus\/main\/WithChiBusSlavePort.html#getChiBusSlavePort:modules.ChiBus.main.ChiBusSlave[T]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "modules.ChiBus.main.WithChiBusWatcherPort", "trait" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html", "kind" : "trait", "members_trait" : [{"label" : "connectSlave", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusWatcherPort.connectSlave", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#connectSlave[T2<:modules.ChiBus.main.WithChiBusSlavePort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "connectMaster", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusWatcherPort.connectMaster", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#connectMaster[T2<:modules.ChiBus.main.WithChiBusMasterPort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getChiBusWatcherPort", "tail" : "(): ChiBusWatcher[T]", "member" : "modules.ChiBus.main.WithChiBusWatcherPort.getChiBusWatcherPort", "link" : "modules\/ChiBus\/main\/WithChiBusWatcherPort.html#getChiBusWatcherPort:modules.ChiBus.main.ChiBusWatcher[T]", "kind" : "abstract def"}], "shortDescription" : ""}], "modules.hhvm.main" : [{"name" : "modules.hhvm.main.Core", "shortDescription" : "", "members_class" : [{"label" : "WBR", "tail" : ": WBRegs", "member" : "modules.hhvm.main.Core.WBR", "link" : "modules\/hhvm\/main\/Core.html#WBR:modules.hhvm.main.StageRegs.WBRegs", "kind" : "val"}, {"label" : "EXR", "tail" : ": EXRegs", "member" : "modules.hhvm.main.Core.EXR", "link" : "modules\/hhvm\/main\/Core.html#EXR:modules.hhvm.main.StageRegs.EXRegs", "kind" : "val"}, {"label" : "MEMR", "tail" : ": MEMRegs", "member" : "modules.hhvm.main.Core.MEMR", "link" : "modules\/hhvm\/main\/Core.html#MEMR:modules.hhvm.main.StageRegs.MEMRegs", "kind" : "val"}, {"label" : "WB", "tail" : ": WriteBack", "member" : "modules.hhvm.main.Core.WB", "link" : "modules\/hhvm\/main\/Core.html#WB:modules.hhvm.main.WriteBack", "kind" : "val"}, {"label" : "MEM", "tail" : ": MemoryFetch", "member" : "modules.hhvm.main.Core.MEM", "link" : "modules\/hhvm\/main\/Core.html#MEM:modules.hhvm.main.MemoryFetch", "kind" : "val"}, {"label" : "EX", "tail" : ": Execute", "member" : "modules.hhvm.main.Core.EX", "link" : "modules\/hhvm\/main\/Core.html#EX:modules.hhvm.main.Execute", "kind" : "val"}, {"label" : "IF", "tail" : ": InstructionFetch", "member" : "modules.hhvm.main.Core.IF", "link" : "modules\/hhvm\/main\/Core.html#IF:modules.hhvm.main.InstructionFetch", "kind" : "val"}, {"label" : "ID", "tail" : ": InstructionDecode", "member" : "modules.hhvm.main.Core.ID", "link" : "modules\/hhvm\/main\/Core.html#ID:modules.hhvm.main.InstructionDecode", "kind" : "val"}, {"label" : "ICache", "tail" : ": IMEMIO", "member" : "modules.hhvm.main.Core.ICache", "link" : "modules\/hhvm\/main\/Core.html#ICache:modules.hhvm.main.Mems.IMEMIO", "kind" : "val"}, {"label" : "DCache", "tail" : ": DMEMIO", "member" : "modules.hhvm.main.Core.DCache", "link" : "modules\/hhvm\/main\/Core.html#DCache:modules.hhvm.main.Mems.DMEMIO", "kind" : "val"}, {"label" : "testHarness", "tail" : ": CoreTestHarness", "member" : "modules.hhvm.main.Core.testHarness", "link" : "modules\/hhvm\/main\/Core.html#testHarness:modules.hhvm.main.Misc.CoreTestHarness", "kind" : "val"}, {"member" : "modules.hhvm.main.Core#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/Core.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/Core.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/Core.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/Core.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/Core.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/Core.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/Core.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/Core.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/Core.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/Core.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/Core.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/Core.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/Core.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/Core.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Core.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/Core.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/Core.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/Core.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/Core.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/Core.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/Core.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/Core.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/Core.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Core.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Core.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Core.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Core.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Core.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Core.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Core.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Core.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Core.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Core.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Core.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Core.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Core.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Core.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Core.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Core.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Core.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Core.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Core.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Core.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Core.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Core.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Core.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Core.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Core.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Core.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Core.html", "kind" : "class"}, {"name" : "modules.hhvm.main.DefaultSettings", "shortDescription" : "", "object" : "modules\/hhvm\/main\/DefaultSettings$.html", "members_object" : [{"label" : "apply", "tail" : "(): Map[String, String]", "member" : "modules.hhvm.main.DefaultSettings.apply", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#apply():scala.collection.mutable.Map[String,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/DefaultSettings$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/DefaultSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.hhvm.main.Execute", "shortDescription" : "", "members_class" : [{"label" : "ALUopMap", "tail" : ": Array[(UInt, UInt)]", "member" : "modules.hhvm.main.Execute.ALUopMap", "link" : "modules\/hhvm\/main\/Execute.html#ALUopMap:Array[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.Execute.io", "link" : "modules\/hhvm\/main\/Execute.html#io:chisel3.Bundle{valin:chisel3.Bundle{valop_1:chisel3.UInt;valop_2:chisel3.UInt;valalu_op:chisel3.UInt;valrd:chisel3.UInt;valw_rd:chisel3.UInt;valmem_op:chisel3.Bool;valmem_data:chisel3.UInt};valout:chisel3.Bundle{valalu_data:chisel3.UInt;valrd:chisel3.UInt;valw_rd:chisel3.UInt;valmem_op:chisel3.Bool;valmem_data:chisel3.UInt}}", "kind" : "val"}, {"member" : "modules.hhvm.main.Execute#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/Execute.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/Execute.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/Execute.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/Execute.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/Execute.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/Execute.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/Execute.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/Execute.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/Execute.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/Execute.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/Execute.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/Execute.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/Execute.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/Execute.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Execute.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/Execute.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/Execute.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/Execute.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/Execute.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/Execute.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/Execute.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/Execute.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/Execute.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Execute.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Execute.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Execute.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Execute.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Execute.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Execute.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Execute.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Execute.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Execute.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Execute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Execute.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Execute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Execute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Execute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Execute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Execute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Execute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Execute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Execute.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Execute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Execute.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Execute.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Execute.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Execute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Execute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Execute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Execute.html", "kind" : "class"}, {"name" : "modules.hhvm.main.GlobalSettings", "shortDescription" : "", "object" : "modules\/hhvm\/main\/GlobalSettings$.html", "members_object" : [{"label" : "getLong", "tail" : "(field: String): Unit", "member" : "modules.hhvm.main.GlobalSettings.getLong", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#getLong(field:String):Unit", "kind" : "def"}, {"label" : "getBool", "tail" : "(field: String): Boolean", "member" : "modules.hhvm.main.GlobalSettings.getBool", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#getBool(field:String):Boolean", "kind" : "def"}, {"label" : "set", "tail" : "(field: String, value: String): Unit", "member" : "modules.hhvm.main.GlobalSettings.set", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#set(field:String,value:String):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(field: String): String", "member" : "modules.hhvm.main.GlobalSettings.get", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#get(field:String):String", "kind" : "def"}, {"label" : "settings", "tail" : ": Map[String, String]", "member" : "modules.hhvm.main.GlobalSettings.settings", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#settings:scala.collection.mutable.Map[String,String]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/GlobalSettings$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/GlobalSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.hhvm.main.hhvm", "shortDescription" : "", "members_class" : [{"label" : "DCache", "tail" : ": DMEMIO", "member" : "modules.hhvm.main.hhvm.DCache", "link" : "modules\/hhvm\/main\/hhvm.html#DCache:modules.hhvm.main.Mems.DMEMIO", "kind" : "val"}, {"label" : "ICache", "tail" : ": IMEMIO", "member" : "modules.hhvm.main.hhvm.ICache", "link" : "modules\/hhvm\/main\/hhvm.html#ICache:modules.hhvm.main.Mems.IMEMIO", "kind" : "val"}, {"label" : "io", "tail" : ": CoreTestHarness", "member" : "modules.hhvm.main.hhvm.io", "link" : "modules\/hhvm\/main\/hhvm.html#io:modules.hhvm.main.Misc.CoreTestHarness", "kind" : "val"}, {"label" : "core", "tail" : ": Core", "member" : "modules.hhvm.main.hhvm.core", "link" : "modules\/hhvm\/main\/hhvm.html#core:modules.hhvm.main.Core", "kind" : "val"}, {"member" : "modules.hhvm.main.hhvm#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/hhvm.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/hhvm.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/hhvm.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/hhvm.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/hhvm.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/hhvm.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/hhvm.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/hhvm.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/hhvm.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/hhvm.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/hhvm.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/hhvm.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/hhvm.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/hhvm.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/hhvm.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/hhvm.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/hhvm.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/hhvm.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/hhvm.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/hhvm.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/hhvm.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/hhvm.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/hhvm.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/hhvm.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/hhvm.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/hhvm.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/hhvm.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/hhvm.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): hhvm.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/hhvm.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/hhvm.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/hhvm.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/hhvm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/hhvm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/hhvm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/hhvm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/hhvm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/hhvm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/hhvm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/hhvm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/hhvm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/hhvm.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/hhvm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/hhvm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/hhvm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/hhvm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/hhvm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/hhvm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/hhvm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/hhvm.html", "kind" : "class"}, {"name" : "modules.hhvm.main.InstructionDecode", "shortDescription" : "", "members_class" : [{"label" : "testHarness", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.InstructionDecode.testHarness", "link" : "modules\/hhvm\/main\/InstructionDecode.html#testHarness:chisel3.Bundle{valregisterPeek:chisel3.UInt;valtestUpdates:modules.hhvm.main.Misc.RegisterUpdates}", "kind" : "val"}, {"label" : "nullify", "tail" : ": Bool", "member" : "modules.hhvm.main.InstructionDecode.nullify", "link" : "modules\/hhvm\/main\/InstructionDecode.html#nullify:chisel3.Bool", "kind" : "val"}, {"label" : "branch_offset", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionDecode.branch_offset", "link" : "modules\/hhvm\/main\/InstructionDecode.html#branch_offset:chisel3.UInt", "kind" : "val"}, {"label" : "e_branch", "tail" : ": Bool", "member" : "modules.hhvm.main.InstructionDecode.e_branch", "link" : "modules\/hhvm\/main\/InstructionDecode.html#e_branch:chisel3.Bool", "kind" : "val"}, {"label" : "e_branch_sel", "tail" : ": Array[(UInt, Bool)]", "member" : "modules.hhvm.main.InstructionDecode.e_branch_sel", "link" : "modules\/hhvm\/main\/InstructionDecode.html#e_branch_sel:Array[(chisel3.UInt,chisel3.Bool)]", "kind" : "val"}, {"label" : "jump", "tail" : ": List[UInt]", "member" : "modules.hhvm.main.InstructionDecode.jump", "link" : "modules\/hhvm\/main\/InstructionDecode.html#jump:List[chisel3.UInt]", "kind" : "val"}, {"label" : "no_jump", "tail" : ": List[UInt]", "member" : "modules.hhvm.main.InstructionDecode.no_jump", "link" : "modules\/hhvm\/main\/InstructionDecode.html#no_jump:List[chisel3.UInt]", "kind" : "val"}, {"label" : "d_pc_sel", "tail" : ": Array[(BitPat, List[UInt])]", "member" : "modules.hhvm.main.InstructionDecode.d_pc_sel", "link" : "modules\/hhvm\/main\/InstructionDecode.html#d_pc_sel:Array[(chisel3.util.BitPat,List[chisel3.UInt])]", "kind" : "val"}, {"label" : "op_2_sel", "tail" : ": Array[(UInt, UInt)]", "member" : "modules.hhvm.main.InstructionDecode.op_2_sel", "link" : "modules\/hhvm\/main\/InstructionDecode.html#op_2_sel:Array[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "imm", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionDecode.imm", "link" : "modules\/hhvm\/main\/InstructionDecode.html#imm:chisel3.UInt", "kind" : "val"}, {"label" : "op_1_sel", "tail" : ": Array[(UInt, UInt)]", "member" : "modules.hhvm.main.InstructionDecode.op_1_sel", "link" : "modules\/hhvm\/main\/InstructionDecode.html#op_1_sel:Array[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "imm_sel", "tail" : ": Array[(UInt, UInt)]", "member" : "modules.hhvm.main.InstructionDecode.imm_sel", "link" : "modules\/hhvm\/main\/InstructionDecode.html#imm_sel:Array[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "op_2", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionDecode.op_2", "link" : "modules\/hhvm\/main\/InstructionDecode.html#op_2:chisel3.UInt", "kind" : "val"}, {"label" : "op_1", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionDecode.op_1", "link" : "modules\/hhvm\/main\/InstructionDecode.html#op_1:chisel3.UInt", "kind" : "val"}, {"label" : "stall", "tail" : ": Bool", "member" : "modules.hhvm.main.InstructionDecode.stall", "link" : "modules\/hhvm\/main\/InstructionDecode.html#stall:chisel3.Bool", "kind" : "val"}, {"label" : "ins", "tail" : ": Instruction", "member" : "modules.hhvm.main.InstructionDecode.ins", "link" : "modules\/hhvm\/main\/InstructionDecode.html#ins:modules.hhvm.main.Misc.Instruction", "kind" : "val"}, {"label" : "reg_rdata_2", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionDecode.reg_rdata_2", "link" : "modules\/hhvm\/main\/InstructionDecode.html#reg_rdata_2:chisel3.UInt", "kind" : "val"}, {"label" : "reg_rdata_1", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionDecode.reg_rdata_1", "link" : "modules\/hhvm\/main\/InstructionDecode.html#reg_rdata_1:chisel3.UInt", "kind" : "val"}, {"label" : "decoder", "tail" : ": Decoder", "member" : "modules.hhvm.main.InstructionDecode.decoder", "link" : "modules\/hhvm\/main\/InstructionDecode.html#decoder:modules.hhvm.main.Misc.Decoder", "kind" : "val"}, {"label" : "registers", "tail" : ": Registers", "member" : "modules.hhvm.main.InstructionDecode.registers", "link" : "modules\/hhvm\/main\/InstructionDecode.html#registers:modules.hhvm.main.Mems.Registers", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 9 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.InstructionDecode.io", "link" : "modules\/hhvm\/main\/InstructionDecode.html#io:chisel3.Bundle{valin:chisel3.Bundle{valins:modules.hhvm.main.Misc.Instruction;valpc:chisel3.UInt;valpc_4:chisel3.UInt};valwb_in:modules.hhvm.main.StageRegs.WBRegs.Contents;valex_in:modules.hhvm.main.StageRegs.WBRegs.Contents;valmem_in:modules.hhvm.main.StageRegs.WBRegs.Contents;valstall:chisel3.Bool;vale_branch:chisel3.Bool;valbranch_offset:chisel3.UInt;valout:chisel3.Bundle{valop_1:chisel3.UInt;valop_2:chisel3.UInt;valalu_op:chisel3.UInt;valrd:chisel3.UInt;valw_rd:chisel3.UInt;valmem_op:chisel3.Bool;valmem_data:chisel3.UInt};valjump:modules.hhvm.main.InstructionFetch.Jump}", "kind" : "val"}, {"member" : "modules.hhvm.main.InstructionDecode#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/InstructionDecode.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/InstructionDecode.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/InstructionDecode.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/InstructionDecode.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/InstructionDecode.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/InstructionDecode.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/InstructionDecode.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/InstructionDecode.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/InstructionDecode.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/InstructionDecode.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/InstructionDecode.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/InstructionDecode.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/InstructionDecode.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/InstructionDecode.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/InstructionDecode.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/InstructionDecode.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/InstructionDecode.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/InstructionDecode.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/InstructionDecode.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/InstructionDecode.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/InstructionDecode.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/InstructionDecode.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/InstructionDecode.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/InstructionDecode.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/InstructionDecode.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/InstructionDecode.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/InstructionDecode.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/InstructionDecode.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): InstructionDecode.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/InstructionDecode.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/InstructionDecode.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/InstructionDecode.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/InstructionDecode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/InstructionDecode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/InstructionDecode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/InstructionDecode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/InstructionDecode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/InstructionDecode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/InstructionDecode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/InstructionDecode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/InstructionDecode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/InstructionDecode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/InstructionDecode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/InstructionDecode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/InstructionDecode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/InstructionDecode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/InstructionDecode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/InstructionDecode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/InstructionDecode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/InstructionDecode.html", "kind" : "class"}, {"name" : "modules.hhvm.main.InstructionFetch", "shortDescription" : "", "object" : "modules\/hhvm\/main\/InstructionFetch$.html", "members_class" : [{"label" : "d_pc", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionFetch.d_pc", "link" : "modules\/hhvm\/main\/InstructionFetch.html#d_pc:chisel3.UInt", "kind" : "val"}, {"label" : "ins", "tail" : ": Instruction", "member" : "modules.hhvm.main.InstructionFetch.ins", "link" : "modules\/hhvm\/main\/InstructionFetch.html#ins:modules.hhvm.main.Misc.Instruction", "kind" : "val"}, {"label" : "ICache", "tail" : ": IMEMIO", "member" : "modules.hhvm.main.InstructionFetch.ICache", "link" : "modules\/hhvm\/main\/InstructionFetch.html#ICache:modules.hhvm.main.Mems.IMEMIO", "kind" : "val"}, {"label" : "offset", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionFetch.offset", "link" : "modules\/hhvm\/main\/InstructionFetch.html#offset:chisel3.UInt", "kind" : "val"}, {"label" : "current_pc", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionFetch.current_pc", "link" : "modules\/hhvm\/main\/InstructionFetch.html#current_pc:chisel3.UInt", "kind" : "val"}, {"label" : "adder_result", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionFetch.adder_result", "link" : "modules\/hhvm\/main\/InstructionFetch.html#adder_result:chisel3.UInt", "kind" : "val"}, {"label" : "reset_pc", "tail" : ": UInt", "member" : "modules.hhvm.main.InstructionFetch.reset_pc", "link" : "modules\/hhvm\/main\/InstructionFetch.html#reset_pc:chisel3.UInt", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 7 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.InstructionFetch.io", "link" : "modules\/hhvm\/main\/InstructionFetch.html#io:chisel3.Bundle{valstall:chisel3.Bool;vale_branch:chisel3.Bool;valbranch_offset:chisel3.UInt;valpc:chisel3.UInt;valpc_4:chisel3.UInt;valins:modules.hhvm.main.Misc.Instruction;valdecode_jump:modules.hhvm.main.InstructionFetch.Jump}", "kind" : "val"}, {"member" : "modules.hhvm.main.InstructionFetch#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/InstructionFetch.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/InstructionFetch.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/InstructionFetch.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/InstructionFetch.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/InstructionFetch.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/InstructionFetch.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/InstructionFetch.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/InstructionFetch.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/InstructionFetch.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/InstructionFetch.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/InstructionFetch.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/InstructionFetch.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/InstructionFetch.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/InstructionFetch.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/InstructionFetch.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/InstructionFetch.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/InstructionFetch.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/InstructionFetch.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/InstructionFetch.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/InstructionFetch.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/InstructionFetch.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/InstructionFetch.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/InstructionFetch.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/InstructionFetch.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/InstructionFetch.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/InstructionFetch.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/InstructionFetch.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/InstructionFetch.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): InstructionFetch.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/InstructionFetch.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/InstructionFetch.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/InstructionFetch.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/InstructionFetch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/InstructionFetch.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/InstructionFetch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/InstructionFetch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/InstructionFetch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/InstructionFetch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/InstructionFetch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/InstructionFetch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/InstructionFetch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/InstructionFetch.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/InstructionFetch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/InstructionFetch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/InstructionFetch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/InstructionFetch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/InstructionFetch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/InstructionFetch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/InstructionFetch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Jump", "tail" : "", "member" : "modules.hhvm.main.InstructionFetch.Jump", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#JumpextendsBundle", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/InstructionFetch$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/InstructionFetch$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/InstructionFetch.html", "kind" : "class"}, {"name" : "modules.hhvm.main.MemoryFetch", "shortDescription" : "", "members_class" : [{"label" : "testHarness", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.MemoryFetch.testHarness", "link" : "modules\/hhvm\/main\/MemoryFetch.html#testHarness:chisel3.Bundle{valDCachepeek:chisel3.UInt;valtestUpdates:modules.hhvm.main.Misc.MemUpdates}", "kind" : "val"}, {"label" : "DCache", "tail" : ": DMEMIO", "member" : "modules.hhvm.main.MemoryFetch.DCache", "link" : "modules\/hhvm\/main\/MemoryFetch.html#DCache:modules.hhvm.main.Mems.DMEMIO", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.MemoryFetch.io", "link" : "modules\/hhvm\/main\/MemoryFetch.html#io:chisel3.Bundle{valin:chisel3.Bundle{valalu_data:chisel3.UInt;valrd:chisel3.UInt;valw_rd:chisel3.Bool;valmem_op:chisel3.Bool;valmem_data:chisel3.UInt};valout:modules.hhvm.main.StageRegs.WBRegs.Contents;valmem_data:chisel3.UInt}", "kind" : "val"}, {"member" : "modules.hhvm.main.MemoryFetch#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/MemoryFetch.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/MemoryFetch.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/MemoryFetch.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/MemoryFetch.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/MemoryFetch.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/MemoryFetch.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/MemoryFetch.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/MemoryFetch.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/MemoryFetch.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/MemoryFetch.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/MemoryFetch.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/MemoryFetch.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/MemoryFetch.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/MemoryFetch.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/MemoryFetch.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/MemoryFetch.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/MemoryFetch.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/MemoryFetch.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/MemoryFetch.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/MemoryFetch.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/MemoryFetch.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/MemoryFetch.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/MemoryFetch.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/MemoryFetch.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/MemoryFetch.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/MemoryFetch.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/MemoryFetch.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/MemoryFetch.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): MemoryFetch.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/MemoryFetch.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/MemoryFetch.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/MemoryFetch.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/MemoryFetch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/MemoryFetch.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/MemoryFetch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/MemoryFetch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/MemoryFetch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/MemoryFetch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/MemoryFetch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/MemoryFetch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/MemoryFetch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/MemoryFetch.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/MemoryFetch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/MemoryFetch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/MemoryFetch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/MemoryFetch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/MemoryFetch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/MemoryFetch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/MemoryFetch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/MemoryFetch.html", "kind" : "class"}, {"name" : "modules.hhvm.main.WriteBack", "shortDescription" : "", "members_class" : [{"label" : "io", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.WriteBack.io", "link" : "modules\/hhvm\/main\/WriteBack.html#io:chisel3.Bundle{valin:modules.hhvm.main.StageRegs.WBRegs.Contents;valout:modules.hhvm.main.StageRegs.WBRegs.Contents;valmem_data:chisel3.UInt}", "kind" : "val"}, {"member" : "modules.hhvm.main.WriteBack#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/WriteBack.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/WriteBack.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/WriteBack.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/WriteBack.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/WriteBack.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/WriteBack.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/WriteBack.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/WriteBack.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/WriteBack.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/WriteBack.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/WriteBack.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/WriteBack.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/WriteBack.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/WriteBack.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/WriteBack.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/WriteBack.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/WriteBack.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/WriteBack.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/WriteBack.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/WriteBack.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/WriteBack.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/WriteBack.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/WriteBack.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/WriteBack.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/WriteBack.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/WriteBack.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/WriteBack.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/WriteBack.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): WriteBack.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/WriteBack.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/WriteBack.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/WriteBack.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/WriteBack.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/WriteBack.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/WriteBack.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/WriteBack.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/WriteBack.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/WriteBack.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/WriteBack.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/WriteBack.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/WriteBack.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/WriteBack.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/WriteBack.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/WriteBack.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/WriteBack.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/WriteBack.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/WriteBack.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/WriteBack.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/WriteBack.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/WriteBack.html", "kind" : "class"}], "modules.hhvm" : [{"name" : "modules.hhvm.HhvmDiffTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/hhvm\/HhvmDiffTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/hhvm\/HhvmDiffTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/hhvm\/HhvmDiffTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfBeWordForCollectedArray[T<:<?>]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/hhvm\/HhvmDiffTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/hhvm\/HhvmDiffTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/hhvm\/HhvmDiffTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/hhvm\/HhvmDiffTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/hhvm\/HhvmDiffTest.html#DeterminedByEquivalence[T<:<?>]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/hhvm\/HhvmDiffTest.html#DecidedByEquality[A<:<?>]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/hhvm\/HhvmDiffTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "modules\/hhvm\/HhvmDiffTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/hhvm\/HhvmDiffTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/hhvm\/HhvmDiffTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/hhvm\/HhvmDiffTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/hhvm\/HhvmDiffTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/hhvm\/HhvmDiffTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/hhvm\/HhvmDiffTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/hhvm\/HhvmDiffTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/hhvm\/HhvmDiffTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "modules.hhvm.HhvmDiffTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/hhvm\/HhvmDiffTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/hhvm\/HhvmDiffTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/hhvm\/HhvmDiffTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/hhvm\/HhvmDiffTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmDiffTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmDiffTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmDiffTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmDiffTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/hhvm\/HhvmDiffTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/hhvm\/HhvmDiffTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/hhvm\/HhvmDiffTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/hhvm\/HhvmDiffTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/hhvm\/HhvmDiffTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/hhvm\/HhvmDiffTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmDiffTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmDiffTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmDiffTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmDiffTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmDiffTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmDiffTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmDiffTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmDiffTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmDiffTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmDiffTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmDiffTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmDiffTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmDiffTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmDiffTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmDiffTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmDiffTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/hhvm\/HhvmDiffTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/hhvm\/HhvmDiffTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/hhvm\/HhvmDiffTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/hhvm\/HhvmDiffTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/hhvm\/HhvmDiffTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/hhvm\/HhvmDiffTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/hhvm\/HhvmDiffTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/hhvm\/HhvmDiffTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/hhvm\/HhvmDiffTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/hhvm\/HhvmDiffTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/hhvm\/HhvmDiffTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/hhvm\/HhvmDiffTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/hhvm\/HhvmDiffTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/hhvm\/HhvmDiffTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/hhvm\/HhvmDiffTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/hhvm\/HhvmDiffTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/hhvm\/HhvmDiffTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/hhvm\/HhvmDiffTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/hhvm\/HhvmDiffTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/hhvm\/HhvmDiffTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/hhvm\/HhvmDiffTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/hhvm\/HhvmDiffTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/hhvm\/HhvmDiffTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/hhvm\/HhvmDiffTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/hhvm\/HhvmDiffTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/hhvm\/HhvmDiffTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/hhvm\/HhvmDiffTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/hhvm\/HhvmDiffTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/hhvm\/HhvmDiffTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/hhvm\/HhvmDiffTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/hhvm\/HhvmDiffTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/hhvm\/HhvmDiffTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/hhvm\/HhvmDiffTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/hhvm\/HhvmDiffTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/hhvm\/HhvmDiffTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/hhvm\/HhvmDiffTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/hhvm\/HhvmDiffTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/hhvm\/HhvmDiffTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/hhvm\/HhvmDiffTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/hhvm\/HhvmDiffTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/hhvm\/HhvmDiffTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/hhvm\/HhvmDiffTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/hhvm\/HhvmDiffTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/hhvm\/HhvmDiffTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "modules\/hhvm\/HhvmDiffTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "modules\/hhvm\/HhvmDiffTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "modules\/hhvm\/HhvmDiffTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "modules\/hhvm\/HhvmDiffTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "modules\/hhvm\/HhvmDiffTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "modules\/hhvm\/HhvmDiffTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "modules\/hhvm\/HhvmDiffTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "modules\/hhvm\/HhvmDiffTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "modules\/hhvm\/HhvmDiffTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "modules\/hhvm\/HhvmDiffTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/hhvm\/HhvmDiffTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/hhvm\/HhvmDiffTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/hhvm\/HhvmDiffTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/hhvm\/HhvmDiffTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/hhvm\/HhvmDiffTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/hhvm\/HhvmDiffTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/hhvm\/HhvmDiffTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/hhvm\/HhvmDiffTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/hhvm\/HhvmDiffTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/hhvm\/HhvmDiffTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/hhvm\/HhvmDiffTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/hhvm\/HhvmDiffTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/hhvm\/HhvmDiffTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/hhvm\/HhvmDiffTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/hhvm\/HhvmDiffTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/hhvm\/HhvmDiffTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/hhvm\/HhvmDiffTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/hhvm\/HhvmDiffTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/hhvm\/HhvmDiffTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/hhvm\/HhvmDiffTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/hhvm\/HhvmDiffTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/hhvm\/HhvmDiffTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/hhvm\/HhvmDiffTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/hhvm\/HhvmDiffTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/hhvm\/HhvmDiffTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/hhvm\/HhvmDiffTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/hhvm\/HhvmDiffTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/hhvm\/HhvmDiffTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/hhvm\/HhvmDiffTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/hhvm\/HhvmDiffTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/hhvm\/HhvmDiffTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/hhvm\/HhvmDiffTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmDiffTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmDiffTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmDiffTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmDiffTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmDiffTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmDiffTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmDiffTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmDiffTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/hhvm\/HhvmDiffTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/hhvm\/HhvmDiffTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/hhvm\/HhvmDiffTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/hhvm\/HhvmDiffTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/hhvm\/HhvmDiffTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/hhvm\/HhvmDiffTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/hhvm\/HhvmDiffTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/hhvm\/HhvmDiffTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/hhvm\/HhvmDiffTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/hhvm\/HhvmDiffTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/hhvm\/HhvmDiffTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/hhvm\/HhvmDiffTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/hhvm\/HhvmDiffTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/hhvm\/HhvmDiffTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/hhvm\/HhvmDiffTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/hhvm\/HhvmDiffTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/hhvm\/HhvmDiffTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/hhvm\/HhvmDiffTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/hhvm\/HhvmDiffTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/hhvm\/HhvmDiffTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/hhvm\/HhvmDiffTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/hhvm\/HhvmDiffTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/hhvm\/HhvmDiffTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/hhvm\/HhvmDiffTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/HhvmDiffTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/HhvmDiffTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/HhvmDiffTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/HhvmDiffTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/HhvmDiffTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/HhvmDiffTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/HhvmDiffTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/HhvmDiffTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/HhvmDiffTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/HhvmDiffTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/HhvmDiffTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/HhvmDiffTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/HhvmDiffTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/HhvmDiffTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/HhvmDiffTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/HhvmDiffTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/HhvmDiffTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/HhvmDiffTest.html", "kind" : "class"}, {"name" : "modules.hhvm.HhvmDiffTestSimple", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "modules.hhvm.HhvmDiffTestSimple#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "org.scalatest.TestSuite.withFixture", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#withFixture(test:TestSuite.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/HhvmDiffTestSimple.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/HhvmDiffTestSimple.html", "kind" : "class"}, {"name" : "modules.hhvm.HhvmTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/hhvm\/HhvmTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/hhvm\/HhvmTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/hhvm\/HhvmTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/hhvm\/HhvmTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/hhvm\/HhvmTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/hhvm\/HhvmTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/hhvm\/HhvmTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/hhvm\/HhvmTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/hhvm\/HhvmTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/hhvm\/HhvmTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/hhvm\/HhvmTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/hhvm\/HhvmTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/hhvm\/HhvmTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/hhvm\/HhvmTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/hhvm\/HhvmTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/hhvm\/HhvmTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/hhvm\/HhvmTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/hhvm\/HhvmTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "modules\/hhvm\/HhvmTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/hhvm\/HhvmTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/hhvm\/HhvmTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/hhvm\/HhvmTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/hhvm\/HhvmTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/hhvm\/HhvmTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/hhvm\/HhvmTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/hhvm\/HhvmTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/hhvm\/HhvmTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/hhvm\/HhvmTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/hhvm\/HhvmTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/hhvm\/HhvmTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/hhvm\/HhvmTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/hhvm\/HhvmTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/hhvm\/HhvmTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/hhvm\/HhvmTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/hhvm\/HhvmTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/hhvm\/HhvmTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/hhvm\/HhvmTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "modules.hhvm.HhvmTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/hhvm\/HhvmTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/hhvm\/HhvmTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/hhvm\/HhvmTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/hhvm\/HhvmTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/hhvm\/HhvmTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/hhvm\/HhvmTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/hhvm\/HhvmTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/hhvm\/HhvmTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/hhvm\/HhvmTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/hhvm\/HhvmTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/hhvm\/HhvmTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/hhvm\/HhvmTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/hhvm\/HhvmTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/hhvm\/HhvmTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/hhvm\/HhvmTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/hhvm\/HhvmTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/hhvm\/HhvmTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/hhvm\/HhvmTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/hhvm\/HhvmTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/hhvm\/HhvmTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/hhvm\/HhvmTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/hhvm\/HhvmTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/hhvm\/HhvmTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/hhvm\/HhvmTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/hhvm\/HhvmTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/hhvm\/HhvmTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/hhvm\/HhvmTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/hhvm\/HhvmTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/hhvm\/HhvmTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/hhvm\/HhvmTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/hhvm\/HhvmTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/hhvm\/HhvmTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/hhvm\/HhvmTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/hhvm\/HhvmTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/hhvm\/HhvmTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/hhvm\/HhvmTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/hhvm\/HhvmTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/hhvm\/HhvmTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/hhvm\/HhvmTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/hhvm\/HhvmTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/hhvm\/HhvmTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/hhvm\/HhvmTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/hhvm\/HhvmTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/hhvm\/HhvmTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/hhvm\/HhvmTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/hhvm\/HhvmTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/hhvm\/HhvmTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/hhvm\/HhvmTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/hhvm\/HhvmTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/hhvm\/HhvmTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/hhvm\/HhvmTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/hhvm\/HhvmTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/hhvm\/HhvmTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/hhvm\/HhvmTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/hhvm\/HhvmTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/hhvm\/HhvmTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/hhvm\/HhvmTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/hhvm\/HhvmTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/hhvm\/HhvmTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/hhvm\/HhvmTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/hhvm\/HhvmTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/hhvm\/HhvmTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/hhvm\/HhvmTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/hhvm\/HhvmTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/hhvm\/HhvmTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/hhvm\/HhvmTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/hhvm\/HhvmTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/hhvm\/HhvmTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/hhvm\/HhvmTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/hhvm\/HhvmTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/hhvm\/HhvmTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/hhvm\/HhvmTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/hhvm\/HhvmTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/hhvm\/HhvmTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/hhvm\/HhvmTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "modules\/hhvm\/HhvmTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "modules\/hhvm\/HhvmTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "modules\/hhvm\/HhvmTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "modules\/hhvm\/HhvmTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "modules\/hhvm\/HhvmTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "modules\/hhvm\/HhvmTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "modules\/hhvm\/HhvmTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "modules\/hhvm\/HhvmTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "modules\/hhvm\/HhvmTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "modules\/hhvm\/HhvmTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/hhvm\/HhvmTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/hhvm\/HhvmTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/hhvm\/HhvmTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/hhvm\/HhvmTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/hhvm\/HhvmTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/hhvm\/HhvmTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/hhvm\/HhvmTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/hhvm\/HhvmTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/hhvm\/HhvmTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/hhvm\/HhvmTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/hhvm\/HhvmTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/hhvm\/HhvmTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/hhvm\/HhvmTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/hhvm\/HhvmTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/hhvm\/HhvmTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/hhvm\/HhvmTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/hhvm\/HhvmTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/hhvm\/HhvmTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/hhvm\/HhvmTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/hhvm\/HhvmTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/hhvm\/HhvmTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/hhvm\/HhvmTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/hhvm\/HhvmTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/hhvm\/HhvmTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/hhvm\/HhvmTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/hhvm\/HhvmTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/hhvm\/HhvmTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/hhvm\/HhvmTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/hhvm\/HhvmTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/hhvm\/HhvmTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/hhvm\/HhvmTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/hhvm\/HhvmTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/hhvm\/HhvmTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/hhvm\/HhvmTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/hhvm\/HhvmTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/hhvm\/HhvmTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/hhvm\/HhvmTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/hhvm\/HhvmTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/hhvm\/HhvmTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/hhvm\/HhvmTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/hhvm\/HhvmTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/hhvm\/HhvmTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/hhvm\/HhvmTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/hhvm\/HhvmTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/hhvm\/HhvmTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/hhvm\/HhvmTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/hhvm\/HhvmTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/hhvm\/HhvmTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/hhvm\/HhvmTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/hhvm\/HhvmTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/hhvm\/HhvmTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/hhvm\/HhvmTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/hhvm\/HhvmTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/hhvm\/HhvmTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/hhvm\/HhvmTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/hhvm\/HhvmTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/hhvm\/HhvmTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/hhvm\/HhvmTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/hhvm\/HhvmTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/hhvm\/HhvmTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/hhvm\/HhvmTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/hhvm\/HhvmTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/hhvm\/HhvmTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/hhvm\/HhvmTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/hhvm\/HhvmTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/hhvm\/HhvmTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/hhvm\/HhvmTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/hhvm\/HhvmTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/HhvmTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/HhvmTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/HhvmTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/HhvmTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/HhvmTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/HhvmTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/HhvmTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/HhvmTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/HhvmTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/HhvmTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/HhvmTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/HhvmTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/HhvmTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/HhvmTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/HhvmTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/HhvmTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/HhvmTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/HhvmTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/HhvmTest.html", "kind" : "class"}], "modules.Core" : [{"name" : "modules.Core.CoreDiffTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/Core\/CoreDiffTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/Core\/CoreDiffTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/Core\/CoreDiffTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/Core\/CoreDiffTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/Core\/CoreDiffTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/Core\/CoreDiffTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/Core\/CoreDiffTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/Core\/CoreDiffTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/Core\/CoreDiffTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/Core\/CoreDiffTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/Core\/CoreDiffTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/Core\/CoreDiffTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/Core\/CoreDiffTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/Core\/CoreDiffTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/Core\/CoreDiffTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/Core\/CoreDiffTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/Core\/CoreDiffTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/Core\/CoreDiffTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "modules\/Core\/CoreDiffTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Core\/CoreDiffTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/Core\/CoreDiffTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/Core\/CoreDiffTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/Core\/CoreDiffTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/Core\/CoreDiffTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/Core\/CoreDiffTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/Core\/CoreDiffTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/Core\/CoreDiffTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/Core\/CoreDiffTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/Core\/CoreDiffTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/Core\/CoreDiffTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/Core\/CoreDiffTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/Core\/CoreDiffTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/Core\/CoreDiffTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/Core\/CoreDiffTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/Core\/CoreDiffTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/Core\/CoreDiffTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/Core\/CoreDiffTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "modules.Core.CoreDiffTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/Core\/CoreDiffTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/Core\/CoreDiffTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/Core\/CoreDiffTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/Core\/CoreDiffTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/Core\/CoreDiffTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Core\/CoreDiffTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Core\/CoreDiffTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreDiffTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreDiffTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreDiffTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreDiffTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Core\/CoreDiffTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Core\/CoreDiffTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Core\/CoreDiffTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Core\/CoreDiffTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Core\/CoreDiffTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Core\/CoreDiffTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreDiffTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreDiffTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreDiffTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreDiffTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreDiffTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreDiffTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreDiffTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreDiffTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreDiffTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreDiffTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreDiffTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreDiffTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreDiffTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreDiffTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreDiffTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreDiffTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/Core\/CoreDiffTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/Core\/CoreDiffTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/Core\/CoreDiffTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/Core\/CoreDiffTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/Core\/CoreDiffTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/Core\/CoreDiffTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/Core\/CoreDiffTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/Core\/CoreDiffTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/Core\/CoreDiffTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/Core\/CoreDiffTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/Core\/CoreDiffTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/Core\/CoreDiffTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/Core\/CoreDiffTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/Core\/CoreDiffTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/Core\/CoreDiffTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/Core\/CoreDiffTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/Core\/CoreDiffTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/Core\/CoreDiffTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/Core\/CoreDiffTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/Core\/CoreDiffTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/Core\/CoreDiffTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/Core\/CoreDiffTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/Core\/CoreDiffTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/Core\/CoreDiffTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/Core\/CoreDiffTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Core\/CoreDiffTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Core\/CoreDiffTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/Core\/CoreDiffTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/Core\/CoreDiffTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Core\/CoreDiffTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Core\/CoreDiffTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/Core\/CoreDiffTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/Core\/CoreDiffTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/Core\/CoreDiffTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/Core\/CoreDiffTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/Core\/CoreDiffTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/Core\/CoreDiffTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/Core\/CoreDiffTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/Core\/CoreDiffTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/Core\/CoreDiffTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/Core\/CoreDiffTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/Core\/CoreDiffTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/Core\/CoreDiffTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/Core\/CoreDiffTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/Core\/CoreDiffTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/Core\/CoreDiffTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/Core\/CoreDiffTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/Core\/CoreDiffTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/Core\/CoreDiffTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/Core\/CoreDiffTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/Core\/CoreDiffTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/Core\/CoreDiffTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/Core\/CoreDiffTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/Core\/CoreDiffTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/Core\/CoreDiffTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/Core\/CoreDiffTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/Core\/CoreDiffTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "modules\/Core\/CoreDiffTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "modules\/Core\/CoreDiffTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "modules\/Core\/CoreDiffTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "modules\/Core\/CoreDiffTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "modules\/Core\/CoreDiffTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "modules\/Core\/CoreDiffTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "modules\/Core\/CoreDiffTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "modules\/Core\/CoreDiffTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "modules\/Core\/CoreDiffTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "modules\/Core\/CoreDiffTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/Core\/CoreDiffTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/Core\/CoreDiffTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/Core\/CoreDiffTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/Core\/CoreDiffTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/Core\/CoreDiffTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/Core\/CoreDiffTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/Core\/CoreDiffTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/Core\/CoreDiffTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/Core\/CoreDiffTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/Core\/CoreDiffTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/Core\/CoreDiffTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Core\/CoreDiffTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/Core\/CoreDiffTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/Core\/CoreDiffTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/Core\/CoreDiffTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/Core\/CoreDiffTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/Core\/CoreDiffTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/Core\/CoreDiffTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/Core\/CoreDiffTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/Core\/CoreDiffTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/Core\/CoreDiffTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/Core\/CoreDiffTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/Core\/CoreDiffTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/Core\/CoreDiffTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/Core\/CoreDiffTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/Core\/CoreDiffTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/Core\/CoreDiffTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/Core\/CoreDiffTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/Core\/CoreDiffTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/Core\/CoreDiffTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/Core\/CoreDiffTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/Core\/CoreDiffTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/Core\/CoreDiffTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/Core\/CoreDiffTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/Core\/CoreDiffTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/Core\/CoreDiffTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/Core\/CoreDiffTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreDiffTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreDiffTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreDiffTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreDiffTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreDiffTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreDiffTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreDiffTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreDiffTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Core\/CoreDiffTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Core\/CoreDiffTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/Core\/CoreDiffTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/Core\/CoreDiffTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/Core\/CoreDiffTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/Core\/CoreDiffTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/Core\/CoreDiffTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Core\/CoreDiffTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Core\/CoreDiffTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Core\/CoreDiffTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Core\/CoreDiffTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/Core\/CoreDiffTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/Core\/CoreDiffTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/Core\/CoreDiffTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/Core\/CoreDiffTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/Core\/CoreDiffTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/Core\/CoreDiffTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/Core\/CoreDiffTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/Core\/CoreDiffTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/Core\/CoreDiffTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/Core\/CoreDiffTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/Core\/CoreDiffTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Core\/CoreDiffTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Core\/CoreDiffTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Core\/CoreDiffTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Core\/CoreDiffTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Core\/CoreDiffTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Core\/CoreDiffTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/Core\/CoreDiffTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/CoreDiffTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/CoreDiffTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/CoreDiffTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/CoreDiffTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/CoreDiffTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/CoreDiffTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/CoreDiffTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/CoreDiffTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/CoreDiffTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/CoreDiffTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/CoreDiffTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/CoreDiffTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/CoreDiffTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/CoreDiffTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/CoreDiffTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/CoreDiffTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/CoreDiffTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/CoreDiffTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/CoreDiffTest.html", "kind" : "class"}, {"name" : "modules.Core.CoreDiffTestSimple", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/Core\/CoreDiffTestSimple.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/Core\/CoreDiffTestSimple.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/Core\/CoreDiffTestSimple.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/Core\/CoreDiffTestSimple.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/Core\/CoreDiffTestSimple.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/Core\/CoreDiffTestSimple.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/Core\/CoreDiffTestSimple.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/Core\/CoreDiffTestSimple.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/Core\/CoreDiffTestSimple.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/Core\/CoreDiffTestSimple.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Core\/CoreDiffTestSimple.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/Core\/CoreDiffTestSimple.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/Core\/CoreDiffTestSimple.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/Core\/CoreDiffTestSimple.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/Core\/CoreDiffTestSimple.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/Core\/CoreDiffTestSimple.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/Core\/CoreDiffTestSimple.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/Core\/CoreDiffTestSimple.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/Core\/CoreDiffTestSimple.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/Core\/CoreDiffTestSimple.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/Core\/CoreDiffTestSimple.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/Core\/CoreDiffTestSimple.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/Core\/CoreDiffTestSimple.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/Core\/CoreDiffTestSimple.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/Core\/CoreDiffTestSimple.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "modules.Core.CoreDiffTestSimple#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/Core\/CoreDiffTestSimple.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/Core\/CoreDiffTestSimple.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Core\/CoreDiffTestSimple.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Core\/CoreDiffTestSimple.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreDiffTestSimple.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreDiffTestSimple.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreDiffTestSimple.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreDiffTestSimple.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Core\/CoreDiffTestSimple.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Core\/CoreDiffTestSimple.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Core\/CoreDiffTestSimple.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Core\/CoreDiffTestSimple.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Core\/CoreDiffTestSimple.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Core\/CoreDiffTestSimple.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreDiffTestSimple.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreDiffTestSimple.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreDiffTestSimple.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreDiffTestSimple.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreDiffTestSimple.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreDiffTestSimple.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreDiffTestSimple.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreDiffTestSimple.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreDiffTestSimple.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreDiffTestSimple.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreDiffTestSimple.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreDiffTestSimple.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreDiffTestSimple.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreDiffTestSimple.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreDiffTestSimple.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreDiffTestSimple.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/Core\/CoreDiffTestSimple.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/Core\/CoreDiffTestSimple.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/Core\/CoreDiffTestSimple.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/Core\/CoreDiffTestSimple.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/Core\/CoreDiffTestSimple.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/Core\/CoreDiffTestSimple.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/Core\/CoreDiffTestSimple.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/Core\/CoreDiffTestSimple.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/Core\/CoreDiffTestSimple.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/Core\/CoreDiffTestSimple.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/Core\/CoreDiffTestSimple.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/Core\/CoreDiffTestSimple.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/Core\/CoreDiffTestSimple.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/Core\/CoreDiffTestSimple.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Core\/CoreDiffTestSimple.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Core\/CoreDiffTestSimple.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/Core\/CoreDiffTestSimple.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/Core\/CoreDiffTestSimple.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Core\/CoreDiffTestSimple.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Core\/CoreDiffTestSimple.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/Core\/CoreDiffTestSimple.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/Core\/CoreDiffTestSimple.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/Core\/CoreDiffTestSimple.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/Core\/CoreDiffTestSimple.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/Core\/CoreDiffTestSimple.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/Core\/CoreDiffTestSimple.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/Core\/CoreDiffTestSimple.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/Core\/CoreDiffTestSimple.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/Core\/CoreDiffTestSimple.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/Core\/CoreDiffTestSimple.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/Core\/CoreDiffTestSimple.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/Core\/CoreDiffTestSimple.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/Core\/CoreDiffTestSimple.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/Core\/CoreDiffTestSimple.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/Core\/CoreDiffTestSimple.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/Core\/CoreDiffTestSimple.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/Core\/CoreDiffTestSimple.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/Core\/CoreDiffTestSimple.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/Core\/CoreDiffTestSimple.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/Core\/CoreDiffTestSimple.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/Core\/CoreDiffTestSimple.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/Core\/CoreDiffTestSimple.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/Core\/CoreDiffTestSimple.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/Core\/CoreDiffTestSimple.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/Core\/CoreDiffTestSimple.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/Core\/CoreDiffTestSimple.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/Core\/CoreDiffTestSimple.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/Core\/CoreDiffTestSimple.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/Core\/CoreDiffTestSimple.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/Core\/CoreDiffTestSimple.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/Core\/CoreDiffTestSimple.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/Core\/CoreDiffTestSimple.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/Core\/CoreDiffTestSimple.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/Core\/CoreDiffTestSimple.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/Core\/CoreDiffTestSimple.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/Core\/CoreDiffTestSimple.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/Core\/CoreDiffTestSimple.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/Core\/CoreDiffTestSimple.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/Core\/CoreDiffTestSimple.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/Core\/CoreDiffTestSimple.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/Core\/CoreDiffTestSimple.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/Core\/CoreDiffTestSimple.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/Core\/CoreDiffTestSimple.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/Core\/CoreDiffTestSimple.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/Core\/CoreDiffTestSimple.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "org.scalatest.TestSuite.withFixture", "link" : "modules\/Core\/CoreDiffTestSimple.html#withFixture(test:TestSuite.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/Core\/CoreDiffTestSimple.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/Core\/CoreDiffTestSimple.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/Core\/CoreDiffTestSimple.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/Core\/CoreDiffTestSimple.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/Core\/CoreDiffTestSimple.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/Core\/CoreDiffTestSimple.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/Core\/CoreDiffTestSimple.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/Core\/CoreDiffTestSimple.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/Core\/CoreDiffTestSimple.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/Core\/CoreDiffTestSimple.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/Core\/CoreDiffTestSimple.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreDiffTestSimple.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreDiffTestSimple.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreDiffTestSimple.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreDiffTestSimple.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreDiffTestSimple.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreDiffTestSimple.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreDiffTestSimple.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreDiffTestSimple.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Core\/CoreDiffTestSimple.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Core\/CoreDiffTestSimple.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/Core\/CoreDiffTestSimple.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/Core\/CoreDiffTestSimple.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/Core\/CoreDiffTestSimple.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/Core\/CoreDiffTestSimple.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/Core\/CoreDiffTestSimple.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Core\/CoreDiffTestSimple.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Core\/CoreDiffTestSimple.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Core\/CoreDiffTestSimple.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Core\/CoreDiffTestSimple.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/Core\/CoreDiffTestSimple.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/Core\/CoreDiffTestSimple.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/Core\/CoreDiffTestSimple.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/Core\/CoreDiffTestSimple.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/Core\/CoreDiffTestSimple.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/Core\/CoreDiffTestSimple.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Core\/CoreDiffTestSimple.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Core\/CoreDiffTestSimple.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Core\/CoreDiffTestSimple.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Core\/CoreDiffTestSimple.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Core\/CoreDiffTestSimple.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Core\/CoreDiffTestSimple.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/Core\/CoreDiffTestSimple.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/CoreDiffTestSimple.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/CoreDiffTestSimple.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/CoreDiffTestSimple.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/CoreDiffTestSimple.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/CoreDiffTestSimple.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/CoreDiffTestSimple.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/CoreDiffTestSimple.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/CoreDiffTestSimple.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/CoreDiffTestSimple.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/CoreDiffTestSimple.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/CoreDiffTestSimple.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/CoreDiffTestSimple.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/CoreDiffTestSimple.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/CoreDiffTestSimple.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/CoreDiffTestSimple.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/CoreDiffTestSimple.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/CoreDiffTestSimple.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/CoreDiffTestSimple.html", "kind" : "class"}, {"name" : "modules.Core.CoreTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/Core\/CoreTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/Core\/CoreTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/Core\/CoreTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/Core\/CoreTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/Core\/CoreTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/Core\/CoreTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/Core\/CoreTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/Core\/CoreTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/Core\/CoreTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/Core\/CoreTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/Core\/CoreTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/Core\/CoreTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/Core\/CoreTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/Core\/CoreTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/Core\/CoreTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/Core\/CoreTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/Core\/CoreTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/Core\/CoreTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/Core\/CoreTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/Core\/CoreTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/Core\/CoreTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/Core\/CoreTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/Core\/CoreTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/Core\/CoreTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/Core\/CoreTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/Core\/CoreTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/Core\/CoreTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/Core\/CoreTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/Core\/CoreTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/Core\/CoreTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/Core\/CoreTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/Core\/CoreTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/Core\/CoreTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "modules\/Core\/CoreTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Core\/CoreTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/Core\/CoreTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/Core\/CoreTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/Core\/CoreTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/Core\/CoreTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/Core\/CoreTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/Core\/CoreTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/Core\/CoreTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/Core\/CoreTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/Core\/CoreTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/Core\/CoreTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/Core\/CoreTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/Core\/CoreTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/Core\/CoreTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/Core\/CoreTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/Core\/CoreTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/Core\/CoreTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/Core\/CoreTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "modules.Core.CoreTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/Core\/CoreTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/Core\/CoreTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/Core\/CoreTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/Core\/CoreTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/Core\/CoreTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Core\/CoreTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Core\/CoreTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/Core\/CoreTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Core\/CoreTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Core\/CoreTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/Core\/CoreTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Core\/CoreTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Core\/CoreTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/Core\/CoreTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/Core\/CoreTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/Core\/CoreTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/Core\/CoreTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/Core\/CoreTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/Core\/CoreTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/Core\/CoreTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/Core\/CoreTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/Core\/CoreTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/Core\/CoreTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/Core\/CoreTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/Core\/CoreTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/Core\/CoreTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/Core\/CoreTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/Core\/CoreTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/Core\/CoreTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/Core\/CoreTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/Core\/CoreTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/Core\/CoreTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/Core\/CoreTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/Core\/CoreTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/Core\/CoreTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/Core\/CoreTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/Core\/CoreTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/Core\/CoreTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/Core\/CoreTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/Core\/CoreTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/Core\/CoreTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/Core\/CoreTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/Core\/CoreTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/Core\/CoreTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/Core\/CoreTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/Core\/CoreTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/Core\/CoreTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Core\/CoreTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/Core\/CoreTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/Core\/CoreTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/Core\/CoreTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/Core\/CoreTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/Core\/CoreTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/Core\/CoreTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/Core\/CoreTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/Core\/CoreTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/Core\/CoreTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/Core\/CoreTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/Core\/CoreTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/Core\/CoreTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/Core\/CoreTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/Core\/CoreTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/Core\/CoreTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/Core\/CoreTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/Core\/CoreTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/Core\/CoreTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/Core\/CoreTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/Core\/CoreTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/Core\/CoreTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/Core\/CoreTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/Core\/CoreTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/Core\/CoreTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/Core\/CoreTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/Core\/CoreTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/Core\/CoreTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "modules\/Core\/CoreTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "modules\/Core\/CoreTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "modules\/Core\/CoreTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "modules\/Core\/CoreTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "modules\/Core\/CoreTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "modules\/Core\/CoreTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "modules\/Core\/CoreTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "modules\/Core\/CoreTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "modules\/Core\/CoreTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "modules\/Core\/CoreTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/Core\/CoreTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/Core\/CoreTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/Core\/CoreTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/Core\/CoreTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/Core\/CoreTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/Core\/CoreTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/Core\/CoreTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/Core\/CoreTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/Core\/CoreTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/Core\/CoreTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/Core\/CoreTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/Core\/CoreTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/Core\/CoreTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/Core\/CoreTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/Core\/CoreTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/Core\/CoreTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/Core\/CoreTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/Core\/CoreTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/Core\/CoreTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/Core\/CoreTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/Core\/CoreTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/Core\/CoreTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/Core\/CoreTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/Core\/CoreTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/Core\/CoreTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/Core\/CoreTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/Core\/CoreTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/Core\/CoreTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/Core\/CoreTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/Core\/CoreTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/Core\/CoreTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/Core\/CoreTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/Core\/CoreTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/Core\/CoreTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/Core\/CoreTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/Core\/CoreTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/Core\/CoreTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/Core\/CoreTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/Core\/CoreTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Core\/CoreTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/Core\/CoreTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/Core\/CoreTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/Core\/CoreTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/Core\/CoreTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/Core\/CoreTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/Core\/CoreTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Core\/CoreTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/Core\/CoreTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Core\/CoreTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/Core\/CoreTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/Core\/CoreTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/Core\/CoreTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/Core\/CoreTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/Core\/CoreTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/Core\/CoreTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/Core\/CoreTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/Core\/CoreTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/Core\/CoreTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/Core\/CoreTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/Core\/CoreTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/Core\/CoreTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Core\/CoreTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Core\/CoreTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Core\/CoreTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Core\/CoreTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/Core\/CoreTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/Core\/CoreTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/Core\/CoreTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/CoreTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/CoreTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/CoreTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/CoreTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/CoreTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/CoreTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/CoreTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/CoreTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/CoreTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/CoreTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/CoreTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/CoreTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/CoreTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/CoreTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/CoreTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/CoreTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/CoreTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/CoreTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/CoreTest.html", "kind" : "class"}], "utils" : [{"name" : "utils.BasicLogger", "shortDescription" : "", "members_class" : [{"label" : "printStackTrace", "tail" : "(cls: Class[_]): Unit", "member" : "utils.BasicLogger.printStackTrace", "link" : "utils\/BasicLogger.html#printStackTrace(cls:Class[_]):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(msg: => String, xs: T*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.fatal", "link" : "utils\/BasicLogger.html#fatal(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: => String, xs: T*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.error", "link" : "utils\/BasicLogger.html#error(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: => String, xs: T*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.warn", "link" : "utils\/BasicLogger.html#warn(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: => String, xs: T*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.info", "link" : "utils\/BasicLogger.html#info(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: => String, xs: T*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.debug", "link" : "utils\/BasicLogger.html#debug(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(msg: => String, xs: T*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.log", "link" : "utils\/BasicLogger.html#log(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "setLevel", "tail" : "(level: Int): Unit", "member" : "utils.BasicLogger.setLevel", "link" : "utils\/BasicLogger.html#setLevel(level:Int):Unit", "kind" : "def"}, {"label" : "logIt", "tail" : "(foo: String, level: Int, xs: T*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.logIt", "link" : "utils\/BasicLogger.html#logIt(foo:String,level:Int,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "final def"}, {"label" : "outputStringNewLine", "tail" : "(str: String, xs: T*): Unit", "member" : "utils.BasicLogger.outputStringNewLine", "link" : "utils\/BasicLogger.html#outputStringNewLine(str:String,xs:T*):Unit", "kind" : "def"}, {"label" : "levelText", "tail" : ": Seq[String]", "member" : "utils.BasicLogger.levelText", "link" : "utils\/BasicLogger.html#levelText:Seq[String]", "kind" : "val"}, {"label" : "logLevel", "tail" : ": Int", "member" : "utils.BasicLogger.logLevel", "link" : "utils\/BasicLogger.html#logLevel:Int", "kind" : "var"}, {"label" : "LOG_LEVER_FATAL", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_FATAL", "link" : "utils\/BasicLogger.html#LOG_LEVER_FATAL:Int", "kind" : "val"}, {"label" : "LOG_LEVER_ERROR", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_ERROR", "link" : "utils\/BasicLogger.html#LOG_LEVER_ERROR:Int", "kind" : "val"}, {"label" : "LOG_LEVER_WARN", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_WARN", "link" : "utils\/BasicLogger.html#LOG_LEVER_WARN:Int", "kind" : "val"}, {"label" : "LOG_LEVER_INFO", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_INFO", "link" : "utils\/BasicLogger.html#LOG_LEVER_INFO:Int", "kind" : "val"}, {"label" : "LOG_LEVER_VERBOSE", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_VERBOSE", "link" : "utils\/BasicLogger.html#LOG_LEVER_VERBOSE:Int", "kind" : "val"}, {"label" : "LOG_LEVER_DEBUG", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_DEBUG", "link" : "utils\/BasicLogger.html#LOG_LEVER_DEBUG:Int", "kind" : "val"}, {"label" : "debugEnable", "tail" : ": Boolean", "member" : "utils.BasicLogger.debugEnable", "link" : "utils\/BasicLogger.html#debugEnable:Boolean", "kind" : "val"}, {"member" : "utils.BasicLogger#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/BasicLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/BasicLogger.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/BasicLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/BasicLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/BasicLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/BasicLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/BasicLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/BasicLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/BasicLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/BasicLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/BasicLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/BasicLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/BasicLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/BasicLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/BasicLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/BasicLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/BasicLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/BasicLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/BasicLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/BasicLogger.html", "kind" : "class"}, {"name" : "utils.generate", "shortDescription" : "", "object" : "utils\/generate$.html", "members_object" : [{"label" : "generateVerilog", "tail" : "(generativeClasses: Map[String, () => RawModule], args: Array[String], outsideModules: Boolean, generateWrapper: Boolean): Unit", "member" : "utils.generate.generateVerilog", "link" : "utils\/generate$.html#generateVerilog(generativeClasses:Map[String,()=>chisel3.RawModule],args:Array[String],outsideModules:Boolean,generateWrapper:Boolean):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/generate$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/generate$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/generate$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/generate$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/generate$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/generate$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/generate$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/generate$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/generate$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/generate$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/generate$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/generate$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/generate$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/generate$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/generate$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/generate$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/generate$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/generate$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/generate$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "utils.GlobalConfigLoader", "shortDescription" : "全局项目配置。每次编译的时候从磁盘读取。读取位置顺序：1.", "object" : "utils\/GlobalConfigLoader$.html", "members_object" : [{"label" : "configAXI4Default", "tail" : ": AXI4ConfigDefault", "member" : "utils.GlobalConfigLoader.configAXI4Default", "link" : "utils\/GlobalConfigLoader$.html#configAXI4Default:modules.AXI4.main.ConfigTypes.AXI4ConfigDefault", "kind" : "implicit val"}, {"label" : "config", "tail" : ": GlobalConfig", "member" : "utils.GlobalConfigLoader.config", "link" : "utils\/GlobalConfigLoader$.html#config:utils.GlobalConfigLoader.GlobalConfig", "kind" : "implicit val"}, {"label" : "generate", "tail" : "(): GlobalConfig", "member" : "utils.GlobalConfigLoader.generate", "link" : "utils\/GlobalConfigLoader$.html#generate:utils.GlobalConfigLoader.GlobalConfig", "kind" : "def"}, {"label" : "GlobalConfig", "tail" : "", "member" : "utils.GlobalConfigLoader.GlobalConfig", "link" : "utils\/GlobalConfigLoader$.html#GlobalConfigextendsDynamic", "kind" : "class"}, {"label" : "debugReadingConfig", "tail" : ": Boolean", "member" : "utils.GlobalConfigLoader.debugReadingConfig", "link" : "utils\/GlobalConfigLoader$.html#debugReadingConfig:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/GlobalConfigLoader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/GlobalConfigLoader$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/GlobalConfigLoader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/GlobalConfigLoader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/GlobalConfigLoader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/GlobalConfigLoader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/GlobalConfigLoader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/GlobalConfigLoader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/GlobalConfigLoader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/GlobalConfigLoader$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/GlobalConfigLoader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/GlobalConfigLoader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/GlobalConfigLoader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/GlobalConfigLoader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/GlobalConfigLoader$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/GlobalConfigLoader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/GlobalConfigLoader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/GlobalConfigLoader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/GlobalConfigLoader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "utils.hwLogger", "shortDescription" : "", "object" : "utils\/hwLogger$.html", "members_object" : [{"label" : "outputStringNewLine", "tail" : "(str: String, xs: Bits*): Unit", "member" : "utils.hwLogger.outputStringNewLine", "link" : "utils\/hwLogger$.html#outputStringNewLine(str:String,xs:chisel3.Bits*):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(cls: Class[_]): Unit", "member" : "utils.BasicLogger.printStackTrace", "link" : "utils\/hwLogger$.html#printStackTrace(cls:Class[_]):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(msg: => String, xs: Bits*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.fatal", "link" : "utils\/hwLogger$.html#fatal(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: => String, xs: Bits*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.error", "link" : "utils\/hwLogger$.html#error(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: => String, xs: Bits*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.warn", "link" : "utils\/hwLogger$.html#warn(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: => String, xs: Bits*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.info", "link" : "utils\/hwLogger$.html#info(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: => String, xs: Bits*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.debug", "link" : "utils\/hwLogger$.html#debug(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(msg: => String, xs: Bits*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.log", "link" : "utils\/hwLogger$.html#log(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "setLevel", "tail" : "(level: Int): Unit", "member" : "utils.BasicLogger.setLevel", "link" : "utils\/hwLogger$.html#setLevel(level:Int):Unit", "kind" : "def"}, {"label" : "logIt", "tail" : "(foo: String, level: Int, xs: Bits*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.logIt", "link" : "utils\/hwLogger$.html#logIt(foo:String,level:Int,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "final def"}, {"label" : "levelText", "tail" : ": Seq[String]", "member" : "utils.BasicLogger.levelText", "link" : "utils\/hwLogger$.html#levelText:Seq[String]", "kind" : "val"}, {"label" : "logLevel", "tail" : ": Int", "member" : "utils.BasicLogger.logLevel", "link" : "utils\/hwLogger$.html#logLevel:Int", "kind" : "var"}, {"label" : "LOG_LEVER_FATAL", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_FATAL", "link" : "utils\/hwLogger$.html#LOG_LEVER_FATAL:Int", "kind" : "val"}, {"label" : "LOG_LEVER_ERROR", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_ERROR", "link" : "utils\/hwLogger$.html#LOG_LEVER_ERROR:Int", "kind" : "val"}, {"label" : "LOG_LEVER_WARN", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_WARN", "link" : "utils\/hwLogger$.html#LOG_LEVER_WARN:Int", "kind" : "val"}, {"label" : "LOG_LEVER_INFO", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_INFO", "link" : "utils\/hwLogger$.html#LOG_LEVER_INFO:Int", "kind" : "val"}, {"label" : "LOG_LEVER_VERBOSE", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_VERBOSE", "link" : "utils\/hwLogger$.html#LOG_LEVER_VERBOSE:Int", "kind" : "val"}, {"label" : "LOG_LEVER_DEBUG", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_DEBUG", "link" : "utils\/hwLogger$.html#LOG_LEVER_DEBUG:Int", "kind" : "val"}, {"label" : "debugEnable", "tail" : ": Boolean", "member" : "utils.BasicLogger.debugEnable", "link" : "utils\/hwLogger$.html#debugEnable:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/hwLogger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/hwLogger$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/hwLogger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/hwLogger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/hwLogger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/hwLogger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/hwLogger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/hwLogger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/hwLogger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/hwLogger$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/hwLogger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/hwLogger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/hwLogger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/hwLogger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/hwLogger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/hwLogger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/hwLogger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/hwLogger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/hwLogger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "utils.logger", "shortDescription" : "", "object" : "utils\/logger$.html", "members_object" : [{"label" : "printStackTrace", "tail" : "(cls: Class[_]): Unit", "member" : "utils.BasicLogger.printStackTrace", "link" : "utils\/logger$.html#printStackTrace(cls:Class[_]):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(msg: => String, xs: Nothing*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.fatal", "link" : "utils\/logger$.html#fatal(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: => String, xs: Nothing*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.error", "link" : "utils\/logger$.html#error(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: => String, xs: Nothing*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.warn", "link" : "utils\/logger$.html#warn(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: => String, xs: Nothing*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.info", "link" : "utils\/logger$.html#info(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: => String, xs: Nothing*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.debug", "link" : "utils\/logger$.html#debug(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(msg: => String, xs: Nothing*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.log", "link" : "utils\/logger$.html#log(msg:=>String,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "setLevel", "tail" : "(level: Int): Unit", "member" : "utils.BasicLogger.setLevel", "link" : "utils\/logger$.html#setLevel(level:Int):Unit", "kind" : "def"}, {"label" : "logIt", "tail" : "(foo: String, level: Int, xs: Nothing*)(line: Line, file: File, name: Name): Unit", "member" : "utils.BasicLogger.logIt", "link" : "utils\/logger$.html#logIt(foo:String,level:Int,xs:T*)(implicitline:sourcecode.Line,implicitfile:sourcecode.File,implicitname:sourcecode.Name):Unit", "kind" : "final def"}, {"label" : "outputStringNewLine", "tail" : "(str: String, xs: Nothing*): Unit", "member" : "utils.BasicLogger.outputStringNewLine", "link" : "utils\/logger$.html#outputStringNewLine(str:String,xs:T*):Unit", "kind" : "def"}, {"label" : "levelText", "tail" : ": Seq[String]", "member" : "utils.BasicLogger.levelText", "link" : "utils\/logger$.html#levelText:Seq[String]", "kind" : "val"}, {"label" : "logLevel", "tail" : ": Int", "member" : "utils.BasicLogger.logLevel", "link" : "utils\/logger$.html#logLevel:Int", "kind" : "var"}, {"label" : "LOG_LEVER_FATAL", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_FATAL", "link" : "utils\/logger$.html#LOG_LEVER_FATAL:Int", "kind" : "val"}, {"label" : "LOG_LEVER_ERROR", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_ERROR", "link" : "utils\/logger$.html#LOG_LEVER_ERROR:Int", "kind" : "val"}, {"label" : "LOG_LEVER_WARN", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_WARN", "link" : "utils\/logger$.html#LOG_LEVER_WARN:Int", "kind" : "val"}, {"label" : "LOG_LEVER_INFO", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_INFO", "link" : "utils\/logger$.html#LOG_LEVER_INFO:Int", "kind" : "val"}, {"label" : "LOG_LEVER_VERBOSE", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_VERBOSE", "link" : "utils\/logger$.html#LOG_LEVER_VERBOSE:Int", "kind" : "val"}, {"label" : "LOG_LEVER_DEBUG", "tail" : ": Int", "member" : "utils.BasicLogger.LOG_LEVER_DEBUG", "link" : "utils\/logger$.html#LOG_LEVER_DEBUG:Int", "kind" : "val"}, {"label" : "debugEnable", "tail" : ": Boolean", "member" : "utils.BasicLogger.debugEnable", "link" : "utils\/logger$.html#debugEnable:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/logger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/logger$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/logger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/logger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/logger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/logger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/logger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/logger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/logger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/logger$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/logger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/logger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/logger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/logger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/logger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/logger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/logger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/logger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/logger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "utils.NegativeResetWrapper", "shortDescription" : "", "members_class" : [{"label" : "desiredName", "tail" : "(): String", "member" : "utils.NegativeResetWrapper.desiredName", "link" : "utils\/NegativeResetWrapper.html#desiredName:String", "kind" : "def"}, {"label" : "gotModuleName", "tail" : ": Option[String]", "member" : "utils.NegativeResetWrapper.gotModuleName", "link" : "utils\/NegativeResetWrapper.html#gotModuleName:Option[String]", "kind" : "var"}, {"label" : "resetN", "tail" : ": Bool", "member" : "utils.NegativeResetWrapper.resetN", "link" : "utils\/NegativeResetWrapper.html#resetN:chisel3.Bool", "kind" : "val"}, {"label" : "clock", "tail" : ": Clock", "member" : "utils.NegativeResetWrapper.clock", "link" : "utils\/NegativeResetWrapper.html#clock:chisel3.Clock", "kind" : "val"}, {"member" : "utils.NegativeResetWrapper#<init>", "error" : "unsupported entity"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "utils\/NegativeResetWrapper.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "utils\/NegativeResetWrapper.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "utils\/NegativeResetWrapper.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "utils\/NegativeResetWrapper.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "utils\/NegativeResetWrapper.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "utils\/NegativeResetWrapper.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "utils\/NegativeResetWrapper.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "utils\/NegativeResetWrapper.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "utils\/NegativeResetWrapper.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "utils\/NegativeResetWrapper.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "utils\/NegativeResetWrapper.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "utils\/NegativeResetWrapper.html#name:String", "kind" : "final lazy val"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "utils\/NegativeResetWrapper.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "utils\/NegativeResetWrapper.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "utils\/NegativeResetWrapper.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "utils\/NegativeResetWrapper.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "utils\/NegativeResetWrapper.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "utils\/NegativeResetWrapper.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "utils\/NegativeResetWrapper.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "utils\/NegativeResetWrapper.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "utils\/NegativeResetWrapper.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): NegativeResetWrapper.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "utils\/NegativeResetWrapper.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "utils\/NegativeResetWrapper.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "utils\/NegativeResetWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/NegativeResetWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/NegativeResetWrapper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/NegativeResetWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/NegativeResetWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/NegativeResetWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/NegativeResetWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/NegativeResetWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/NegativeResetWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/NegativeResetWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/NegativeResetWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/NegativeResetWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/NegativeResetWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/NegativeResetWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/NegativeResetWrapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/NegativeResetWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/NegativeResetWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/NegativeResetWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/NegativeResetWrapper.html", "kind" : "class"}, {"name" : "utils.Utils", "shortDescription" : "", "object" : "utils\/Utils$.html", "members_object" : [{"label" : "counter", "tail" : "(cnt: UInt, maxCnt: Int): Unit", "member" : "utils.Utils.counter", "link" : "utils\/Utils$.html#counter(cnt:chisel3.UInt,maxCnt:Int):Unit", "kind" : "def"}, {"label" : "log2", "tail" : "(): (Double) => Double", "member" : "utils.Utils.log2", "link" : "utils\/Utils$.html#log2:Double=>Double", "kind" : "def"}, {"label" : "ScalaEnum", "tail" : "(n: Int): List[Int]", "member" : "utils.Utils.ScalaEnum", "link" : "utils\/Utils$.html#ScalaEnum(n:Int):List[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/Utils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/Utils$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/Utils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/Utils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/Utils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/Utils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/Utils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Utils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Utils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Utils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/Utils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/Utils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/Utils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/Utils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/Utils$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/Utils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/Utils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/Utils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/Utils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "modules.hhvm.main.Mems" : [{"name" : "modules.hhvm.main.Mems.DMEMIO", "shortDescription" : "", "members_class" : [{"label" : "dataOut", "tail" : ": UInt", "member" : "modules.hhvm.main.Mems.DMEMIO.dataOut", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#dataOut:chisel3.UInt", "kind" : "val"}, {"label" : "dataAddress", "tail" : ": UInt", "member" : "modules.hhvm.main.Mems.DMEMIO.dataAddress", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#dataAddress:chisel3.UInt", "kind" : "val"}, {"label" : "dataIn", "tail" : ": UInt", "member" : "modules.hhvm.main.Mems.DMEMIO.dataIn", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#dataIn:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.hhvm.main.Mems.DMEMIO.writeEnable", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"member" : "modules.hhvm.main.Mems.DMEMIO#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): DMEMIO.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): DMEMIO.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): DMEMIO.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Mems\/DMEMIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Mems\/DMEMIO.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Mems.IMEMIO", "shortDescription" : "", "members_class" : [{"label" : "instruction", "tail" : ": UInt", "member" : "modules.hhvm.main.Mems.IMEMIO.instruction", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#instruction:chisel3.UInt", "kind" : "val"}, {"label" : "instructionAddress", "tail" : ": UInt", "member" : "modules.hhvm.main.Mems.IMEMIO.instructionAddress", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#instructionAddress:chisel3.UInt", "kind" : "val"}, {"member" : "modules.hhvm.main.Mems.IMEMIO#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): IMEMIO.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): IMEMIO.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): IMEMIO.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Mems\/IMEMIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Mems\/IMEMIO.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Mems.Registers", "shortDescription" : "This module is already done.", "members_class" : [{"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.hhvm.main.Mems.Registers.writeEnable", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "writeData", "tail" : ": UInt", "member" : "modules.hhvm.main.Mems.Registers.writeData", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.hhvm.main.Mems.Registers.writeAddress", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "readAddress2", "tail" : ": UInt", "member" : "modules.hhvm.main.Mems.Registers.readAddress2", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#readAddress2:chisel3.UInt", "kind" : "val"}, {"label" : "readAddress1", "tail" : ": UInt", "member" : "modules.hhvm.main.Mems.Registers.readAddress1", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#readAddress1:chisel3.UInt", "kind" : "val"}, {"label" : "registerFile", "tail" : ": Mem[UInt]", "member" : "modules.hhvm.main.Mems.Registers.registerFile", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#registerFile:chisel3.Mem[chisel3.UInt]", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 7 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.Mems.Registers.io", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#io:chisel3.Bundle{valreadAddress1:chisel3.UInt;valreadAddress2:chisel3.UInt;valwriteEnable:chisel3.Bool;valwriteAddress:chisel3.UInt;valwriteData:chisel3.UInt;valreadData1:chisel3.UInt;valreadData2:chisel3.UInt}", "kind" : "val"}, {"label" : "testHarness", "tail" : ": Bundle { val testUpdates: modules.hhvm.main.Misc.RegisterUpdates }", "member" : "modules.hhvm.main.Mems.Registers.testHarness", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#testHarness:chisel3.Bundle{valtestUpdates:modules.hhvm.main.Misc.RegisterUpdates}", "kind" : "val"}, {"member" : "modules.hhvm.main.Mems.Registers#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Registers.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Mems\/Registers.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Mems\/Registers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Mems\/Registers.html", "kind" : "class"}], "modules.Cache.main" : [{"name" : "modules.Cache.main.Cache", "shortDescription" : "Provide pure Cache data storage.", "members_class" : [{"label" : "requestedAddress", "tail" : ": CacheAddrWire", "member" : "modules.Cache.main.Cache.requestedAddress", "link" : "modules\/Cache\/main\/Cache.html#requestedAddress:modules.Cache.main.CacheAddrWire", "kind" : "val"}, {"label" : "stateMatrix", "tail" : ": Seq[(UInt, UInt)]", "member" : "modules.Cache.main.Cache.stateMatrix", "link" : "modules\/Cache\/main\/Cache.html#stateMatrix:Seq[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "nextState", "tail" : ": UInt", "member" : "modules.Cache.main.Cache.nextState", "link" : "modules\/Cache\/main\/Cache.html#nextState:chisel3.UInt", "kind" : "val"}, {"label" : "state", "tail" : ": UInt", "member" : "modules.Cache.main.Cache.state", "link" : "modules\/Cache\/main\/Cache.html#state:chisel3.UInt", "kind" : "val"}, {"label" : "refillState", "tail" : ": UInt", "member" : "modules.Cache.main.Cache.refillState", "link" : "modules\/Cache\/main\/Cache.html#refillState:chisel3.UInt", "kind" : "val"}, {"label" : "tagCheckState", "tail" : ": UInt", "member" : "modules.Cache.main.Cache.tagCheckState", "link" : "modules\/Cache\/main\/Cache.html#tagCheckState:chisel3.UInt", "kind" : "val"}, {"label" : "idleState", "tail" : ": UInt", "member" : "modules.Cache.main.Cache.idleState", "link" : "modules\/Cache\/main\/Cache.html#idleState:chisel3.UInt", "kind" : "val"}, {"label" : "states", "tail" : ": List[UInt]", "member" : "modules.Cache.main.Cache.states", "link" : "modules\/Cache\/main\/Cache.html#states:List[chisel3.UInt]", "kind" : "val"}, {"label" : "cache", "tail" : ": SyncReadMem[CacheLine]", "member" : "modules.Cache.main.Cache.cache", "link" : "modules\/Cache\/main\/Cache.html#cache:chisel3.SyncReadMem[modules.Cache.main.CacheLine]", "kind" : "val"}, {"label" : "getChiBusMasterPort", "tail" : "(): ChiBusMaster[CacheChannel]", "member" : "modules.Cache.main.Cache.getChiBusMasterPort", "link" : "modules\/Cache\/main\/Cache.html#getChiBusMasterPort:modules.ChiBus.main.ChiBusMaster[modules.Cache.main.CacheChannel]", "kind" : "def"}, {"label" : "getChiBusSlavePort", "tail" : "(): ChiBusSlave[CacheChannel]", "member" : "modules.Cache.main.Cache.getChiBusSlavePort", "link" : "modules\/Cache\/main\/Cache.html#getChiBusSlavePort:modules.ChiBus.main.ChiBusSlave[modules.Cache.main.CacheChannel]", "kind" : "def"}, {"label" : "memBus", "tail" : ": ChiBusMaster[CacheChannel]", "member" : "modules.Cache.main.Cache.memBus", "link" : "modules\/Cache\/main\/Cache.html#memBus:modules.ChiBus.main.ChiBusMaster[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"label" : "bus", "tail" : ": ChiBusSlave[CacheChannel]", "member" : "modules.Cache.main.Cache.bus", "link" : "modules\/Cache\/main\/Cache.html#bus:modules.ChiBus.main.ChiBusSlave[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"member" : "modules.Cache.main.Cache#<init>", "error" : "unsupported entity"}, {"label" : "connectSlave", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusMasterPort.connectSlave", "link" : "modules\/Cache\/main\/Cache.html#connectSlave[T2<:modules.ChiBus.main.WithChiBusSlavePort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "connectMaster", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusSlavePort.connectMaster", "link" : "modules\/Cache\/main\/Cache.html#connectMaster[T2<:modules.ChiBus.main.WithChiBusMasterPort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Cache\/main\/Cache.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Cache\/main\/Cache.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Cache\/main\/Cache.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Cache\/main\/Cache.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Cache\/main\/Cache.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Cache\/main\/Cache.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Cache\/main\/Cache.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Cache\/main\/Cache.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Cache\/main\/Cache.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Cache\/main\/Cache.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Cache\/main\/Cache.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Cache\/main\/Cache.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Cache\/main\/Cache.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Cache\/main\/Cache.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Cache\/main\/Cache.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Cache\/main\/Cache.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Cache\/main\/Cache.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Cache\/main\/Cache.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Cache\/main\/Cache.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Cache\/main\/Cache.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Cache\/main\/Cache.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Cache\/main\/Cache.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Cache\/main\/Cache.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/main\/Cache.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/main\/Cache.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/main\/Cache.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/main\/Cache.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/main\/Cache.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Cache.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/main\/Cache.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/main\/Cache.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/main\/Cache.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/Cache.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/Cache.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/Cache.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/Cache.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/Cache.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/Cache.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/Cache.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/Cache.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/Cache.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/Cache.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/Cache.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/Cache.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/main\/Cache.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/Cache.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/Cache.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/Cache.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/Cache.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/main\/Cache.html", "kind" : "class"}, {"name" : "modules.Cache.main.CacheAddrData", "shortDescription" : "", "members_class" : [{"label" : "blockOffset", "tail" : "(): UInt", "member" : "modules.Cache.main.CacheAddrData.blockOffset", "link" : "modules\/Cache\/main\/CacheAddrData.html#blockOffset:chisel3.UInt", "kind" : "def"}, {"label" : "groupIndex", "tail" : "(): UInt", "member" : "modules.Cache.main.CacheAddrData.groupIndex", "link" : "modules\/Cache\/main\/CacheAddrData.html#groupIndex:chisel3.UInt", "kind" : "def"}, {"label" : "tagData", "tail" : "(): UInt", "member" : "modules.Cache.main.CacheAddrData.tagData", "link" : "modules\/Cache\/main\/CacheAddrData.html#tagData:chisel3.UInt", "kind" : "def"}, {"label" : "tag", "tail" : "(): TagType", "member" : "modules.Cache.main.CacheAddrData.tag", "link" : "modules\/Cache\/main\/CacheAddrData.html#tag:modules.Cache.main.TagType", "kind" : "def"}, {"member" : "modules.Cache.main.CacheAddrData#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/CacheAddrData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/CacheAddrData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/CacheAddrData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/CacheAddrData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/CacheAddrData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/CacheAddrData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/CacheAddrData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheAddrData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheAddrData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheAddrData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/CacheAddrData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/CacheAddrData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/main\/CacheAddrData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/CacheAddrData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Cache\/main\/CacheAddrData.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Cache\/main\/CacheAddrData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/CacheAddrData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/CacheAddrData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/CacheAddrData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/main\/CacheAddrData.html", "kind" : "class"}, {"name" : "modules.Cache.main.CacheAddrWire", "shortDescription" : "", "object" : "modules\/Cache\/main\/CacheAddrWire$.html", "members_class" : [{"label" : ":=", "tail" : "(that: => UInt): Unit", "member" : "modules.Cache.main.CacheAddrWire.:=", "link" : "modules\/Cache\/main\/CacheAddrWire.html#:=(that:=>chisel3.UInt):Unit", "kind" : "def"}, {"label" : "blockOffset", "tail" : "(): UInt", "member" : "modules.Cache.main.CacheAddrWire.blockOffset", "link" : "modules\/Cache\/main\/CacheAddrWire.html#blockOffset:chisel3.UInt", "kind" : "def"}, {"label" : "groupIndex", "tail" : "(): UInt", "member" : "modules.Cache.main.CacheAddrWire.groupIndex", "link" : "modules\/Cache\/main\/CacheAddrWire.html#groupIndex:chisel3.UInt", "kind" : "def"}, {"label" : "tagData", "tail" : "(): UInt", "member" : "modules.Cache.main.CacheAddrWire.tagData", "link" : "modules\/Cache\/main\/CacheAddrWire.html#tagData:chisel3.UInt", "kind" : "def"}, {"label" : "tag", "tail" : "(): TagType", "member" : "modules.Cache.main.CacheAddrWire.tag", "link" : "modules\/Cache\/main\/CacheAddrWire.html#tag:modules.Cache.main.TagType", "kind" : "def"}, {"label" : "address", "tail" : ": UInt", "member" : "modules.Cache.main.CacheAddrWire.address", "link" : "modules\/Cache\/main\/CacheAddrWire.html#address:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Cache.main.CacheAddrWire#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Cache\/main\/CacheAddrWire.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Cache\/main\/CacheAddrWire.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): CacheAddrWire.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Cache\/main\/CacheAddrWire.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Cache\/main\/CacheAddrWire.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Cache\/main\/CacheAddrWire.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Cache\/main\/CacheAddrWire.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Cache\/main\/CacheAddrWire.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Cache\/main\/CacheAddrWire.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Cache\/main\/CacheAddrWire.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Cache\/main\/CacheAddrWire.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Cache\/main\/CacheAddrWire.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Cache\/main\/CacheAddrWire.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Cache\/main\/CacheAddrWire.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Cache\/main\/CacheAddrWire.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Cache\/main\/CacheAddrWire.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Cache\/main\/CacheAddrWire.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Cache\/main\/CacheAddrWire.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Cache\/main\/CacheAddrWire.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Cache\/main\/CacheAddrWire.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Cache\/main\/CacheAddrWire.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Cache\/main\/CacheAddrWire.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Cache\/main\/CacheAddrWire.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Cache\/main\/CacheAddrWire.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Cache\/main\/CacheAddrWire.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Cache\/main\/CacheAddrWire.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Cache\/main\/CacheAddrWire.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Cache\/main\/CacheAddrWire.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Cache\/main\/CacheAddrWire.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Cache\/main\/CacheAddrWire.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): CacheAddrWire.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Cache\/main\/CacheAddrWire.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Cache\/main\/CacheAddrWire.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Cache\/main\/CacheAddrWire.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Cache\/main\/CacheAddrWire.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/main\/CacheAddrWire.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/main\/CacheAddrWire.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/main\/CacheAddrWire.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/main\/CacheAddrWire.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Cache\/main\/CacheAddrWire.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/main\/CacheAddrWire.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CacheAddrWire.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/main\/CacheAddrWire.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/main\/CacheAddrWire.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/main\/CacheAddrWire.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/CacheAddrWire.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/CacheAddrWire.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/CacheAddrWire.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/CacheAddrWire.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/CacheAddrWire.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/CacheAddrWire.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/CacheAddrWire.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheAddrWire.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheAddrWire.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheAddrWire.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/CacheAddrWire.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/CacheAddrWire.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/CacheAddrWire.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/CacheAddrWire.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/CacheAddrWire.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/CacheAddrWire.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getValueFromData", "tail" : "(data: UInt): CacheAddrWire", "member" : "modules.Cache.main.CacheAddrWire.getValueFromData", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#getValueFromData(data:chisel3.UInt):modules.Cache.main.CacheAddrWire", "kind" : "def"}, {"label" : "getDefaultValue", "tail" : "(): CacheAddrWire", "member" : "modules.Cache.main.CacheAddrWire.getDefaultValue", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#getDefaultValue:modules.Cache.main.CacheAddrWire", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/CacheAddrWire$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/CacheAddrWire$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/main\/CacheAddrWire.html", "kind" : "class"}, {"name" : "modules.Cache.main.CacheChannel", "shortDescription" : "Provide read \/ write interface for Cache.", "object" : "modules\/Cache\/main\/CacheChannel$.html", "members_class" : [{"label" : "<=>", "tail" : "(that: CacheChannel): Unit", "member" : "modules.Cache.main.CacheChannel.<=>", "link" : "modules\/Cache\/main\/CacheChannel.html#<=>(that:modules.Cache.main.CacheChannel):Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: T): Unit", "member" : "modules.Cache.main.CacheChannel.<=>", "link" : "modules\/Cache\/main\/CacheChannel.html#<=>[T<:modules.ChiBus.main.Channel](that:T):Unit", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.Cache.main.CacheChannel.clearOutput", "link" : "modules\/Cache\/main\/CacheChannel.html#clearOutput():Unit", "kind" : "def"}, {"label" : "getDirection", "tail" : "(): DirectionType", "member" : "modules.Cache.main.CacheChannel.getDirection", "link" : "modules\/Cache\/main\/CacheChannel.html#getDirection:modules.ChiBus.main.BusTypes.DirectionType", "kind" : "def"}, {"label" : "writeCacheLine", "tail" : ": CacheLine", "member" : "modules.Cache.main.CacheChannel.writeCacheLine", "link" : "modules\/Cache\/main\/CacheChannel.html#writeCacheLine:modules.Cache.main.CacheLine", "kind" : "val"}, {"label" : "readCacheLine", "tail" : ": CacheLine", "member" : "modules.Cache.main.CacheChannel.readCacheLine", "link" : "modules\/Cache\/main\/CacheChannel.html#readCacheLine:modules.Cache.main.CacheLine", "kind" : "val"}, {"label" : "address", "tail" : ": CacheAddrWire", "member" : "modules.Cache.main.CacheChannel.address", "link" : "modules\/Cache\/main\/CacheChannel.html#address:modules.Cache.main.CacheAddrWire", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Cache.main.CacheChannel.writeEnable", "link" : "modules\/Cache\/main\/CacheChannel.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "directionInner", "tail" : ": DirectionType", "member" : "modules.Cache.main.CacheChannel.directionInner", "link" : "modules\/Cache\/main\/CacheChannel.html#directionInner:modules.ChiBus.main.BusTypes.DirectionType", "kind" : "implicit val"}, {"member" : "modules.Cache.main.CacheChannel#<init>", "error" : "unsupported entity"}, {"label" : "getIsOutputWithType", "tail" : "(x: => T2, masterOut: Boolean, description: String)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutputWithType", "link" : "modules\/Cache\/main\/CacheChannel.html#getIsOutputWithType[T2<:chisel3.Data,T3<:modules.ChiBus.main.BusTypes.DirectionType](x:=>T2,masterOut:Boolean,description:String)(implicitac:T3):T2", "kind" : "def"}, {"label" : "getIsOutput", "tail" : "(setOutput: => T2, setInput: => T2, isMasterOut: Boolean)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutput", "link" : "modules\/Cache\/main\/CacheChannel.html#getIsOutput[T2,T3<:modules.ChiBus.main.BusTypes.DirectionType](setOutput:=>T2,setInput:=>T2,isMasterOut:Boolean)(implicitac:T3):T2", "kind" : "def"}, {"label" : "parseNamePool", "tail" : "(ac: T, c: GlobalConfig): Unit", "member" : "modules.ChiBus.main.Channel.parseNamePool", "link" : "modules\/Cache\/main\/CacheChannel.html#parseNamePool[T<:modules.ChiBus.main.BusTypes.DirectionType](implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):Unit", "kind" : "def"}, {"label" : "addPorts", "tail" : "(ports: Seq[UInt]): Unit", "member" : "modules.ChiBus.main.Channel.addPorts", "link" : "modules\/Cache\/main\/CacheChannel.html#addPorts(ports:Seq[chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "addPort", "tail" : "(port: UInt, name: String): ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.addPort", "link" : "modules\/Cache\/main\/CacheChannel.html#addPort(port:chisel3.UInt,name:String):scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "def"}, {"label" : "getNamePrefix", "tail" : "(name: String)(ac: T, c: GlobalConfig): String", "member" : "modules.ChiBus.main.Channel.getNamePrefix", "link" : "modules\/Cache\/main\/CacheChannel.html#getNamePrefix[T<:modules.ChiBus.main.BusTypes.DirectionType](name:String)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):String", "kind" : "def"}, {"label" : "portPool", "tail" : ": ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.portPool", "link" : "modules\/Cache\/main\/CacheChannel.html#portPool:scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "val"}, {"label" : "infixName", "tail" : ": String", "member" : "modules.ChiBus.main.Channel.infixName", "link" : "modules\/Cache\/main\/CacheChannel.html#infixName:String", "kind" : "val"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Cache\/main\/CacheChannel.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Cache\/main\/CacheChannel.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): CacheChannel.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Cache\/main\/CacheChannel.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Cache\/main\/CacheChannel.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Cache\/main\/CacheChannel.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Cache\/main\/CacheChannel.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Cache\/main\/CacheChannel.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Cache\/main\/CacheChannel.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Cache\/main\/CacheChannel.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Cache\/main\/CacheChannel.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Cache\/main\/CacheChannel.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Cache\/main\/CacheChannel.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Cache\/main\/CacheChannel.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Cache\/main\/CacheChannel.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Cache\/main\/CacheChannel.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Cache\/main\/CacheChannel.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Cache\/main\/CacheChannel.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Cache\/main\/CacheChannel.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Cache\/main\/CacheChannel.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Cache\/main\/CacheChannel.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Cache\/main\/CacheChannel.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Cache\/main\/CacheChannel.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Cache\/main\/CacheChannel.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Cache\/main\/CacheChannel.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Cache\/main\/CacheChannel.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Cache\/main\/CacheChannel.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Cache\/main\/CacheChannel.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Cache\/main\/CacheChannel.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Cache\/main\/CacheChannel.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): CacheChannel.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Cache\/main\/CacheChannel.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Cache\/main\/CacheChannel.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Cache\/main\/CacheChannel.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Cache\/main\/CacheChannel.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/main\/CacheChannel.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/main\/CacheChannel.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/main\/CacheChannel.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/main\/CacheChannel.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Cache\/main\/CacheChannel.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/main\/CacheChannel.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CacheChannel.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/main\/CacheChannel.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/main\/CacheChannel.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/main\/CacheChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/CacheChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/CacheChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/CacheChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/CacheChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/CacheChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/CacheChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/CacheChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/CacheChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/CacheChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/CacheChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/CacheChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/CacheChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/CacheChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getter", "tail" : "(): (DirectionType) => CacheChannel", "member" : "modules.Cache.main.CacheChannel.getter", "link" : "modules\/Cache\/main\/CacheChannel$.html#getter:modules.ChiBus.main.BusTypes.DirectionType=>modules.Cache.main.CacheChannel", "kind" : "def"}, {"label" : "connectWatcher", "tail" : "(watcher: ChiBusInterfaceWatcher[CacheChannel], master: ChiBusInterfaceNormal[CacheChannel], slave: ChiBusInterfaceNormal[CacheChannel]): Unit", "member" : "modules.Cache.main.CacheChannel.connectWatcher", "link" : "modules\/Cache\/main\/CacheChannel$.html#connectWatcher(watcher:modules.ChiBus.main.ChiBusInterfaceWatcher[modules.Cache.main.CacheChannel],master:modules.ChiBus.main.ChiBusInterfaceNormal[modules.Cache.main.CacheChannel],slave:modules.ChiBus.main.ChiBusInterfaceNormal[modules.Cache.main.CacheChannel]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/CacheChannel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/CacheChannel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/CacheChannel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/CacheChannel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/CacheChannel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/CacheChannel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/CacheChannel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheChannel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheChannel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheChannel$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/CacheChannel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/CacheChannel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/main\/CacheChannel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/CacheChannel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Cache\/main\/CacheChannel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Cache\/main\/CacheChannel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/CacheChannel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/CacheChannel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/CacheChannel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/main\/CacheChannel.html", "kind" : "class"}, {"name" : "modules.Cache.main.CacheLine", "shortDescription" : "", "object" : "modules\/Cache\/main\/CacheLine$.html", "members_class" : [{"label" : "getPorts", "tail" : "(): Seq[UInt]", "member" : "modules.Cache.main.CacheLine.getPorts", "link" : "modules\/Cache\/main\/CacheLine.html#getPorts:Seq[chisel3.UInt]", "kind" : "def"}, {"label" : "dirty", "tail" : ": Bool", "member" : "modules.Cache.main.CacheLine.dirty", "link" : "modules\/Cache\/main\/CacheLine.html#dirty:chisel3.Bool", "kind" : "val"}, {"label" : "data", "tail" : ": Vec[UInt]", "member" : "modules.Cache.main.CacheLine.data", "link" : "modules\/Cache\/main\/CacheLine.html#data:chisel3.Vec[chisel3.UInt]", "kind" : "val"}, {"label" : "tag", "tail" : ": TagType", "member" : "modules.Cache.main.CacheLine.tag", "link" : "modules\/Cache\/main\/CacheLine.html#tag:modules.Cache.main.TagType", "kind" : "val"}, {"label" : "valid", "tail" : ": Bool", "member" : "modules.Cache.main.CacheLine.valid", "link" : "modules\/Cache\/main\/CacheLine.html#valid:chisel3.Bool", "kind" : "val"}, {"member" : "modules.Cache.main.CacheLine#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Cache\/main\/CacheLine.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Cache\/main\/CacheLine.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): CacheLine.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Cache\/main\/CacheLine.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Cache\/main\/CacheLine.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Cache\/main\/CacheLine.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Cache\/main\/CacheLine.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Cache\/main\/CacheLine.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Cache\/main\/CacheLine.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Cache\/main\/CacheLine.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Cache\/main\/CacheLine.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Cache\/main\/CacheLine.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Cache\/main\/CacheLine.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Cache\/main\/CacheLine.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Cache\/main\/CacheLine.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Cache\/main\/CacheLine.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Cache\/main\/CacheLine.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Cache\/main\/CacheLine.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Cache\/main\/CacheLine.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Cache\/main\/CacheLine.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Cache\/main\/CacheLine.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Cache\/main\/CacheLine.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Cache\/main\/CacheLine.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Cache\/main\/CacheLine.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Cache\/main\/CacheLine.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Cache\/main\/CacheLine.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Cache\/main\/CacheLine.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Cache\/main\/CacheLine.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Cache\/main\/CacheLine.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Cache\/main\/CacheLine.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): CacheLine.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Cache\/main\/CacheLine.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Cache\/main\/CacheLine.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Cache\/main\/CacheLine.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Cache\/main\/CacheLine.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/main\/CacheLine.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/main\/CacheLine.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/main\/CacheLine.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/main\/CacheLine.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Cache\/main\/CacheLine.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/main\/CacheLine.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CacheLine.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/main\/CacheLine.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/main\/CacheLine.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/main\/CacheLine.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/CacheLine.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/CacheLine.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/CacheLine.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/CacheLine.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/CacheLine.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/CacheLine.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/CacheLine.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheLine.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheLine.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheLine.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/CacheLine.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/CacheLine.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/CacheLine.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/CacheLine.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/CacheLine.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/CacheLine.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getNewWireFromData", "tail" : "(data: Vec[UInt]): CacheLine", "member" : "modules.Cache.main.CacheLine.getNewWireFromData", "link" : "modules\/Cache\/main\/CacheLine$.html#getNewWireFromData(data:chisel3.Vec[chisel3.UInt]):modules.Cache.main.CacheLine", "kind" : "def"}, {"label" : "getDefaultValue", "tail" : "(): CacheLine", "member" : "modules.Cache.main.CacheLine.getDefaultValue", "link" : "modules\/Cache\/main\/CacheLine$.html#getDefaultValue:modules.Cache.main.CacheLine", "kind" : "def"}, {"label" : "getBundleWidth", "tail" : "(): Int", "member" : "modules.Cache.main.CacheLine.getBundleWidth", "link" : "modules\/Cache\/main\/CacheLine$.html#getBundleWidth:Int", "kind" : "def"}, {"label" : "signals", "tail" : "(): List[Data]", "member" : "modules.Cache.main.CacheLine.signals", "link" : "modules\/Cache\/main\/CacheLine$.html#signals:List[chisel3.Data]", "kind" : "def"}, {"label" : "dirtyType", "tail" : "(): Bool", "member" : "modules.Cache.main.CacheLine.dirtyType", "link" : "modules\/Cache\/main\/CacheLine$.html#dirtyType:chisel3.Bool", "kind" : "def"}, {"label" : "dataTypeReg", "tail" : "(c: GlobalConfig): Vec[UInt]", "member" : "modules.Cache.main.CacheLine.dataTypeReg", "link" : "modules\/Cache\/main\/CacheLine$.html#dataTypeReg(implicitc:utils.GlobalConfigLoader.GlobalConfig):chisel3.Vec[chisel3.UInt]", "kind" : "def"}, {"label" : "dataType", "tail" : "(c: GlobalConfig): Vec[UInt]", "member" : "modules.Cache.main.CacheLine.dataType", "link" : "modules\/Cache\/main\/CacheLine$.html#dataType(implicitc:utils.GlobalConfigLoader.GlobalConfig):chisel3.Vec[chisel3.UInt]", "kind" : "def"}, {"label" : "tagType", "tail" : "(c: GlobalConfig): TagType", "member" : "modules.Cache.main.CacheLine.tagType", "link" : "modules\/Cache\/main\/CacheLine$.html#tagType(implicitc:utils.GlobalConfigLoader.GlobalConfig):modules.Cache.main.TagType", "kind" : "def"}, {"label" : "validType", "tail" : "(): Bool", "member" : "modules.Cache.main.CacheLine.validType", "link" : "modules\/Cache\/main\/CacheLine$.html#validType:chisel3.Bool", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/CacheLine$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/CacheLine$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/CacheLine$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/CacheLine$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/CacheLine$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/CacheLine$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/CacheLine$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheLine$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheLine$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/CacheLine$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/CacheLine$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/CacheLine$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/main\/CacheLine$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/CacheLine$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Cache\/main\/CacheLine$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Cache\/main\/CacheLine$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/CacheLine$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/CacheLine$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/CacheLine$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/main\/CacheLine.html", "kind" : "class"}, {"name" : "modules.Cache.main.TagType", "shortDescription" : "", "object" : "modules\/Cache\/main\/TagType$.html", "members_class" : [{"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.Cache.main.TagType.clearOutput", "link" : "modules\/Cache\/main\/TagType.html#clearOutput():Unit", "kind" : "def"}, {"label" : ":=", "tail" : "(that: => UInt): Unit", "member" : "modules.Cache.main.TagType.:=", "link" : "modules\/Cache\/main\/TagType.html#:=(that:=>chisel3.UInt):Unit", "kind" : "def"}, {"label" : "=\/=", "tail" : "(that: => TagType): Bool", "member" : "modules.Cache.main.TagType.=\/=", "link" : "modules\/Cache\/main\/TagType.html#=\/=(that:=>modules.Cache.main.TagType):chisel3.Bool", "kind" : "def"}, {"label" : "===", "tail" : "(that: => TagType): Bool", "member" : "modules.Cache.main.TagType.===", "link" : "modules\/Cache\/main\/TagType.html#===(that:=>modules.Cache.main.TagType):chisel3.Bool", "kind" : "def"}, {"label" : "value", "tail" : ": UInt", "member" : "modules.Cache.main.TagType.value", "link" : "modules\/Cache\/main\/TagType.html#value:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Cache.main.TagType#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Cache\/main\/TagType.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Cache\/main\/TagType.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): TagType.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Cache\/main\/TagType.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Cache\/main\/TagType.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Cache\/main\/TagType.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Cache\/main\/TagType.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Cache\/main\/TagType.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Cache\/main\/TagType.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Cache\/main\/TagType.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Cache\/main\/TagType.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Cache\/main\/TagType.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Cache\/main\/TagType.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Cache\/main\/TagType.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Cache\/main\/TagType.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Cache\/main\/TagType.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Cache\/main\/TagType.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Cache\/main\/TagType.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Cache\/main\/TagType.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Cache\/main\/TagType.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Cache\/main\/TagType.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Cache\/main\/TagType.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Cache\/main\/TagType.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Cache\/main\/TagType.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Cache\/main\/TagType.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Cache\/main\/TagType.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Cache\/main\/TagType.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Cache\/main\/TagType.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Cache\/main\/TagType.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Cache\/main\/TagType.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): TagType.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Cache\/main\/TagType.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Cache\/main\/TagType.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Cache\/main\/TagType.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Cache\/main\/TagType.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Cache\/main\/TagType.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Cache\/main\/TagType.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Cache\/main\/TagType.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Cache\/main\/TagType.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Cache\/main\/TagType.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Cache\/main\/TagType.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): TagType.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Cache\/main\/TagType.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Cache\/main\/TagType.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Cache\/main\/TagType.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/TagType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/TagType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/TagType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/TagType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/TagType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/TagType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/TagType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/TagType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/TagType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/TagType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/TagType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/TagType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/TagType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/TagType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/TagType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/TagType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toUInt", "tail" : "(from: TagType): UInt", "member" : "modules.Cache.main.TagType.toUInt", "link" : "modules\/Cache\/main\/TagType$.html#toUInt(from:modules.Cache.main.TagType):chisel3.UInt", "kind" : "implicit def"}, {"label" : "toTagType", "tail" : "(from: UInt): TagType", "member" : "modules.Cache.main.TagType.toTagType", "link" : "modules\/Cache\/main\/TagType$.html#toTagType(from:chisel3.UInt):modules.Cache.main.TagType", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(from: Option[UInt]): TagType", "member" : "modules.Cache.main.TagType.apply", "link" : "modules\/Cache\/main\/TagType$.html#apply(from:Option[chisel3.UInt]):modules.Cache.main.TagType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Cache\/main\/TagType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Cache\/main\/TagType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Cache\/main\/TagType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Cache\/main\/TagType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Cache\/main\/TagType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Cache\/main\/TagType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Cache\/main\/TagType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/TagType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/TagType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Cache\/main\/TagType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Cache\/main\/TagType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Cache\/main\/TagType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Cache\/main\/TagType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Cache\/main\/TagType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Cache\/main\/TagType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Cache\/main\/TagType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Cache\/main\/TagType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Cache\/main\/TagType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Cache\/main\/TagType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Cache\/main\/TagType.html", "kind" : "class"}], "modules.DDR.main" : [{"name" : "modules.DDR.main.DDR", "shortDescription" : "DDR Instance.", "members_class" : [{"label" : "axiSlave", "tail" : ": AXI4Slave", "member" : "modules.DDR.main.DDR.axiSlave", "link" : "modules\/DDR\/main\/DDR.html#axiSlave:modules.AXI4.main.AXI4Slave", "kind" : "val"}, {"member" : "modules.DDR.main.DDR#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/DDR\/main\/DDR.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/DDR\/main\/DDR.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/DDR\/main\/DDR.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/DDR\/main\/DDR.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/DDR\/main\/DDR.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/DDR\/main\/DDR.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/DDR\/main\/DDR.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/DDR\/main\/DDR.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/DDR\/main\/DDR.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/DDR\/main\/DDR.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/DDR\/main\/DDR.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/DDR\/main\/DDR.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/DDR\/main\/DDR.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/DDR\/main\/DDR.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/DDR\/main\/DDR.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/DDR\/main\/DDR.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/DDR\/main\/DDR.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/DDR\/main\/DDR.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/DDR\/main\/DDR.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/DDR\/main\/DDR.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/DDR\/main\/DDR.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/DDR\/main\/DDR.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/DDR\/main\/DDR.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/DDR\/main\/DDR.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/DDR\/main\/DDR.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/DDR\/main\/DDR.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/DDR\/main\/DDR.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/DDR\/main\/DDR.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): DDR.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/DDR\/main\/DDR.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/DDR\/main\/DDR.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/DDR\/main\/DDR.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/DDR\/main\/DDR.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/DDR\/main\/DDR.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/DDR\/main\/DDR.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/DDR\/main\/DDR.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/DDR\/main\/DDR.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/DDR\/main\/DDR.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/DDR\/main\/DDR.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/DDR\/main\/DDR.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/DDR\/main\/DDR.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/DDR\/main\/DDR.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/DDR\/main\/DDR.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/DDR\/main\/DDR.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/DDR\/main\/DDR.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/DDR\/main\/DDR.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/DDR\/main\/DDR.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/DDR\/main\/DDR.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/DDR\/main\/DDR.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/DDR\/main\/DDR.html", "kind" : "class"}], "difftest" : [{"name" : "difftest.DifftestCore", "shortDescription" : "", "object" : "difftest\/DifftestCore$.html", "members_object" : [{"label" : "loadImage", "tail" : "(memStartAddr: Int, imageFileName: String): Unit", "member" : "difftest.DifftestCore.loadImage", "link" : "difftest\/DifftestCore$.html#loadImage(memStartAddr:Int,imageFileName:String):Unit", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "difftest.DifftestCore.release", "link" : "difftest\/DifftestCore$.html#release():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(port: Int): Unit", "member" : "difftest.DifftestCore.init", "link" : "difftest\/DifftestCore$.html#init(port:Int):Unit", "kind" : "def"}, {"label" : "raise_intr", "tail" : "(no: Int): Unit", "member" : "difftest.DifftestCore.raise_intr", "link" : "difftest\/DifftestCore$.html#raise_intr(no:Int):Unit", "kind" : "def"}, {"label" : "exec", "tail" : "(n: Int): Unit", "member" : "difftest.DifftestCore.exec", "link" : "difftest\/DifftestCore$.html#exec(n:Int):Unit", "kind" : "def"}, {"label" : "memcpy", "tail" : "(addr: Int, buf: Pointer, n: Int, direction: Boolean): Unit", "member" : "difftest.DifftestCore.memcpy", "link" : "difftest\/DifftestCore$.html#memcpy(addr:Int,buf:com.sun.jna.Pointer,n:Int,direction:Boolean):Unit", "kind" : "def"}, {"label" : "regcpy", "tail" : "(direction: Boolean): Unit", "member" : "difftest.DifftestCore.regcpy", "link" : "difftest\/DifftestCore$.html#regcpy(direction:Boolean):Unit", "kind" : "def"}, {"label" : "cpu", "tail" : ": CPUState", "member" : "difftest.DifftestCore.cpu", "link" : "difftest\/DifftestCore$.html#cpu:difftest.DifftestCore.CPUState", "kind" : "val"}, {"label" : "CPUState", "tail" : "", "member" : "difftest.DifftestCore.CPUState", "link" : "difftest\/DifftestCore$.html#CPUStateextendsAnyRef", "kind" : "class"}, {"label" : "ref", "tail" : ": Option[<error>]", "member" : "difftest.DifftestCore.ref", "link" : "difftest\/DifftestCore$.html#ref:Option[<error>]", "kind" : "var"}, {"label" : "MEM_BASE", "tail" : ": Int", "member" : "difftest.DifftestCore.MEM_BASE", "link" : "difftest\/DifftestCore$.html#MEM_BASE:Int", "kind" : "val"}, {"label" : "IMAGE_DEFAULT", "tail" : ": String", "member" : "difftest.DifftestCore.IMAGE_DEFAULT", "link" : "difftest\/DifftestCore$.html#IMAGE_DEFAULT:String", "kind" : "val"}, {"label" : "IMAGE_MAX_SIZE", "tail" : ": Int", "member" : "difftest.DifftestCore.IMAGE_MAX_SIZE", "link" : "difftest\/DifftestCore$.html#IMAGE_MAX_SIZE:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "difftest\/DifftestCore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "difftest\/DifftestCore$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "difftest\/DifftestCore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "difftest\/DifftestCore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "difftest\/DifftestCore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "difftest\/DifftestCore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "difftest\/DifftestCore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "difftest\/DifftestCore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "difftest\/DifftestCore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "difftest\/DifftestCore$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "difftest\/DifftestCore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "difftest\/DifftestCore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "difftest\/DifftestCore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "difftest\/DifftestCore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "difftest\/DifftestCore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "difftest\/DifftestCore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "difftest\/DifftestCore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "difftest\/DifftestCore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "difftest\/DifftestCore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "modules.hhvm.main.util" : [{"name" : "modules.hhvm.main.util.DecoderListLookup", "shortDescription" : "", "object" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html", "members_object" : [{"label" : "apply", "tail" : "(input: UInt, default: List[UInt], mapping: List[(BitPat, List[UInt])], result_format: List[Int], dontcare: UInt): IndexedSeq[UInt]", "member" : "modules.hhvm.main.util.DecoderListLookup.apply", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#apply(input:chisel3.UInt,default:List[chisel3.UInt],mapping:List[(chisel3.util.BitPat,List[chisel3.UInt])],result_format:List[Int],dontcare:chisel3.UInt):scala.collection.IndexedSeq[chisel3.UInt]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/util\/DecoderListLookup$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "modules.MemCtrl" : [{"name" : "modules.MemCtrl.MemCtrlTest", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWrapper", "link" : "modules\/MemCtrl\/MemCtrlTest.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.StringShouldWrapper", "link" : "modules\/MemCtrl\/MemCtrlTest.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnyShouldWrapper", "link" : "modules\/MemCtrl\/MemCtrlTest.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForCollectedString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForCollectedString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForCollectedString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfCollectedAny", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedArray", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForCollectedAny", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfContainWordForCollectedAny", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfNotWordForCollectedAny", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "Collected", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.Collected", "link" : "modules\/MemCtrl\/MemCtrlTest.html#CollectedextendsSerializable", "kind" : "sealed class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfHaveWordForExtent", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.TheSameInstanceAsPhrase", "link" : "modules\/MemCtrl\/MemCtrlTest.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AnWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.AWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ValueWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.KeyWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfFullyMatchWordForString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfEndWithWordForString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfStartWithWordForString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfIncludeWordForString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.RegexWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.ResultOfBeWordForAny", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.matchers.should.Matchers.HavePropertyMatcherGenerator", "link" : "modules\/MemCtrl\/MemCtrlTest.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "modules\/MemCtrl\/MemCtrlTest.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "modules\/MemCtrl\/MemCtrlTest.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "modules\/MemCtrl\/MemCtrlTest.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "modules\/MemCtrl\/MemCtrlTest.html#TestBuilder[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/MemCtrl\/MemCtrlTest.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.InAndIgnoreMethods", "link" : "modules\/MemCtrl\/MemCtrlTest.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.TheyVerbStringTaggedAs", "link" : "modules\/MemCtrl\/MemCtrlTest.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "modules\/MemCtrl\/MemCtrlTest.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ItVerbStringTaggedAs", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.BehaviorWord", "link" : "modules\/MemCtrl\/MemCtrlTest.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.CanVerb.StringCanWrapperForVerb", "link" : "modules\/MemCtrl\/MemCtrlTest.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.MustVerb.StringMustWrapperForVerb", "link" : "modules\/MemCtrl\/MemCtrlTest.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.verbs.ShouldVerb.StringShouldWrapperForVerb", "link" : "modules\/MemCtrl\/MemCtrlTest.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "modules\/MemCtrl\/MemCtrlTest.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "modules\/MemCtrl\/MemCtrlTest.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "modules\/MemCtrl\/MemCtrlTest.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "MemCtrlDDR", "tail" : "", "member" : "modules.MemCtrl.MemCtrlTest.MemCtrlDDR", "link" : "modules\/MemCtrl\/MemCtrlTest.html#MemCtrlDDRextendsModule", "kind" : "class"}, {"label" : "MemCtrlUpperLayer", "tail" : "", "member" : "modules.MemCtrl.MemCtrlTest.MemCtrlUpperLayer", "link" : "modules\/MemCtrl\/MemCtrlTest.html#MemCtrlUpperLayerextendsModulewithWithChiBusMasterPort[modules.Cache.main.CacheChannel]", "kind" : "class"}, {"member" : "modules.MemCtrl.MemCtrlTest#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.of", "link" : "modules\/MemCtrl\/MemCtrlTest.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToRegexWrapper", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.matchers.should.Matchers.convertToStringShouldWrapper", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.matchers.should.Matchers.convertToAnyShouldWrapper", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.the", "link" : "modules\/MemCtrl\/MemCtrlTest.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/MemCtrl\/MemCtrlTest.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/MemCtrl\/MemCtrlTest.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.matchers.dsl.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atMost[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atMost", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/MemCtrl\/MemCtrlTest.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/MemCtrl\/MemCtrlTest.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.between", "link" : "modules\/MemCtrl\/MemCtrlTest.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/MemCtrl\/MemCtrlTest.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/MemCtrl\/MemCtrlTest.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.no", "link" : "modules\/MemCtrl\/MemCtrlTest.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/MemCtrl\/MemCtrlTest.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/MemCtrl\/MemCtrlTest.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/MemCtrl\/MemCtrlTest.html#exactly[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.exactly", "link" : "modules\/MemCtrl\/MemCtrlTest.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/MemCtrl\/MemCtrlTest.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/MemCtrl\/MemCtrlTest.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/MemCtrl\/MemCtrlTest.html#every[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.every", "link" : "modules\/MemCtrl\/MemCtrlTest.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atLeast[K,V,MAP<:<?>](num:Int,xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.atLeast", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/MemCtrl\/MemCtrlTest.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/MemCtrl\/MemCtrlTest.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: MAP[K, V])(collecting: Collecting[(K, V), GenTraversable[(K, V)]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[(K, V)]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/MemCtrl\/MemCtrlTest.html#all[K,V,MAP<:<?>](xs:MAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[(K,V),collection.GenTraversable[(K,V)]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[(K,V)]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.matchers.should.Matchers.all", "link" : "modules\/MemCtrl\/MemCtrlTest.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.matchers.should.Matchers.message", "link" : "modules\/MemCtrl\/MemCtrlTest.html#message(expectedMessage:String):org.scalatest.matchers.dsl.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: => Any): ResultOfThrownByApplication", "member" : "org.scalatest.matchers.should.Matchers.thrownBy", "link" : "modules\/MemCtrl\/MemCtrlTest.html#thrownBy(fun:=>Any):org.scalatest.matchers.dsl.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneElementOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atMostOneElementOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atMostOneOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderElementsOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#inOrderElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrder", "link" : "modules\/MemCtrl\/MemCtrlTest.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allElementsOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#allElementsOf[R](elements:collection.GenTraversable[R]):org.scalatest.matchers.dsl.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.matchers.should.Matchers.allOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.inOrderOnly", "link" : "modules\/MemCtrl\/MemCtrlTest.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.matchers.should.Matchers.only", "link" : "modules\/MemCtrl\/MemCtrlTest.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsInOrderAs", "link" : "modules\/MemCtrl\/MemCtrlTest.html#theSameElementsInOrderAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.matchers.should.Matchers.theSameElementsAs", "link" : "modules\/MemCtrl\/MemCtrlTest.html#theSameElementsAs(xs:collection.GenTraversable[_]):org.scalatest.matchers.dsl.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noElementsOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#noElementsOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.noneOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneElementOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atLeastOneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.atLeastOneOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneElementOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#oneElementOf(elements:collection.GenTraversable[Any]):org.scalatest.matchers.dsl.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.matchers.should.Matchers.oneOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.matchers.should.Matchers.definedAt", "link" : "modules\/MemCtrl\/MemCtrlTest.html#definedAt[T](right:T):org.scalatest.matchers.dsl.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>=", "link" : "modules\/MemCtrl\/MemCtrlTest.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<=", "link" : "modules\/MemCtrl\/MemCtrlTest.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.>", "link" : "modules\/MemCtrl\/MemCtrlTest.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.matchers.dsl.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.matchers.should.Matchers.<", "link" : "modules\/MemCtrl\/MemCtrlTest.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.matchers.dsl.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.matchers.should.Matchers.regex", "link" : "modules\/MemCtrl\/MemCtrlTest.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.matchers.should.Matchers.theSameInstanceAs", "link" : "modules\/MemCtrl\/MemCtrlTest.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.matchers.should.Matchers.an", "link" : "modules\/MemCtrl\/MemCtrlTest.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.matchers.should.Matchers.a", "link" : "modules\/MemCtrl\/MemCtrlTest.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.matchers.should.Matchers.value", "link" : "modules\/MemCtrl\/MemCtrlTest.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.matchers.should.Matchers.key", "link" : "modules\/MemCtrl\/MemCtrlTest.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/MemCtrl\/MemCtrlTest.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.matchers.should.Matchers.equal", "link" : "modules\/MemCtrl\/MemCtrlTest.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.matchers.should.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "modules\/MemCtrl\/MemCtrlTest.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "modules\/MemCtrl\/MemCtrlTest.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "modules\/MemCtrl\/MemCtrlTest.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.matchers.dsl.MatcherWords.equal", "link" : "modules\/MemCtrl\/MemCtrlTest.html#equal(right:Any):org.scalatest.matchers.dsl.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.matchPattern", "link" : "modules\/MemCtrl\/MemCtrlTest.html#matchPattern:org.scalatest.matchers.dsl.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.typeCheck", "link" : "modules\/MemCtrl\/MemCtrlTest.html#typeCheck:org.scalatest.verbs.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.compile", "link" : "modules\/MemCtrl\/MemCtrlTest.html#compile:org.scalatest.verbs.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.empty", "link" : "modules\/MemCtrl\/MemCtrlTest.html#empty:org.scalatest.matchers.dsl.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.writable", "link" : "modules\/MemCtrl\/MemCtrlTest.html#writable:org.scalatest.matchers.dsl.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.readable", "link" : "modules\/MemCtrl\/MemCtrlTest.html#readable:org.scalatest.matchers.dsl.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.exist", "link" : "modules\/MemCtrl\/MemCtrlTest.html#exist:org.scalatest.matchers.dsl.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.noException", "link" : "modules\/MemCtrl\/MemCtrlTest.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.matchers.dsl.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.defined", "link" : "modules\/MemCtrl\/MemCtrlTest.html#defined:org.scalatest.matchers.dsl.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.sorted", "link" : "modules\/MemCtrl\/MemCtrlTest.html#sorted:org.scalatest.matchers.dsl.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.size", "link" : "modules\/MemCtrl\/MemCtrlTest.html#size:org.scalatest.matchers.dsl.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.length", "link" : "modules\/MemCtrl\/MemCtrlTest.html#length:org.scalatest.matchers.dsl.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.not", "link" : "modules\/MemCtrl\/MemCtrlTest.html#not:org.scalatest.matchers.dsl.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.contain", "link" : "modules\/MemCtrl\/MemCtrlTest.html#contain:org.scalatest.matchers.dsl.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.be", "link" : "modules\/MemCtrl\/MemCtrlTest.html#be:org.scalatest.matchers.dsl.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.have", "link" : "modules\/MemCtrl\/MemCtrlTest.html#have:org.scalatest.matchers.dsl.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.include", "link" : "modules\/MemCtrl\/MemCtrlTest.html#include:org.scalatest.matchers.dsl.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.endWith", "link" : "modules\/MemCtrl\/MemCtrlTest.html#endWith:org.scalatest.matchers.dsl.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.startWith", "link" : "modules\/MemCtrl\/MemCtrlTest.html#startWith:org.scalatest.matchers.dsl.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.matchers.dsl.MatcherWords.fullyMatch", "link" : "modules\/MemCtrl\/MemCtrlTest.html#fullyMatch:org.scalatest.matchers.dsl.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "test", "tail" : "(dutGen: => T): TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "modules\/MemCtrl\/MemCtrlTest.html#test[T<:chisel3.Module](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "modules\/MemCtrl\/MemCtrlTest.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "modules\/MemCtrl\/MemCtrlTest.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "modules\/MemCtrl\/MemCtrlTest.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "getTestName", "tail" : "(): String", "member" : "chiseltest.ChiselScalatestTester.getTestName", "link" : "modules\/MemCtrl\/MemCtrlTest.html#getTestName:String", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "modules\/MemCtrl\/MemCtrlTest.html#checkpoint():Unit", "kind" : "def"}, {"label" : "signalExpectFailure", "tail" : "(message: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.signalExpectFailure", "link" : "modules\/MemCtrl\/MemCtrlTest.html#signalExpectFailure(message:String):Unit", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "modules\/MemCtrl\/MemCtrlTest.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "modules\/MemCtrl\/MemCtrlTest.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "modules\/MemCtrl\/MemCtrlTest.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.flatspec.AnyFlatSpec.toString", "link" : "modules\/MemCtrl\/MemCtrlTest.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testDataFor", "link" : "modules\/MemCtrl\/MemCtrlTest.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.styleName", "link" : "modules\/MemCtrl\/MemCtrlTest.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behave", "link" : "modules\/MemCtrl\/MemCtrlTest.html#behave:org.scalatest.verbs.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.run", "link" : "modules\/MemCtrl\/MemCtrlTest.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.testNames", "link" : "modules\/MemCtrl\/MemCtrlTest.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTests", "link" : "modules\/MemCtrl\/MemCtrlTest.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.runTest", "link" : "modules\/MemCtrl\/MemCtrlTest.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.tags", "link" : "modules\/MemCtrl\/MemCtrlTest.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "modules\/MemCtrl\/MemCtrlTest.html#shorthandSharedTestRegistrationFunction:org.scalatest.verbs.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.shorthandTestRegistrationFunction", "link" : "modules\/MemCtrl\/MemCtrlTest.html#shorthandTestRegistrationFunction:org.scalatest.verbs.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.verbs.ResultOfTaggedAsInvocation):AnyFlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.convertToInAndIgnoreMethods", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.verbs.ResultOfStringPassedToVerb):AnyFlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.they", "link" : "modules\/MemCtrl\/MemCtrlTest.html#they:AnyFlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.ignore", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ignore:AnyFlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.it", "link" : "modules\/MemCtrl\/MemCtrlTest.html#it:AnyFlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.behavior", "link" : "modules\/MemCtrl\/MemCtrlTest.html#behavior:AnyFlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerIgnoredTest", "link" : "modules\/MemCtrl\/MemCtrlTest.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: => Any)(pos: Position): Unit", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.registerTest", "link" : "modules\/MemCtrl\/MemCtrlTest.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.markup", "link" : "modules\/MemCtrl\/MemCtrlTest.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.alert", "link" : "modules\/MemCtrl\/MemCtrlTest.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.note", "link" : "modules\/MemCtrl\/MemCtrlTest.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.flatspec.AnyFlatSpecLike.info", "link" : "modules\/MemCtrl\/MemCtrlTest.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.verbs.CanVerb.convertToStringCanWrapper", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.verbs.MustVerb.convertToStringMustWrapperForVerb", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.verbs.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "modules\/MemCtrl\/MemCtrlTest.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "modules\/MemCtrl\/MemCtrlTest.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "modules\/MemCtrl\/MemCtrlTest.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "modules\/MemCtrl\/MemCtrlTest.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "modules\/MemCtrl\/MemCtrlTest.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "modules\/MemCtrl\/MemCtrlTest.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "modules\/MemCtrl\/MemCtrlTest.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "modules\/MemCtrl\/MemCtrlTest.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "modules\/MemCtrl\/MemCtrlTest.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "modules\/MemCtrl\/MemCtrlTest.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "modules\/MemCtrl\/MemCtrlTest.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/MemCtrl\/MemCtrlTest.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/MemCtrl\/MemCtrlTest.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/MemCtrl\/MemCtrlTest.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "modules\/MemCtrl\/MemCtrlTest.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/MemCtrl\/MemCtrlTest.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/MemCtrl\/MemCtrlTest.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/MemCtrl\/MemCtrlTest.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "modules\/MemCtrl\/MemCtrlTest.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "modules\/MemCtrl\/MemCtrlTest.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "modules\/MemCtrl\/MemCtrlTest.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "modules\/MemCtrl\/MemCtrlTest.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "modules\/MemCtrl\/MemCtrlTest.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "modules\/MemCtrl\/MemCtrlTest.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "modules\/MemCtrl\/MemCtrlTest.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "modules\/MemCtrl\/MemCtrlTest.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "modules\/MemCtrl\/MemCtrlTest.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/MemCtrl\/MemCtrlTest.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/MemCtrl\/MemCtrlTest.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/MemCtrl\/MemCtrlTest.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/MemCtrl\/MemCtrlTest.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "modules\/MemCtrl\/MemCtrlTest.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "modules\/MemCtrl\/MemCtrlTest.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "modules\/MemCtrl\/MemCtrlTest.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/MemCtrl\/MemCtrlTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/MemCtrl\/MemCtrlTest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/MemCtrl\/MemCtrlTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/MemCtrl\/MemCtrlTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/MemCtrl\/MemCtrlTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/MemCtrl\/MemCtrlTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/MemCtrl\/MemCtrlTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/MemCtrl\/MemCtrlTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/MemCtrl\/MemCtrlTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/MemCtrl\/MemCtrlTest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/MemCtrl\/MemCtrlTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/MemCtrl\/MemCtrlTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/MemCtrl\/MemCtrlTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/MemCtrl\/MemCtrlTest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/MemCtrl\/MemCtrlTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/MemCtrl\/MemCtrlTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/MemCtrl\/MemCtrlTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/MemCtrl\/MemCtrlTest.html", "kind" : "class"}], "modules.AXI4.main" : [{"name" : "modules.AXI4.main.AddressChannel", "shortDescription" : "Channel: Write Address \/ Read Address", "members_class" : [{"label" : "lock", "tail" : ": UInt", "member" : "modules.AXI4.main.AddressChannel.lock", "link" : "modules\/AXI4\/main\/AddressChannel.html#lock:chisel3.UInt", "kind" : "val"}, {"label" : "qos", "tail" : ": UInt", "member" : "modules.AXI4.main.AddressChannel.qos", "link" : "modules\/AXI4\/main\/AddressChannel.html#qos:chisel3.UInt", "kind" : "val"}, {"label" : "prot", "tail" : ": UInt", "member" : "modules.AXI4.main.AddressChannel.prot", "link" : "modules\/AXI4\/main\/AddressChannel.html#prot:chisel3.UInt", "kind" : "val"}, {"label" : "cache", "tail" : ": UInt", "member" : "modules.AXI4.main.AddressChannel.cache", "link" : "modules\/AXI4\/main\/AddressChannel.html#cache:chisel3.UInt", "kind" : "val"}, {"label" : "burst", "tail" : ": UInt", "member" : "modules.AXI4.main.AddressChannel.burst", "link" : "modules\/AXI4\/main\/AddressChannel.html#burst:chisel3.UInt", "kind" : "val"}, {"label" : "size", "tail" : ": UInt", "member" : "modules.AXI4.main.AddressChannel.size", "link" : "modules\/AXI4\/main\/AddressChannel.html#size:chisel3.UInt", "kind" : "val"}, {"label" : "len", "tail" : ": UInt", "member" : "modules.AXI4.main.AddressChannel.len", "link" : "modules\/AXI4\/main\/AddressChannel.html#len:chisel3.UInt", "kind" : "val"}, {"label" : "id", "tail" : ": Option[UInt]", "member" : "modules.AXI4.main.AddressChannel.id", "link" : "modules\/AXI4\/main\/AddressChannel.html#id:Option[chisel3.UInt]", "kind" : "val"}, {"member" : "modules.AXI4.main.AddressChannel#<init>", "error" : "unsupported entity"}, {"label" : "<=>", "tail" : "(that: T2): Unit", "member" : "modules.AXI4.main.ChannelWithData.<=>", "link" : "modules\/AXI4\/main\/AddressChannel.html#<=>[T2<:modules.ChiBus.main.Channel](that:T2):Unit", "kind" : "def"}, {"label" : "data", "tail" : ": UInt", "member" : "modules.AXI4.main.ChannelWithData.data", "link" : "modules\/AXI4\/main\/AddressChannel.html#data:chisel3.UInt", "kind" : "val"}, {"label" : "getNamePrefix", "tail" : "(name: String)(ac: T, c: GlobalConfig): String", "member" : "modules.AXI4.main.AXIChannel.getNamePrefix", "link" : "modules\/AXI4\/main\/AddressChannel.html#getNamePrefix[T<:modules.ChiBus.main.BusTypes.DirectionType](name:String)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):String", "kind" : "def"}, {"label" : "getIsOutputWithType", "tail" : "(x: => T2, masterOut: Boolean, description: String)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutputWithType", "link" : "modules\/AXI4\/main\/AddressChannel.html#getIsOutputWithType[T2<:chisel3.Data,T3<:modules.ChiBus.main.BusTypes.DirectionType](x:=>T2,masterOut:Boolean,description:String)(implicitac:T3):T2", "kind" : "def"}, {"label" : "getIsOutput", "tail" : "(setOutput: => T2, setInput: => T2, isMasterOut: Boolean)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutput", "link" : "modules\/AXI4\/main\/AddressChannel.html#getIsOutput[T2,T3<:modules.ChiBus.main.BusTypes.DirectionType](setOutput:=>T2,setInput:=>T2,isMasterOut:Boolean)(implicitac:T3):T2", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.Channel.clearOutput", "link" : "modules\/AXI4\/main\/AddressChannel.html#clearOutput():Unit", "kind" : "def"}, {"label" : "parseNamePool", "tail" : "(ac: T, c: GlobalConfig): Unit", "member" : "modules.ChiBus.main.Channel.parseNamePool", "link" : "modules\/AXI4\/main\/AddressChannel.html#parseNamePool[T<:modules.ChiBus.main.BusTypes.DirectionType](implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):Unit", "kind" : "def"}, {"label" : "addPorts", "tail" : "(ports: Seq[UInt]): Unit", "member" : "modules.ChiBus.main.Channel.addPorts", "link" : "modules\/AXI4\/main\/AddressChannel.html#addPorts(ports:Seq[chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "addPort", "tail" : "(port: UInt, name: String): ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.addPort", "link" : "modules\/AXI4\/main\/AddressChannel.html#addPort(port:chisel3.UInt,name:String):scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "def"}, {"label" : "portPool", "tail" : ": ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.portPool", "link" : "modules\/AXI4\/main\/AddressChannel.html#portPool:scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "val"}, {"label" : "infixName", "tail" : ": String", "member" : "modules.ChiBus.main.Channel.infixName", "link" : "modules\/AXI4\/main\/AddressChannel.html#infixName:String", "kind" : "val"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/AXI4\/main\/AddressChannel.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/AXI4\/main\/AddressChannel.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): AddressChannel.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/AXI4\/main\/AddressChannel.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/AXI4\/main\/AddressChannel.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/AXI4\/main\/AddressChannel.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/AXI4\/main\/AddressChannel.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/AXI4\/main\/AddressChannel.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/AXI4\/main\/AddressChannel.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/AXI4\/main\/AddressChannel.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/AXI4\/main\/AddressChannel.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/AXI4\/main\/AddressChannel.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/AXI4\/main\/AddressChannel.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/AddressChannel.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/AddressChannel.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/AXI4\/main\/AddressChannel.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/AXI4\/main\/AddressChannel.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/AXI4\/main\/AddressChannel.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/AXI4\/main\/AddressChannel.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/AXI4\/main\/AddressChannel.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/AddressChannel.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/AddressChannel.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/AXI4\/main\/AddressChannel.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/AddressChannel.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/AddressChannel.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/AXI4\/main\/AddressChannel.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/AXI4\/main\/AddressChannel.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/AXI4\/main\/AddressChannel.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/AXI4\/main\/AddressChannel.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/AXI4\/main\/AddressChannel.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): AddressChannel.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/AXI4\/main\/AddressChannel.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/AXI4\/main\/AddressChannel.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/AXI4\/main\/AddressChannel.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/AXI4\/main\/AddressChannel.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/AXI4\/main\/AddressChannel.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/AXI4\/main\/AddressChannel.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/AXI4\/main\/AddressChannel.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/AXI4\/main\/AddressChannel.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/AXI4\/main\/AddressChannel.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/AXI4\/main\/AddressChannel.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): AddressChannel.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/AXI4\/main\/AddressChannel.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/AXI4\/main\/AddressChannel.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/AXI4\/main\/AddressChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/AddressChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/AddressChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/AddressChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/AddressChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/AddressChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/AddressChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/AddressChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AddressChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AddressChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AddressChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/AddressChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/AddressChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/AddressChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/AddressChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/AddressChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/AddressChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/main\/AddressChannel.html", "kind" : "class"}, {"name" : "modules.AXI4.main.AXI4", "shortDescription" : "", "members_class" : [{"label" : "slave", "tail" : ": AXI4Slave", "member" : "modules.AXI4.main.AXI4.slave", "link" : "modules\/AXI4\/main\/AXI4.html#slave:modules.AXI4.main.AXI4Slave", "kind" : "val"}, {"label" : "master", "tail" : ": AXI4Master", "member" : "modules.AXI4.main.AXI4.master", "link" : "modules\/AXI4\/main\/AXI4.html#master:modules.AXI4.main.AXI4Master", "kind" : "val"}, {"label" : "c", "tail" : ": AXI4ConfigDefault", "member" : "modules.AXI4.main.AXI4.c", "link" : "modules\/AXI4\/main\/AXI4.html#c:modules.AXI4.main.ConfigTypes.AXI4ConfigDefault", "kind" : "implicit val"}, {"member" : "modules.AXI4.main.AXI4#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/AXI4\/main\/AXI4.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/AXI4\/main\/AXI4.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/AXI4\/main\/AXI4.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/AXI4\/main\/AXI4.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/AXI4\/main\/AXI4.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/AXI4\/main\/AXI4.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/AXI4\/main\/AXI4.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/AXI4\/main\/AXI4.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/AXI4\/main\/AXI4.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/AXI4\/main\/AXI4.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/AXI4\/main\/AXI4.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/AXI4\/main\/AXI4.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/AXI4\/main\/AXI4.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/AXI4\/main\/AXI4.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/AXI4\/main\/AXI4.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/AXI4\/main\/AXI4.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/AXI4\/main\/AXI4.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/AXI4\/main\/AXI4.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/AXI4\/main\/AXI4.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/AXI4\/main\/AXI4.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/AXI4\/main\/AXI4.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/AXI4\/main\/AXI4.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/AXI4\/main\/AXI4.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/AXI4\/main\/AXI4.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/AXI4\/main\/AXI4.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/AXI4\/main\/AXI4.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/AXI4\/main\/AXI4.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/AXI4\/main\/AXI4.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): AXI4.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/AXI4\/main\/AXI4.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/AXI4\/main\/AXI4.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/AXI4\/main\/AXI4.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/AXI4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/AXI4.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/AXI4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/AXI4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/AXI4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/AXI4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/AXI4.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/AXI4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/AXI4.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/AXI4\/main\/AXI4.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/AXI4.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/AXI4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/AXI4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/AXI4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/main\/AXI4.html", "kind" : "class"}, {"name" : "modules.AXI4.main.AXI4Interface", "shortDescription" : "", "object" : "modules\/AXI4\/main\/AXI4Interface$.html", "members_object" : [{"label" : "configDefault", "tail" : ": AXI4ConfigDefault", "member" : "modules.AXI4.main.AXI4Interface.configDefault", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#configDefault:modules.AXI4.main.ConfigTypes.AXI4ConfigDefault", "kind" : "val"}, {"label" : "MasterInSlaveOut", "tail" : "(x: D)(ac: T, c: GlobalConfig): ChannelWithShakeHands[T, D]", "member" : "modules.AXI4.main.AXI4Interface.MasterInSlaveOut", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#MasterInSlaveOut[T<:modules.AXI4.main.ConfigTypes.AXI4ConfigWithDirection,D<:modules.ChiBus.main.Channel](x:D)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):modules.AXI4.main.ChannelWithShakeHands[T,D]", "kind" : "def"}, {"label" : "MasterOutSlaveIn", "tail" : "(x: D)(ac: T, c: GlobalConfig): ChannelWithShakeHands[T, D]", "member" : "modules.AXI4.main.AXI4Interface.MasterOutSlaveIn", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#MasterOutSlaveIn[T<:modules.AXI4.main.ConfigTypes.AXI4ConfigWithDirection,D<:modules.ChiBus.main.Channel](x:D)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):modules.AXI4.main.ChannelWithShakeHands[T,D]", "kind" : "def"}, {"label" : "indexSlave", "tail" : ": Int", "member" : "modules.AXI4.main.AXI4Interface.indexSlave", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#indexSlave:Int", "kind" : "var"}, {"label" : "indexMaster", "tail" : ": Int", "member" : "modules.AXI4.main.AXI4Interface.indexMaster", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#indexMaster:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/AXI4Interface$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/AXI4Interface$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.AXI4.main.AXI4Master", "shortDescription" : "", "members_class" : [{"label" : "handleCtrl", "tail" : "(): Unit", "member" : "modules.AXI4.main.AXI4Master.handleCtrl", "link" : "modules\/AXI4\/main\/AXI4Master.html#handleCtrl():Unit", "kind" : "def"}, {"label" : "startWritingAddress", "tail" : "(addr: AddressChannel[AXI4ConfigMaster]): Unit", "member" : "modules.AXI4.main.AXI4Master.startWritingAddress", "link" : "modules\/AXI4\/main\/AXI4Master.html#startWritingAddress(addr:modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]):Unit", "kind" : "def"}, {"label" : "startReadingAddress", "tail" : "(addr: AddressChannel[AXI4ConfigMaster]): Unit", "member" : "modules.AXI4.main.AXI4Master.startReadingAddress", "link" : "modules\/AXI4\/main\/AXI4Master.html#startReadingAddress(addr:modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]):Unit", "kind" : "def"}, {"label" : "writeAddressRegs", "tail" : ": AddressChannel[AXI4ConfigMaster]", "member" : "modules.AXI4.main.AXI4Master.writeAddressRegs", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeAddressRegs:modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]", "kind" : "val"}, {"label" : "readAddressRegs", "tail" : ": AddressChannel[AXI4ConfigMaster]", "member" : "modules.AXI4.main.AXI4Master.readAddressRegs", "link" : "modules\/AXI4\/main\/AXI4Master.html#readAddressRegs:modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]", "kind" : "val"}, {"label" : "startWritingSignal", "tail" : ": Bool", "member" : "modules.AXI4.main.AXI4Master.startWritingSignal", "link" : "modules\/AXI4\/main\/AXI4Master.html#startWritingSignal:chisel3.Bool", "kind" : "val"}, {"label" : "startReadingSignal", "tail" : ": Bool", "member" : "modules.AXI4.main.AXI4Master.startReadingSignal", "link" : "modules\/AXI4\/main\/AXI4Master.html#startReadingSignal:chisel3.Bool", "kind" : "val"}, {"label" : "interface", "tail" : "(): InterfaceAXI4[AXI4ConfigMaster]", "member" : "modules.AXI4.main.AXI4Master.interface", "link" : "modules\/AXI4\/main\/AXI4Master.html#interface:modules.AXI4.main.InterfaceAXI4[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]", "kind" : "def"}, {"label" : "interfaceMaster", "tail" : ": InterfaceAXI4[AXI4ConfigMaster]", "member" : "modules.AXI4.main.AXI4Master.interfaceMaster", "link" : "modules\/AXI4\/main\/AXI4Master.html#interfaceMaster:modules.AXI4.main.InterfaceAXI4[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]", "kind" : "val"}, {"label" : "getInterface", "tail" : "(): InterfaceAXI4[AXI4ConfigMaster]", "member" : "modules.AXI4.main.AXI4Master.getInterface", "link" : "modules\/AXI4\/main\/AXI4Master.html#getInterface:modules.AXI4.main.InterfaceAXI4[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]", "kind" : "def"}, {"label" : "getAddressWire", "tail" : "(): AddressChannel[AXI4ConfigMaster]", "member" : "modules.AXI4.main.AXI4Master.getAddressWire", "link" : "modules\/AXI4\/main\/AXI4Master.html#getAddressWire:modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]", "kind" : "def"}, {"label" : "setOnWriteResp", "tail" : "(callback: => Option[Function1[RespChannel[AXI4ConfigMaster], _]]): Unit", "member" : "modules.AXI4.main.AXI4Master.setOnWriteResp", "link" : "modules\/AXI4\/main\/AXI4Master.html#setOnWriteResp(callback:=>Option[Function1[modules.AXI4.main.RespChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster],_]]):Unit", "kind" : "def"}, {"label" : "setOnWriteData", "tail" : "(callback: => Option[Function1[DataChannel[AXI4ConfigMaster], _]]): Unit", "member" : "modules.AXI4.main.AXI4Master.setOnWriteData", "link" : "modules\/AXI4\/main\/AXI4Master.html#setOnWriteData(callback:=>Option[Function1[modules.AXI4.main.DataChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster],_]]):Unit", "kind" : "def"}, {"label" : "setOnReadData", "tail" : "(callback: => Option[Function1[DataChannel[AXI4ConfigMaster], _]]): Unit", "member" : "modules.AXI4.main.AXI4Master.setOnReadData", "link" : "modules\/AXI4\/main\/AXI4Master.html#setOnReadData(callback:=>Option[Function1[modules.AXI4.main.DataChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster],_]]):Unit", "kind" : "def"}, {"label" : "onWriteResp", "tail" : ": Option[Function1[RespChannel[AXI4ConfigMaster], _]]", "member" : "modules.AXI4.main.AXI4Master.onWriteResp", "link" : "modules\/AXI4\/main\/AXI4Master.html#onWriteResp:Option[Function1[modules.AXI4.main.RespChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster],_]]", "kind" : "var"}, {"label" : "onWriteData", "tail" : ": Option[Function1[DataChannel[AXI4ConfigMaster], _]]", "member" : "modules.AXI4.main.AXI4Master.onWriteData", "link" : "modules\/AXI4\/main\/AXI4Master.html#onWriteData:Option[Function1[modules.AXI4.main.DataChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster],_]]", "kind" : "var"}, {"label" : "onReadData", "tail" : ": Option[Function1[DataChannel[AXI4ConfigMaster], _]]", "member" : "modules.AXI4.main.AXI4Master.onReadData", "link" : "modules\/AXI4\/main\/AXI4Master.html#onReadData:Option[Function1[modules.AXI4.main.DataChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster],_]]", "kind" : "var"}, {"label" : "getAXIConfig", "tail" : "(): AXI4ConfigMaster", "member" : "modules.AXI4.main.AXI4Master.getAXIConfig", "link" : "modules\/AXI4\/main\/AXI4Master.html#getAXIConfig:modules.AXI4.main.ConfigTypes.AXI4ConfigMaster", "kind" : "def"}, {"member" : "modules.AXI4.main.AXI4Master#<init>", "error" : "unsupported entity"}, {"label" : "isWriteEnd", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isWriteEnd", "link" : "modules\/AXI4\/main\/AXI4Master.html#isWriteEnd:chisel3.Bool", "kind" : "def"}, {"label" : "isWriteIdle", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isWriteIdle", "link" : "modules\/AXI4\/main\/AXI4Master.html#isWriteIdle:chisel3.Bool", "kind" : "def"}, {"label" : "isReadEnd", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isReadEnd", "link" : "modules\/AXI4\/main\/AXI4Master.html#isReadEnd:chisel3.Bool", "kind" : "def"}, {"label" : "isReadIdle", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isReadIdle", "link" : "modules\/AXI4\/main\/AXI4Master.html#isReadIdle:chisel3.Bool", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.AXI4.main.AXI4MasterSlave.clearOutput", "link" : "modules\/AXI4\/main\/AXI4Master.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: AXI4MasterSlave[S]): AXI4MasterSlave[S]", "member" : "modules.AXI4.main.AXI4MasterSlave.<=>", "link" : "modules\/AXI4\/main\/AXI4Master.html#<=>[S<:modules.AXI4.main.ConfigTypes.AXI4ConfigWithDirection](that:modules.AXI4.main.AXI4MasterSlave[S]):modules.AXI4.main.AXI4MasterSlave[S]", "kind" : "def"}, {"label" : "writeState", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeState", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeState:chisel3.UInt", "kind" : "val"}, {"label" : "writeStateNext", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeStateNext", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeStateNext:chisel3.UInt", "kind" : "val"}, {"label" : "readState", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readState", "link" : "modules\/AXI4\/main\/AXI4Master.html#readState:chisel3.UInt", "kind" : "val"}, {"label" : "readStateNext", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readStateNext", "link" : "modules\/AXI4\/main\/AXI4Master.html#readStateNext:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnd", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeEnd", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeEnd:chisel3.UInt", "kind" : "val"}, {"label" : "writeRespReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeRespReady", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeRespReady:chisel3.UInt", "kind" : "val"}, {"label" : "writeRespValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeRespValid", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeRespValid:chisel3.UInt", "kind" : "val"}, {"label" : "writeReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeReady", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeReady:chisel3.UInt", "kind" : "val"}, {"label" : "writeValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeValid", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeValid:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddressReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeAddressReady", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeAddressReady:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddressValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeAddressValid", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeAddressValid:chisel3.UInt", "kind" : "val"}, {"label" : "writeIdle", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeIdle", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeIdle:chisel3.UInt", "kind" : "val"}, {"label" : "writeStates", "tail" : ": List[UInt]", "member" : "modules.AXI4.main.AXI4MasterSlave.writeStates", "link" : "modules\/AXI4\/main\/AXI4Master.html#writeStates:List[chisel3.UInt]", "kind" : "val"}, {"label" : "readEnd", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readEnd", "link" : "modules\/AXI4\/main\/AXI4Master.html#readEnd:chisel3.UInt", "kind" : "val"}, {"label" : "readReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readReady", "link" : "modules\/AXI4\/main\/AXI4Master.html#readReady:chisel3.UInt", "kind" : "val"}, {"label" : "readValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readValid", "link" : "modules\/AXI4\/main\/AXI4Master.html#readValid:chisel3.UInt", "kind" : "val"}, {"label" : "readAddressReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readAddressReady", "link" : "modules\/AXI4\/main\/AXI4Master.html#readAddressReady:chisel3.UInt", "kind" : "val"}, {"label" : "readAddressValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readAddressValid", "link" : "modules\/AXI4\/main\/AXI4Master.html#readAddressValid:chisel3.UInt", "kind" : "val"}, {"label" : "readIdle", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readIdle", "link" : "modules\/AXI4\/main\/AXI4Master.html#readIdle:chisel3.UInt", "kind" : "val"}, {"label" : "readStates", "tail" : ": List[UInt]", "member" : "modules.AXI4.main.AXI4MasterSlave.readStates", "link" : "modules\/AXI4\/main\/AXI4Master.html#readStates:List[chisel3.UInt]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/AXI4Master.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/AXI4Master.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/AXI4Master.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/AXI4Master.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/AXI4Master.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/AXI4Master.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/AXI4Master.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4Master.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4Master.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4Master.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/AXI4Master.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/AXI4Master.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/AXI4\/main\/AXI4Master.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/AXI4Master.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/AXI4\/main\/AXI4Master.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/AXI4\/main\/AXI4Master.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/AXI4Master.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/AXI4Master.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/AXI4Master.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/main\/AXI4Master.html", "kind" : "class"}, {"name" : "modules.AXI4.main.AXI4MasterSlave", "shortDescription" : "AXI Master \/ Slave module.", "members_class" : [{"label" : "isWriteEnd", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isWriteEnd", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#isWriteEnd:chisel3.Bool", "kind" : "def"}, {"label" : "isWriteIdle", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isWriteIdle", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#isWriteIdle:chisel3.Bool", "kind" : "def"}, {"label" : "isReadEnd", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isReadEnd", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#isReadEnd:chisel3.Bool", "kind" : "def"}, {"label" : "isReadIdle", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isReadIdle", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#isReadIdle:chisel3.Bool", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.AXI4.main.AXI4MasterSlave.clearOutput", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: AXI4MasterSlave[S]): AXI4MasterSlave[S]", "member" : "modules.AXI4.main.AXI4MasterSlave.<=>", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#<=>[S<:modules.AXI4.main.ConfigTypes.AXI4ConfigWithDirection](that:modules.AXI4.main.AXI4MasterSlave[S]):modules.AXI4.main.AXI4MasterSlave[S]", "kind" : "def"}, {"label" : "writeState", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeState", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeState:chisel3.UInt", "kind" : "val"}, {"label" : "writeStateNext", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeStateNext", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeStateNext:chisel3.UInt", "kind" : "val"}, {"label" : "readState", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readState", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#readState:chisel3.UInt", "kind" : "val"}, {"label" : "readStateNext", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readStateNext", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#readStateNext:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnd", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeEnd", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeEnd:chisel3.UInt", "kind" : "val"}, {"label" : "writeRespReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeRespReady", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeRespReady:chisel3.UInt", "kind" : "val"}, {"label" : "writeRespValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeRespValid", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeRespValid:chisel3.UInt", "kind" : "val"}, {"label" : "writeReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeReady", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeReady:chisel3.UInt", "kind" : "val"}, {"label" : "writeValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeValid", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeValid:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddressReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeAddressReady", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeAddressReady:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddressValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeAddressValid", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeAddressValid:chisel3.UInt", "kind" : "val"}, {"label" : "writeIdle", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeIdle", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeIdle:chisel3.UInt", "kind" : "val"}, {"label" : "writeStates", "tail" : ": List[UInt]", "member" : "modules.AXI4.main.AXI4MasterSlave.writeStates", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#writeStates:List[chisel3.UInt]", "kind" : "val"}, {"label" : "readEnd", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readEnd", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#readEnd:chisel3.UInt", "kind" : "val"}, {"label" : "readReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readReady", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#readReady:chisel3.UInt", "kind" : "val"}, {"label" : "readValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readValid", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#readValid:chisel3.UInt", "kind" : "val"}, {"label" : "readAddressReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readAddressReady", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#readAddressReady:chisel3.UInt", "kind" : "val"}, {"label" : "readAddressValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readAddressValid", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#readAddressValid:chisel3.UInt", "kind" : "val"}, {"label" : "readIdle", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readIdle", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#readIdle:chisel3.UInt", "kind" : "val"}, {"label" : "readStates", "tail" : ": List[UInt]", "member" : "modules.AXI4.main.AXI4MasterSlave.readStates", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#readStates:List[chisel3.UInt]", "kind" : "val"}, {"member" : "modules.AXI4.main.AXI4MasterSlave#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handleCtrl", "tail" : "(): Unit", "member" : "modules.AXI4.main.AXI4MasterSlave.handleCtrl", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#handleCtrl():Unit", "kind" : "abstract def"}, {"label" : "getAXIConfig", "tail" : "(): AXI4ConfigWithDirection", "member" : "modules.AXI4.main.AXI4MasterSlave.getAXIConfig", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#getAXIConfig:modules.AXI4.main.ConfigTypes.AXI4ConfigWithDirection", "kind" : "abstract def"}, {"label" : "interface", "tail" : "(): InterfaceAXI4[T]", "member" : "modules.AXI4.main.AXI4MasterSlave.interface", "link" : "modules\/AXI4\/main\/AXI4MasterSlave.html#interface:modules.AXI4.main.InterfaceAXI4[T]", "kind" : "abstract def"}], "class" : "modules\/AXI4\/main\/AXI4MasterSlave.html", "kind" : "class"}, {"name" : "modules.AXI4.main.AXI4Slave", "shortDescription" : "", "members_class" : [{"label" : "handleCtrl", "tail" : "(): Unit", "member" : "modules.AXI4.main.AXI4Slave.handleCtrl", "link" : "modules\/AXI4\/main\/AXI4Slave.html#handleCtrl():Unit", "kind" : "def"}, {"label" : "interface", "tail" : "(): InterfaceAXI4[AXI4ConfigSlave]", "member" : "modules.AXI4.main.AXI4Slave.interface", "link" : "modules\/AXI4\/main\/AXI4Slave.html#interface:modules.AXI4.main.InterfaceAXI4[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave]", "kind" : "def"}, {"label" : "interfaceSlave", "tail" : ": InterfaceAXI4[AXI4ConfigSlave]", "member" : "modules.AXI4.main.AXI4Slave.interfaceSlave", "link" : "modules\/AXI4\/main\/AXI4Slave.html#interfaceSlave:modules.AXI4.main.InterfaceAXI4[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave]", "kind" : "val"}, {"label" : "setOnWriteResp", "tail" : "(callback: Option[Function1[RespChannel[AXI4ConfigSlave], _]]): Unit", "member" : "modules.AXI4.main.AXI4Slave.setOnWriteResp", "link" : "modules\/AXI4\/main\/AXI4Slave.html#setOnWriteResp(callback:Option[Function1[modules.AXI4.main.RespChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave],_]]):Unit", "kind" : "def"}, {"label" : "setOnWriteData", "tail" : "(callback: Option[Function2[CacheAddrWire, DataChannel[AXI4ConfigSlave], _]]): Unit", "member" : "modules.AXI4.main.AXI4Slave.setOnWriteData", "link" : "modules\/AXI4\/main\/AXI4Slave.html#setOnWriteData(callback:Option[Function2[modules.Cache.main.CacheAddrWire,modules.AXI4.main.DataChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave],_]]):Unit", "kind" : "def"}, {"label" : "setOnReadData", "tail" : "(callback: Option[(CacheAddrWire, DataChannel[AXI4ConfigSlave]) => UInt]): Unit", "member" : "modules.AXI4.main.AXI4Slave.setOnReadData", "link" : "modules\/AXI4\/main\/AXI4Slave.html#setOnReadData(callback:Option[(modules.Cache.main.CacheAddrWire,modules.AXI4.main.DataChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave])=>chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "setOnWriteAddress", "tail" : "(callback: Option[Function1[AddressChannel[AXI4ConfigSlave], _]]): Unit", "member" : "modules.AXI4.main.AXI4Slave.setOnWriteAddress", "link" : "modules\/AXI4\/main\/AXI4Slave.html#setOnWriteAddress(callback:Option[Function1[modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave],_]]):Unit", "kind" : "def"}, {"label" : "setOnReadAddress", "tail" : "(callback: Option[Function1[AddressChannel[AXI4ConfigSlave], _]]): Unit", "member" : "modules.AXI4.main.AXI4Slave.setOnReadAddress", "link" : "modules\/AXI4\/main\/AXI4Slave.html#setOnReadAddress(callback:Option[Function1[modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave],_]]):Unit", "kind" : "def"}, {"label" : "onWriteResp", "tail" : ": Option[Function1[RespChannel[AXI4ConfigSlave], _]]", "member" : "modules.AXI4.main.AXI4Slave.onWriteResp", "link" : "modules\/AXI4\/main\/AXI4Slave.html#onWriteResp:Option[Function1[modules.AXI4.main.RespChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave],_]]", "kind" : "var"}, {"label" : "onWriteData", "tail" : ": Option[Function2[CacheAddrWire, DataChannel[AXI4ConfigSlave], _]]", "member" : "modules.AXI4.main.AXI4Slave.onWriteData", "link" : "modules\/AXI4\/main\/AXI4Slave.html#onWriteData:Option[Function2[modules.Cache.main.CacheAddrWire,modules.AXI4.main.DataChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave],_]]", "kind" : "var"}, {"label" : "onReadData", "tail" : ": Option[(CacheAddrWire, DataChannel[AXI4ConfigSlave]) => UInt]", "member" : "modules.AXI4.main.AXI4Slave.onReadData", "link" : "modules\/AXI4\/main\/AXI4Slave.html#onReadData:Option[(modules.Cache.main.CacheAddrWire,modules.AXI4.main.DataChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave])=>chisel3.UInt]", "kind" : "var"}, {"label" : "onWriteAddress", "tail" : ": Option[Function1[AddressChannel[AXI4ConfigSlave], _]]", "member" : "modules.AXI4.main.AXI4Slave.onWriteAddress", "link" : "modules\/AXI4\/main\/AXI4Slave.html#onWriteAddress:Option[Function1[modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave],_]]", "kind" : "var"}, {"label" : "onReadAddress", "tail" : ": Option[Function1[AddressChannel[AXI4ConfigSlave], _]]", "member" : "modules.AXI4.main.AXI4Slave.onReadAddress", "link" : "modules\/AXI4\/main\/AXI4Slave.html#onReadAddress:Option[Function1[modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave],_]]", "kind" : "var"}, {"label" : "writeBurstType", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4Slave.writeBurstType", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeBurstType:chisel3.UInt", "kind" : "val"}, {"label" : "readBurstType", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4Slave.readBurstType", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readBurstType:chisel3.UInt", "kind" : "val"}, {"label" : "writingAddress", "tail" : ": CacheAddrWire", "member" : "modules.AXI4.main.AXI4Slave.writingAddress", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writingAddress:modules.Cache.main.CacheAddrWire", "kind" : "val"}, {"label" : "readingAddress", "tail" : ": CacheAddrWire", "member" : "modules.AXI4.main.AXI4Slave.readingAddress", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readingAddress:modules.Cache.main.CacheAddrWire", "kind" : "val"}, {"label" : "getInterface", "tail" : "(): InterfaceAXI4[AXI4ConfigSlave]", "member" : "modules.AXI4.main.AXI4Slave.getInterface", "link" : "modules\/AXI4\/main\/AXI4Slave.html#getInterface:modules.AXI4.main.InterfaceAXI4[modules.AXI4.main.ConfigTypes.AXI4ConfigSlave]", "kind" : "def"}, {"label" : "getAXIConfig", "tail" : "(): AXI4ConfigSlave", "member" : "modules.AXI4.main.AXI4Slave.getAXIConfig", "link" : "modules\/AXI4\/main\/AXI4Slave.html#getAXIConfig:modules.AXI4.main.ConfigTypes.AXI4ConfigSlave", "kind" : "def"}, {"member" : "modules.AXI4.main.AXI4Slave#<init>", "error" : "unsupported entity"}, {"label" : "isWriteEnd", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isWriteEnd", "link" : "modules\/AXI4\/main\/AXI4Slave.html#isWriteEnd:chisel3.Bool", "kind" : "def"}, {"label" : "isWriteIdle", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isWriteIdle", "link" : "modules\/AXI4\/main\/AXI4Slave.html#isWriteIdle:chisel3.Bool", "kind" : "def"}, {"label" : "isReadEnd", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isReadEnd", "link" : "modules\/AXI4\/main\/AXI4Slave.html#isReadEnd:chisel3.Bool", "kind" : "def"}, {"label" : "isReadIdle", "tail" : "(): Bool", "member" : "modules.AXI4.main.AXI4MasterSlave.isReadIdle", "link" : "modules\/AXI4\/main\/AXI4Slave.html#isReadIdle:chisel3.Bool", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.AXI4.main.AXI4MasterSlave.clearOutput", "link" : "modules\/AXI4\/main\/AXI4Slave.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: AXI4MasterSlave[S]): AXI4MasterSlave[S]", "member" : "modules.AXI4.main.AXI4MasterSlave.<=>", "link" : "modules\/AXI4\/main\/AXI4Slave.html#<=>[S<:modules.AXI4.main.ConfigTypes.AXI4ConfigWithDirection](that:modules.AXI4.main.AXI4MasterSlave[S]):modules.AXI4.main.AXI4MasterSlave[S]", "kind" : "def"}, {"label" : "writeState", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeState", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeState:chisel3.UInt", "kind" : "val"}, {"label" : "writeStateNext", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeStateNext", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeStateNext:chisel3.UInt", "kind" : "val"}, {"label" : "readState", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readState", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readState:chisel3.UInt", "kind" : "val"}, {"label" : "readStateNext", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readStateNext", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readStateNext:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnd", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeEnd", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeEnd:chisel3.UInt", "kind" : "val"}, {"label" : "writeRespReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeRespReady", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeRespReady:chisel3.UInt", "kind" : "val"}, {"label" : "writeRespValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeRespValid", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeRespValid:chisel3.UInt", "kind" : "val"}, {"label" : "writeReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeReady", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeReady:chisel3.UInt", "kind" : "val"}, {"label" : "writeValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeValid", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeValid:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddressReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeAddressReady", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeAddressReady:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddressValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeAddressValid", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeAddressValid:chisel3.UInt", "kind" : "val"}, {"label" : "writeIdle", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.writeIdle", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeIdle:chisel3.UInt", "kind" : "val"}, {"label" : "writeStates", "tail" : ": List[UInt]", "member" : "modules.AXI4.main.AXI4MasterSlave.writeStates", "link" : "modules\/AXI4\/main\/AXI4Slave.html#writeStates:List[chisel3.UInt]", "kind" : "val"}, {"label" : "readEnd", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readEnd", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readEnd:chisel3.UInt", "kind" : "val"}, {"label" : "readReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readReady", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readReady:chisel3.UInt", "kind" : "val"}, {"label" : "readValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readValid", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readValid:chisel3.UInt", "kind" : "val"}, {"label" : "readAddressReady", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readAddressReady", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readAddressReady:chisel3.UInt", "kind" : "val"}, {"label" : "readAddressValid", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readAddressValid", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readAddressValid:chisel3.UInt", "kind" : "val"}, {"label" : "readIdle", "tail" : ": UInt", "member" : "modules.AXI4.main.AXI4MasterSlave.readIdle", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readIdle:chisel3.UInt", "kind" : "val"}, {"label" : "readStates", "tail" : ": List[UInt]", "member" : "modules.AXI4.main.AXI4MasterSlave.readStates", "link" : "modules\/AXI4\/main\/AXI4Slave.html#readStates:List[chisel3.UInt]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/AXI4Slave.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/AXI4Slave.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/AXI4Slave.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/AXI4Slave.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/AXI4Slave.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/AXI4Slave.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/AXI4Slave.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4Slave.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4Slave.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXI4Slave.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/AXI4Slave.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/AXI4Slave.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/AXI4\/main\/AXI4Slave.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/AXI4Slave.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/AXI4\/main\/AXI4Slave.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/AXI4\/main\/AXI4Slave.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/AXI4Slave.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/AXI4Slave.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/AXI4Slave.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/main\/AXI4Slave.html", "kind" : "class"}, {"name" : "modules.AXI4.main.AXIChannel", "shortDescription" : "", "members_class" : [{"label" : "getNamePrefix", "tail" : "(name: String)(ac: T, c: GlobalConfig): String", "member" : "modules.AXI4.main.AXIChannel.getNamePrefix", "link" : "modules\/AXI4\/main\/AXIChannel.html#getNamePrefix[T<:modules.ChiBus.main.BusTypes.DirectionType](name:String)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):String", "kind" : "def"}, {"member" : "modules.AXI4.main.AXIChannel#<init>", "error" : "unsupported entity"}, {"label" : "getIsOutputWithType", "tail" : "(x: => T2, masterOut: Boolean, description: String)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutputWithType", "link" : "modules\/AXI4\/main\/AXIChannel.html#getIsOutputWithType[T2<:chisel3.Data,T3<:modules.ChiBus.main.BusTypes.DirectionType](x:=>T2,masterOut:Boolean,description:String)(implicitac:T3):T2", "kind" : "def"}, {"label" : "getIsOutput", "tail" : "(setOutput: => T2, setInput: => T2, isMasterOut: Boolean)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutput", "link" : "modules\/AXI4\/main\/AXIChannel.html#getIsOutput[T2,T3<:modules.ChiBus.main.BusTypes.DirectionType](setOutput:=>T2,setInput:=>T2,isMasterOut:Boolean)(implicitac:T3):T2", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.Channel.clearOutput", "link" : "modules\/AXI4\/main\/AXIChannel.html#clearOutput():Unit", "kind" : "def"}, {"label" : "parseNamePool", "tail" : "(ac: T, c: GlobalConfig): Unit", "member" : "modules.ChiBus.main.Channel.parseNamePool", "link" : "modules\/AXI4\/main\/AXIChannel.html#parseNamePool[T<:modules.ChiBus.main.BusTypes.DirectionType](implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):Unit", "kind" : "def"}, {"label" : "addPorts", "tail" : "(ports: Seq[UInt]): Unit", "member" : "modules.ChiBus.main.Channel.addPorts", "link" : "modules\/AXI4\/main\/AXIChannel.html#addPorts(ports:Seq[chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "addPort", "tail" : "(port: UInt, name: String): ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.addPort", "link" : "modules\/AXI4\/main\/AXIChannel.html#addPort(port:chisel3.UInt,name:String):scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "def"}, {"label" : "portPool", "tail" : ": ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.portPool", "link" : "modules\/AXI4\/main\/AXIChannel.html#portPool:scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "val"}, {"label" : "infixName", "tail" : ": String", "member" : "modules.ChiBus.main.Channel.infixName", "link" : "modules\/AXI4\/main\/AXIChannel.html#infixName:String", "kind" : "val"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/AXI4\/main\/AXIChannel.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/AXI4\/main\/AXIChannel.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): AXIChannel.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/AXI4\/main\/AXIChannel.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/AXI4\/main\/AXIChannel.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/AXI4\/main\/AXIChannel.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/AXI4\/main\/AXIChannel.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/AXI4\/main\/AXIChannel.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/AXI4\/main\/AXIChannel.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/AXI4\/main\/AXIChannel.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/AXI4\/main\/AXIChannel.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/AXI4\/main\/AXIChannel.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/AXI4\/main\/AXIChannel.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/AXIChannel.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/AXIChannel.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/AXI4\/main\/AXIChannel.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/AXI4\/main\/AXIChannel.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/AXI4\/main\/AXIChannel.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/AXI4\/main\/AXIChannel.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/AXI4\/main\/AXIChannel.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/AXIChannel.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/AXIChannel.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/AXI4\/main\/AXIChannel.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/AXIChannel.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/AXIChannel.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/AXI4\/main\/AXIChannel.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/AXI4\/main\/AXIChannel.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/AXI4\/main\/AXIChannel.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/AXI4\/main\/AXIChannel.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/AXI4\/main\/AXIChannel.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): AXIChannel.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/AXI4\/main\/AXIChannel.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/AXI4\/main\/AXIChannel.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/AXI4\/main\/AXIChannel.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/AXI4\/main\/AXIChannel.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/AXI4\/main\/AXIChannel.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/AXI4\/main\/AXIChannel.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/AXI4\/main\/AXIChannel.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/AXI4\/main\/AXIChannel.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/AXI4\/main\/AXIChannel.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/AXI4\/main\/AXIChannel.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): AXIChannel.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/AXI4\/main\/AXIChannel.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/AXI4\/main\/AXIChannel.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/AXI4\/main\/AXIChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/AXIChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/AXIChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/AXIChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/AXIChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/AXIChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/AXIChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/AXIChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXIChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXIChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/AXIChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/AXIChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/AXIChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/AXIChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/AXIChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/AXIChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/AXIChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "<=>", "tail" : "(that: T): Unit", "member" : "modules.ChiBus.main.Channel.<=>", "link" : "modules\/AXI4\/main\/AXIChannel.html#<=>[T<:modules.ChiBus.main.Channel](that:T):Unit", "kind" : "abstract def"}], "class" : "modules\/AXI4\/main\/AXIChannel.html", "kind" : "class"}, {"name" : "modules.AXI4.main.ChannelWithData", "shortDescription" : "Basic class for Data Channel \/  Address Channel", "members_class" : [{"label" : "<=>", "tail" : "(that: T2): Unit", "member" : "modules.AXI4.main.ChannelWithData.<=>", "link" : "modules\/AXI4\/main\/ChannelWithData.html#<=>[T2<:modules.ChiBus.main.Channel](that:T2):Unit", "kind" : "def"}, {"label" : "data", "tail" : ": UInt", "member" : "modules.AXI4.main.ChannelWithData.data", "link" : "modules\/AXI4\/main\/ChannelWithData.html#data:chisel3.UInt", "kind" : "val"}, {"member" : "modules.AXI4.main.ChannelWithData#<init>", "error" : "unsupported entity"}, {"label" : "getNamePrefix", "tail" : "(name: String)(ac: T, c: GlobalConfig): String", "member" : "modules.AXI4.main.AXIChannel.getNamePrefix", "link" : "modules\/AXI4\/main\/ChannelWithData.html#getNamePrefix[T<:modules.ChiBus.main.BusTypes.DirectionType](name:String)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):String", "kind" : "def"}, {"label" : "getIsOutputWithType", "tail" : "(x: => T2, masterOut: Boolean, description: String)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutputWithType", "link" : "modules\/AXI4\/main\/ChannelWithData.html#getIsOutputWithType[T2<:chisel3.Data,T3<:modules.ChiBus.main.BusTypes.DirectionType](x:=>T2,masterOut:Boolean,description:String)(implicitac:T3):T2", "kind" : "def"}, {"label" : "getIsOutput", "tail" : "(setOutput: => T2, setInput: => T2, isMasterOut: Boolean)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutput", "link" : "modules\/AXI4\/main\/ChannelWithData.html#getIsOutput[T2,T3<:modules.ChiBus.main.BusTypes.DirectionType](setOutput:=>T2,setInput:=>T2,isMasterOut:Boolean)(implicitac:T3):T2", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.Channel.clearOutput", "link" : "modules\/AXI4\/main\/ChannelWithData.html#clearOutput():Unit", "kind" : "def"}, {"label" : "parseNamePool", "tail" : "(ac: T, c: GlobalConfig): Unit", "member" : "modules.ChiBus.main.Channel.parseNamePool", "link" : "modules\/AXI4\/main\/ChannelWithData.html#parseNamePool[T<:modules.ChiBus.main.BusTypes.DirectionType](implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):Unit", "kind" : "def"}, {"label" : "addPorts", "tail" : "(ports: Seq[UInt]): Unit", "member" : "modules.ChiBus.main.Channel.addPorts", "link" : "modules\/AXI4\/main\/ChannelWithData.html#addPorts(ports:Seq[chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "addPort", "tail" : "(port: UInt, name: String): ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.addPort", "link" : "modules\/AXI4\/main\/ChannelWithData.html#addPort(port:chisel3.UInt,name:String):scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "def"}, {"label" : "portPool", "tail" : ": ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.portPool", "link" : "modules\/AXI4\/main\/ChannelWithData.html#portPool:scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "val"}, {"label" : "infixName", "tail" : ": String", "member" : "modules.ChiBus.main.Channel.infixName", "link" : "modules\/AXI4\/main\/ChannelWithData.html#infixName:String", "kind" : "val"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/AXI4\/main\/ChannelWithData.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/AXI4\/main\/ChannelWithData.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): ChannelWithData.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/AXI4\/main\/ChannelWithData.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/AXI4\/main\/ChannelWithData.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/AXI4\/main\/ChannelWithData.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/AXI4\/main\/ChannelWithData.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/AXI4\/main\/ChannelWithData.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/AXI4\/main\/ChannelWithData.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/AXI4\/main\/ChannelWithData.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/AXI4\/main\/ChannelWithData.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/AXI4\/main\/ChannelWithData.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/AXI4\/main\/ChannelWithData.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/ChannelWithData.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/ChannelWithData.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/AXI4\/main\/ChannelWithData.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/AXI4\/main\/ChannelWithData.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/AXI4\/main\/ChannelWithData.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/AXI4\/main\/ChannelWithData.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/AXI4\/main\/ChannelWithData.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/ChannelWithData.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/ChannelWithData.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/AXI4\/main\/ChannelWithData.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/ChannelWithData.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/ChannelWithData.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/AXI4\/main\/ChannelWithData.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/AXI4\/main\/ChannelWithData.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/AXI4\/main\/ChannelWithData.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/AXI4\/main\/ChannelWithData.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/AXI4\/main\/ChannelWithData.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): ChannelWithData.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/AXI4\/main\/ChannelWithData.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/AXI4\/main\/ChannelWithData.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/AXI4\/main\/ChannelWithData.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/AXI4\/main\/ChannelWithData.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/AXI4\/main\/ChannelWithData.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/AXI4\/main\/ChannelWithData.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/AXI4\/main\/ChannelWithData.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/AXI4\/main\/ChannelWithData.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/AXI4\/main\/ChannelWithData.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/AXI4\/main\/ChannelWithData.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ChannelWithData.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/AXI4\/main\/ChannelWithData.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/AXI4\/main\/ChannelWithData.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/AXI4\/main\/ChannelWithData.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/ChannelWithData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/ChannelWithData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/ChannelWithData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/ChannelWithData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/ChannelWithData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/ChannelWithData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/ChannelWithData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/ChannelWithData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/ChannelWithData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/ChannelWithData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/ChannelWithData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/ChannelWithData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/ChannelWithData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/ChannelWithData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/ChannelWithData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/ChannelWithData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/main\/ChannelWithData.html", "kind" : "class"}, {"name" : "modules.AXI4.main.ChannelWithShakeHands", "shortDescription" : "Basic class of AXI Channel: Write \/ Write data \/ Write response \/ Read Address \/ Read Data shanke hands contains.", "members_class" : [{"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.AXI4.main.ChannelWithShakeHands.clearOutput", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: ChannelWithShakeHands[S, D2]): Unit", "member" : "modules.AXI4.main.ChannelWithShakeHands.<=>", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#<=>[S<:modules.AXI4.main.ConfigTypes.AXI4ConfigWithDirection,D2<:modules.ChiBus.main.Channel](that:modules.AXI4.main.ChannelWithShakeHands[S,D2]):Unit", "kind" : "def"}, {"label" : "shakeHands", "tail" : ": ShakeHands[T]", "member" : "modules.AXI4.main.ChannelWithShakeHands.shakeHands", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#shakeHands:modules.ChiBus.main.ShakeHands[T]", "kind" : "val"}, {"label" : "axi", "tail" : ": D", "member" : "modules.AXI4.main.ChannelWithShakeHands.axi", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#axi:D", "kind" : "val"}, {"label" : "isOutput", "tail" : "(): Boolean", "member" : "modules.AXI4.main.ChannelWithShakeHands.isOutput", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#isOutput:Boolean", "kind" : "def"}, {"label" : "isAxiOutput", "tail" : "(setInput: () => D2, setOutput: () => D2): D2", "member" : "modules.AXI4.main.ChannelWithShakeHands.isAxiOutput", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#isAxiOutput[D2](setInput:()=>D2,setOutput:()=>D2):D2", "kind" : "def"}, {"member" : "modules.AXI4.main.ChannelWithShakeHands#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): ChannelWithShakeHands.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): ChannelWithShakeHands.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ChannelWithShakeHands.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/ChannelWithShakeHands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/main\/ChannelWithShakeHands.html", "kind" : "class"}, {"name" : "modules.AXI4.main.ConfigTypes", "shortDescription" : "", "object" : "modules\/AXI4\/main\/ConfigTypes$.html", "members_object" : [{"label" : "AXI4ConfigSlave", "tail" : "", "member" : "modules.AXI4.main.ConfigTypes.AXI4ConfigSlave", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#AXI4ConfigSlaveextendsConfigTypes.AXI4ConfigWithDirection", "kind" : "trait"}, {"label" : "AXI4ConfigMaster", "tail" : "", "member" : "modules.AXI4.main.ConfigTypes.AXI4ConfigMaster", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#AXI4ConfigMasterextendsConfigTypes.AXI4ConfigWithDirection", "kind" : "trait"}, {"label" : "AXI4ConfigWithDirection", "tail" : "", "member" : "modules.AXI4.main.ConfigTypes.AXI4ConfigWithDirection", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#AXI4ConfigWithDirectionextendsConfigTypes.AXI4ConfigwithBusTypes.DirectionType", "kind" : "trait"}, {"label" : "AXI4ConfigDefault", "tail" : "", "member" : "modules.AXI4.main.ConfigTypes.AXI4ConfigDefault", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#AXI4ConfigDefaultextendsConfigTypes.AXI4Config", "kind" : "class"}, {"label" : "AXI4Config", "tail" : "", "member" : "modules.AXI4.main.ConfigTypes.AXI4Config", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#AXI4ConfigextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/ConfigTypes$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/ConfigTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.AXI4.main.DataChannel", "shortDescription" : "Channel: Write Data \/ Read Data", "members_class" : [{"label" : "resp", "tail" : ": Option[UInt]", "member" : "modules.AXI4.main.DataChannel.resp", "link" : "modules\/AXI4\/main\/DataChannel.html#resp:Option[chisel3.UInt]", "kind" : "val"}, {"label" : "last", "tail" : ": Bool", "member" : "modules.AXI4.main.DataChannel.last", "link" : "modules\/AXI4\/main\/DataChannel.html#last:chisel3.Bool", "kind" : "val"}, {"label" : "strb", "tail" : ": Option[UInt]", "member" : "modules.AXI4.main.DataChannel.strb", "link" : "modules\/AXI4\/main\/DataChannel.html#strb:Option[chisel3.UInt]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[UInt]", "member" : "modules.AXI4.main.DataChannel.id", "link" : "modules\/AXI4\/main\/DataChannel.html#id:Option[chisel3.UInt]", "kind" : "val"}, {"member" : "modules.AXI4.main.DataChannel#<init>", "error" : "unsupported entity"}, {"label" : "<=>", "tail" : "(that: T2): Unit", "member" : "modules.AXI4.main.ChannelWithData.<=>", "link" : "modules\/AXI4\/main\/DataChannel.html#<=>[T2<:modules.ChiBus.main.Channel](that:T2):Unit", "kind" : "def"}, {"label" : "data", "tail" : ": UInt", "member" : "modules.AXI4.main.ChannelWithData.data", "link" : "modules\/AXI4\/main\/DataChannel.html#data:chisel3.UInt", "kind" : "val"}, {"label" : "getNamePrefix", "tail" : "(name: String)(ac: T, c: GlobalConfig): String", "member" : "modules.AXI4.main.AXIChannel.getNamePrefix", "link" : "modules\/AXI4\/main\/DataChannel.html#getNamePrefix[T<:modules.ChiBus.main.BusTypes.DirectionType](name:String)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):String", "kind" : "def"}, {"label" : "getIsOutputWithType", "tail" : "(x: => T2, masterOut: Boolean, description: String)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutputWithType", "link" : "modules\/AXI4\/main\/DataChannel.html#getIsOutputWithType[T2<:chisel3.Data,T3<:modules.ChiBus.main.BusTypes.DirectionType](x:=>T2,masterOut:Boolean,description:String)(implicitac:T3):T2", "kind" : "def"}, {"label" : "getIsOutput", "tail" : "(setOutput: => T2, setInput: => T2, isMasterOut: Boolean)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutput", "link" : "modules\/AXI4\/main\/DataChannel.html#getIsOutput[T2,T3<:modules.ChiBus.main.BusTypes.DirectionType](setOutput:=>T2,setInput:=>T2,isMasterOut:Boolean)(implicitac:T3):T2", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.Channel.clearOutput", "link" : "modules\/AXI4\/main\/DataChannel.html#clearOutput():Unit", "kind" : "def"}, {"label" : "parseNamePool", "tail" : "(ac: T, c: GlobalConfig): Unit", "member" : "modules.ChiBus.main.Channel.parseNamePool", "link" : "modules\/AXI4\/main\/DataChannel.html#parseNamePool[T<:modules.ChiBus.main.BusTypes.DirectionType](implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):Unit", "kind" : "def"}, {"label" : "addPorts", "tail" : "(ports: Seq[UInt]): Unit", "member" : "modules.ChiBus.main.Channel.addPorts", "link" : "modules\/AXI4\/main\/DataChannel.html#addPorts(ports:Seq[chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "addPort", "tail" : "(port: UInt, name: String): ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.addPort", "link" : "modules\/AXI4\/main\/DataChannel.html#addPort(port:chisel3.UInt,name:String):scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "def"}, {"label" : "portPool", "tail" : ": ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.portPool", "link" : "modules\/AXI4\/main\/DataChannel.html#portPool:scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "val"}, {"label" : "infixName", "tail" : ": String", "member" : "modules.ChiBus.main.Channel.infixName", "link" : "modules\/AXI4\/main\/DataChannel.html#infixName:String", "kind" : "val"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/AXI4\/main\/DataChannel.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/AXI4\/main\/DataChannel.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): DataChannel.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/AXI4\/main\/DataChannel.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/AXI4\/main\/DataChannel.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/AXI4\/main\/DataChannel.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/AXI4\/main\/DataChannel.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/AXI4\/main\/DataChannel.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/AXI4\/main\/DataChannel.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/AXI4\/main\/DataChannel.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/AXI4\/main\/DataChannel.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/AXI4\/main\/DataChannel.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/AXI4\/main\/DataChannel.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/DataChannel.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/DataChannel.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/AXI4\/main\/DataChannel.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/AXI4\/main\/DataChannel.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/AXI4\/main\/DataChannel.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/AXI4\/main\/DataChannel.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/AXI4\/main\/DataChannel.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/DataChannel.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/DataChannel.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/AXI4\/main\/DataChannel.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/DataChannel.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/DataChannel.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/AXI4\/main\/DataChannel.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/AXI4\/main\/DataChannel.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/AXI4\/main\/DataChannel.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/AXI4\/main\/DataChannel.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/AXI4\/main\/DataChannel.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): DataChannel.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/AXI4\/main\/DataChannel.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/AXI4\/main\/DataChannel.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/AXI4\/main\/DataChannel.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/AXI4\/main\/DataChannel.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/AXI4\/main\/DataChannel.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/AXI4\/main\/DataChannel.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/AXI4\/main\/DataChannel.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/AXI4\/main\/DataChannel.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/AXI4\/main\/DataChannel.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/AXI4\/main\/DataChannel.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): DataChannel.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/AXI4\/main\/DataChannel.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/AXI4\/main\/DataChannel.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/AXI4\/main\/DataChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/DataChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/DataChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/DataChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/DataChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/DataChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/DataChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/DataChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/DataChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/DataChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/DataChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/DataChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/DataChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/DataChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/DataChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/DataChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/DataChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/main\/DataChannel.html", "kind" : "class"}, {"name" : "modules.AXI4.main.DataTypes", "shortDescription" : "Option Types.", "object" : "modules\/AXI4\/main\/DataTypes$.html", "members_object" : [{"label" : "RespType", "tail" : "", "member" : "modules.AXI4.main.DataTypes.RespType", "link" : "modules\/AXI4\/main\/DataTypes$.html#RespType", "kind" : "object"}, {"label" : "BurstType", "tail" : "", "member" : "modules.AXI4.main.DataTypes.BurstType", "link" : "modules\/AXI4\/main\/DataTypes$.html#BurstType", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/DataTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/DataTypes$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/DataTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/DataTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/DataTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/DataTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/DataTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/DataTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/DataTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/DataTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/DataTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/DataTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/AXI4\/main\/DataTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/DataTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/AXI4\/main\/DataTypes$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/AXI4\/main\/DataTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/DataTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/DataTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/DataTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.AXI4.main.InterfaceAXI4", "shortDescription" : "Basic class for AXI Master interface.", "members_class" : [{"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.AXI4.main.InterfaceAXI4.clearOutput", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#clearOutput():Unit", "kind" : "def"}, {"label" : "<=>", "tail" : "(that: InterfaceAXI4[S]): InterfaceAXI4[S]", "member" : "modules.AXI4.main.InterfaceAXI4.<=>", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#<=>[S<:modules.AXI4.main.ConfigTypes.AXI4ConfigWithDirection](that:modules.AXI4.main.InterfaceAXI4[S]):modules.AXI4.main.InterfaceAXI4[S]", "kind" : "def"}, {"label" : "writeResp", "tail" : ": ChannelWithShakeHands[T, RespChannel[T]]", "member" : "modules.AXI4.main.InterfaceAXI4.writeResp", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#writeResp:modules.AXI4.main.ChannelWithShakeHands[T,modules.AXI4.main.RespChannel[T]]", "kind" : "val"}, {"label" : "writeData", "tail" : ": ChannelWithShakeHands[T, DataChannel[T]]", "member" : "modules.AXI4.main.InterfaceAXI4.writeData", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#writeData:modules.AXI4.main.ChannelWithShakeHands[T,modules.AXI4.main.DataChannel[T]]", "kind" : "val"}, {"label" : "writeAddress", "tail" : ": ChannelWithShakeHands[T, AddressChannel[T]]", "member" : "modules.AXI4.main.InterfaceAXI4.writeAddress", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#writeAddress:modules.AXI4.main.ChannelWithShakeHands[T,modules.AXI4.main.AddressChannel[T]]", "kind" : "val"}, {"label" : "readData", "tail" : ": ChannelWithShakeHands[T, DataChannel[T]]", "member" : "modules.AXI4.main.InterfaceAXI4.readData", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#readData:modules.AXI4.main.ChannelWithShakeHands[T,modules.AXI4.main.DataChannel[T]]", "kind" : "val"}, {"label" : "readAddress", "tail" : ": ChannelWithShakeHands[T, AddressChannel[T]]", "member" : "modules.AXI4.main.InterfaceAXI4.readAddress", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#readAddress:modules.AXI4.main.ChannelWithShakeHands[T,modules.AXI4.main.AddressChannel[T]]", "kind" : "val"}, {"label" : "ac2", "tail" : ": T", "member" : "modules.AXI4.main.InterfaceAXI4.ac2", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#ac2:T", "kind" : "implicit val"}, {"member" : "modules.AXI4.main.InterfaceAXI4#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): InterfaceAXI4.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): InterfaceAXI4.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): InterfaceAXI4.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/InterfaceAXI4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/main\/InterfaceAXI4.html", "kind" : "class"}, {"name" : "modules.AXI4.main.RespChannel", "shortDescription" : "Channel: Write Resp", "members_class" : [{"label" : "<=>", "tail" : "(that: T2): Unit", "member" : "modules.AXI4.main.RespChannel.<=>", "link" : "modules\/AXI4\/main\/RespChannel.html#<=>[T2<:modules.ChiBus.main.Channel](that:T2):Unit", "kind" : "def"}, {"label" : "resp", "tail" : ": UInt", "member" : "modules.AXI4.main.RespChannel.resp", "link" : "modules\/AXI4\/main\/RespChannel.html#resp:chisel3.UInt", "kind" : "val"}, {"label" : "id", "tail" : ": Option[UInt]", "member" : "modules.AXI4.main.RespChannel.id", "link" : "modules\/AXI4\/main\/RespChannel.html#id:Option[chisel3.UInt]", "kind" : "val"}, {"member" : "modules.AXI4.main.RespChannel#<init>", "error" : "unsupported entity"}, {"label" : "getNamePrefix", "tail" : "(name: String)(ac: T, c: GlobalConfig): String", "member" : "modules.AXI4.main.AXIChannel.getNamePrefix", "link" : "modules\/AXI4\/main\/RespChannel.html#getNamePrefix[T<:modules.ChiBus.main.BusTypes.DirectionType](name:String)(implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):String", "kind" : "def"}, {"label" : "getIsOutputWithType", "tail" : "(x: => T2, masterOut: Boolean, description: String)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutputWithType", "link" : "modules\/AXI4\/main\/RespChannel.html#getIsOutputWithType[T2<:chisel3.Data,T3<:modules.ChiBus.main.BusTypes.DirectionType](x:=>T2,masterOut:Boolean,description:String)(implicitac:T3):T2", "kind" : "def"}, {"label" : "getIsOutput", "tail" : "(setOutput: => T2, setInput: => T2, isMasterOut: Boolean)(ac: T3): T2", "member" : "modules.ChiBus.main.Channel.getIsOutput", "link" : "modules\/AXI4\/main\/RespChannel.html#getIsOutput[T2,T3<:modules.ChiBus.main.BusTypes.DirectionType](setOutput:=>T2,setInput:=>T2,isMasterOut:Boolean)(implicitac:T3):T2", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): Unit", "member" : "modules.ChiBus.main.Channel.clearOutput", "link" : "modules\/AXI4\/main\/RespChannel.html#clearOutput():Unit", "kind" : "def"}, {"label" : "parseNamePool", "tail" : "(ac: T, c: GlobalConfig): Unit", "member" : "modules.ChiBus.main.Channel.parseNamePool", "link" : "modules\/AXI4\/main\/RespChannel.html#parseNamePool[T<:modules.ChiBus.main.BusTypes.DirectionType](implicitac:T,implicitc:utils.GlobalConfigLoader.GlobalConfig):Unit", "kind" : "def"}, {"label" : "addPorts", "tail" : "(ports: Seq[UInt]): Unit", "member" : "modules.ChiBus.main.Channel.addPorts", "link" : "modules\/AXI4\/main\/RespChannel.html#addPorts(ports:Seq[chisel3.UInt]):Unit", "kind" : "def"}, {"label" : "addPort", "tail" : "(port: UInt, name: String): ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.addPort", "link" : "modules\/AXI4\/main\/RespChannel.html#addPort(port:chisel3.UInt,name:String):scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "def"}, {"label" : "portPool", "tail" : ": ArrayBuffer[(() => UInt, String)]", "member" : "modules.ChiBus.main.Channel.portPool", "link" : "modules\/AXI4\/main\/RespChannel.html#portPool:scala.collection.mutable.ArrayBuffer[(()=>chisel3.UInt,String)]", "kind" : "val"}, {"label" : "infixName", "tail" : ": String", "member" : "modules.ChiBus.main.Channel.infixName", "link" : "modules\/AXI4\/main\/RespChannel.html#infixName:String", "kind" : "val"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/AXI4\/main\/RespChannel.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/AXI4\/main\/RespChannel.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): RespChannel.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/AXI4\/main\/RespChannel.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/AXI4\/main\/RespChannel.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/AXI4\/main\/RespChannel.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/AXI4\/main\/RespChannel.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/AXI4\/main\/RespChannel.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/AXI4\/main\/RespChannel.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/AXI4\/main\/RespChannel.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/AXI4\/main\/RespChannel.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/AXI4\/main\/RespChannel.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/AXI4\/main\/RespChannel.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/RespChannel.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/AXI4\/main\/RespChannel.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/AXI4\/main\/RespChannel.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/AXI4\/main\/RespChannel.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/AXI4\/main\/RespChannel.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/AXI4\/main\/RespChannel.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/AXI4\/main\/RespChannel.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/RespChannel.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/AXI4\/main\/RespChannel.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/AXI4\/main\/RespChannel.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/RespChannel.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/AXI4\/main\/RespChannel.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/AXI4\/main\/RespChannel.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/AXI4\/main\/RespChannel.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/AXI4\/main\/RespChannel.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/AXI4\/main\/RespChannel.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/AXI4\/main\/RespChannel.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): RespChannel.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/AXI4\/main\/RespChannel.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/AXI4\/main\/RespChannel.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/AXI4\/main\/RespChannel.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/AXI4\/main\/RespChannel.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/AXI4\/main\/RespChannel.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/AXI4\/main\/RespChannel.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/AXI4\/main\/RespChannel.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/AXI4\/main\/RespChannel.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/AXI4\/main\/RespChannel.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/AXI4\/main\/RespChannel.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): RespChannel.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/AXI4\/main\/RespChannel.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/AXI4\/main\/RespChannel.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/AXI4\/main\/RespChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/AXI4\/main\/RespChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/AXI4\/main\/RespChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/AXI4\/main\/RespChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/AXI4\/main\/RespChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/AXI4\/main\/RespChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/AXI4\/main\/RespChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/AXI4\/main\/RespChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/RespChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/RespChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/AXI4\/main\/RespChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/AXI4\/main\/RespChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/AXI4\/main\/RespChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/AXI4\/main\/RespChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/AXI4\/main\/RespChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/AXI4\/main\/RespChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/AXI4\/main\/RespChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/AXI4\/main\/RespChannel.html", "kind" : "class"}], "modules.hhvm.main.StageRegs" : [{"name" : "modules.hhvm.main.StageRegs.EXRegs", "shortDescription" : "", "object" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html", "members_class" : [{"label" : "contents", "tail" : ": Contents", "member" : "modules.hhvm.main.StageRegs.EXRegs.contents", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#contents:modules.hhvm.main.StageRegs.EXRegs.Contents", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.StageRegs.EXRegs.io", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#io:chisel3.Bundle{valin:modules.hhvm.main.StageRegs.EXRegs.Contents;valout:modules.hhvm.main.StageRegs.EXRegs.Contents}", "kind" : "val"}, {"member" : "modules.hhvm.main.StageRegs.EXRegs#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): EXRegs.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Contents", "tail" : "", "member" : "modules.hhvm.main.StageRegs.EXRegs.Contents", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#ContentsextendsBundle", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/EXRegs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/StageRegs\/EXRegs.html", "kind" : "class"}, {"name" : "modules.hhvm.main.StageRegs.MEMRegs", "shortDescription" : "", "object" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html", "members_class" : [{"label" : "contents", "tail" : ": Contents", "member" : "modules.hhvm.main.StageRegs.MEMRegs.contents", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#contents:modules.hhvm.main.StageRegs.MEMRegs.Contents", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.StageRegs.MEMRegs.io", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#io:chisel3.Bundle{valin:modules.hhvm.main.StageRegs.MEMRegs.Contents;valout:modules.hhvm.main.StageRegs.MEMRegs.Contents}", "kind" : "val"}, {"member" : "modules.hhvm.main.StageRegs.MEMRegs#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): MEMRegs.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Contents", "tail" : "", "member" : "modules.hhvm.main.StageRegs.MEMRegs.Contents", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#ContentsextendsBundle", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/MEMRegs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/StageRegs\/MEMRegs.html", "kind" : "class"}, {"name" : "modules.hhvm.main.StageRegs.WBRegs", "shortDescription" : "", "object" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html", "members_class" : [{"label" : "contents", "tail" : ": Contents", "member" : "modules.hhvm.main.StageRegs.WBRegs.contents", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#contents:modules.hhvm.main.StageRegs.WBRegs.Contents", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.StageRegs.WBRegs.io", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#io:chisel3.Bundle{valin:modules.hhvm.main.StageRegs.WBRegs.Contents;valout:modules.hhvm.main.StageRegs.WBRegs.Contents}", "kind" : "val"}, {"member" : "modules.hhvm.main.StageRegs.WBRegs#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): WBRegs.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Contents", "tail" : "", "member" : "modules.hhvm.main.StageRegs.WBRegs.Contents", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#ContentsextendsBundle", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/StageRegs\/WBRegs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/StageRegs\/WBRegs.html", "kind" : "class"}], "modules.MemCtrl.main" : [{"name" : "modules.MemCtrl.main.MemCtrl", "shortDescription" : "", "members_class" : [{"label" : "cacheLineDataReg", "tail" : ": Vec[UInt]", "member" : "modules.MemCtrl.main.MemCtrl.cacheLineDataReg", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#cacheLineDataReg:chisel3.Vec[chisel3.UInt]", "kind" : "val"}, {"label" : "burstCount", "tail" : ": UInt", "member" : "modules.MemCtrl.main.MemCtrl.burstCount", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#burstCount:chisel3.UInt", "kind" : "val"}, {"label" : "stateMatrix", "tail" : ": Seq[(UInt, UInt)]", "member" : "modules.MemCtrl.main.MemCtrl.stateMatrix", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#stateMatrix:Seq[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "addrInfo", "tail" : ": CacheAddrWire", "member" : "modules.MemCtrl.main.MemCtrl.addrInfo", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#addrInfo:modules.Cache.main.CacheAddrWire", "kind" : "val"}, {"label" : "readAddressWire", "tail" : ": AddressChannel[AXI4ConfigMaster]", "member" : "modules.MemCtrl.main.MemCtrl.readAddressWire", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#readAddressWire:modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]", "kind" : "val"}, {"label" : "ac", "tail" : ": AXI4ConfigMaster", "member" : "modules.MemCtrl.main.MemCtrl.ac", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#ac:modules.AXI4.main.ConfigTypes.AXI4ConfigMaster", "kind" : "implicit val"}, {"label" : "axiMaster", "tail" : ": AXI4Master", "member" : "modules.MemCtrl.main.MemCtrl.axiMaster", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#axiMaster:modules.AXI4.main.AXI4Master", "kind" : "val"}, {"label" : "state", "tail" : ": UInt", "member" : "modules.MemCtrl.main.MemCtrl.state", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#state:chisel3.UInt", "kind" : "val"}, {"label" : "nextState", "tail" : ": UInt", "member" : "modules.MemCtrl.main.MemCtrl.nextState", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#nextState:chisel3.UInt", "kind" : "val"}, {"label" : "readingState", "tail" : ": UInt", "member" : "modules.MemCtrl.main.MemCtrl.readingState", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#readingState:chisel3.UInt", "kind" : "val"}, {"label" : "idleState", "tail" : ": UInt", "member" : "modules.MemCtrl.main.MemCtrl.idleState", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#idleState:chisel3.UInt", "kind" : "val"}, {"label" : "states", "tail" : ": List[UInt]", "member" : "modules.MemCtrl.main.MemCtrl.states", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#states:List[chisel3.UInt]", "kind" : "val"}, {"label" : "getChiBusSlavePort", "tail" : "(): ChiBusSlave[CacheChannel]", "member" : "modules.MemCtrl.main.MemCtrl.getChiBusSlavePort", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#getChiBusSlavePort:modules.ChiBus.main.ChiBusSlave[modules.Cache.main.CacheChannel]", "kind" : "def"}, {"label" : "bus", "tail" : ": ChiBusSlave[CacheChannel]", "member" : "modules.MemCtrl.main.MemCtrl.bus", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#bus:modules.ChiBus.main.ChiBusSlave[modules.Cache.main.CacheChannel]", "kind" : "val"}, {"member" : "modules.MemCtrl.main.MemCtrl#<init>", "error" : "unsupported entity"}, {"label" : "connectMaster", "tail" : "(that: T2): Unit", "member" : "modules.ChiBus.main.WithChiBusSlavePort.connectMaster", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#connectMaster[T2<:modules.ChiBus.main.WithChiBusMasterPort[T]](that:T2):Unit", "kind" : "def"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): MemCtrl.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/MemCtrl\/main\/MemCtrl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/MemCtrl\/main\/MemCtrl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/MemCtrl\/main\/MemCtrl.html", "kind" : "class"}], "modules.L2Cache" : [], "modules.hhvm.main.Misc" : [{"name" : "modules.hhvm.main.Misc.AluOp", "shortDescription" : "", "object" : "modules\/hhvm\/main\/Misc\/AluOp$.html", "members_object" : [{"label" : "INVAILD", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.INVAILD", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#INVAILD:chisel3.UInt", "kind" : "val"}, {"label" : "NOR", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.NOR", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#NOR:chisel3.UInt", "kind" : "val"}, {"label" : "COPY_B", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.COPY_B", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#COPY_B:chisel3.UInt", "kind" : "val"}, {"label" : "COPY_A", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.COPY_A", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#COPY_A:chisel3.UInt", "kind" : "val"}, {"label" : "SRA", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.SRA", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#SRA:chisel3.UInt", "kind" : "val"}, {"label" : "SRL", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.SRL", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#SRL:chisel3.UInt", "kind" : "val"}, {"label" : "SLTU", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.SLTU", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#SLTU:chisel3.UInt", "kind" : "val"}, {"label" : "SLL", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.SLL", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#SLL:chisel3.UInt", "kind" : "val"}, {"label" : "SLT", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.SLT", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#SLT:chisel3.UInt", "kind" : "val"}, {"label" : "XOR", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.XOR", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#XOR:chisel3.UInt", "kind" : "val"}, {"label" : "OR", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.OR", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#OR:chisel3.UInt", "kind" : "val"}, {"label" : "AND", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.AND", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#AND:chisel3.UInt", "kind" : "val"}, {"label" : "SUB", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.SUB", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#SUB:chisel3.UInt", "kind" : "val"}, {"label" : "ADD", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.AluOp.ADD", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#ADD:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/AluOp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.hhvm.main.Misc.branchType", "shortDescription" : "", "object" : "modules\/hhvm\/main\/Misc\/branchType$.html", "members_object" : [{"label" : "jump", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.branchType.jump", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#jump:chisel3.UInt", "kind" : "val"}, {"label" : "ltu", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.branchType.ltu", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#ltu:chisel3.UInt", "kind" : "val"}, {"label" : "geu", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.branchType.geu", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#geu:chisel3.UInt", "kind" : "val"}, {"label" : "lt", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.branchType.lt", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#lt:chisel3.UInt", "kind" : "val"}, {"label" : "ge", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.branchType.ge", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#ge:chisel3.UInt", "kind" : "val"}, {"label" : "ne", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.branchType.ne", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#ne:chisel3.UInt", "kind" : "val"}, {"label" : "eq", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.branchType.eq", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#eq:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/branchType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.hhvm.main.Misc.ControlSignals", "shortDescription" : "", "object" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html", "members_class" : [{"label" : "jump", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.ControlSignals.jump", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#jump:chisel3.Bool", "kind" : "val"}, {"label" : "branch", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.ControlSignals.branch", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#branch:chisel3.Bool", "kind" : "val"}, {"label" : "memOp", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.ControlSignals.memOp", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#memOp:chisel3.Bool", "kind" : "val"}, {"label" : "regWrite", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.ControlSignals.regWrite", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#regWrite:chisel3.Bool", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.ControlSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): ControlSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): ControlSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ControlSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "nop", "tail" : "(): ControlSignals", "member" : "modules.hhvm.main.Misc.ControlSignals.nop", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#nop:modules.hhvm.main.Misc.ControlSignals", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/ControlSignals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/ControlSignals.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.CoreTestHarness", "shortDescription" : "", "members_class" : [{"label" : "memUpdates", "tail" : ": MemUpdates", "member" : "modules.hhvm.main.Misc.CoreTestHarness.memUpdates", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#memUpdates:modules.hhvm.main.Misc.MemUpdates", "kind" : "val"}, {"label" : "regUpdates", "tail" : ": RegisterUpdates", "member" : "modules.hhvm.main.Misc.CoreTestHarness.regUpdates", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#regUpdates:modules.hhvm.main.Misc.RegisterUpdates", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.CoreTestHarness#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): CoreTestHarness.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): CoreTestHarness.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CoreTestHarness.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/CoreTestHarness.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.Decoder", "shortDescription" : "", "members_class" : [{"label" : "decodedControlSignals", "tail" : ": IndexedSeq[UInt]", "member" : "modules.hhvm.main.Misc.Decoder.decodedControlSignals", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#decodedControlSignals:scala.collection.IndexedSeq[chisel3.UInt]", "kind" : "val"}, {"label" : "micro_op_length", "tail" : ": List[Int]", "member" : "modules.hhvm.main.Misc.Decoder.micro_op_length", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#micro_op_length:List[Int]", "kind" : "val"}, {"label" : "invaild", "tail" : ": List[UInt]", "member" : "modules.hhvm.main.Misc.Decoder.invaild", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#invaild:List[chisel3.UInt]", "kind" : "val"}, {"label" : "opcodeMap", "tail" : ": List[(BitPat, List[UInt])]", "member" : "modules.hhvm.main.Misc.Decoder.opcodeMap", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#opcodeMap:List[(chisel3.util.BitPat,List[chisel3.UInt])]", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.hhvm.main.Misc.Decoder.io", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#io:chisel3.Bundle{valins:modules.hhvm.main.Misc.Instruction;valout:chisel3.Bundle{valctrl_signal:modules.hhvm.main.Misc.ControlSignals;valimm_type:chisel3.UInt;valop_1_type:chisel3.UInt;valop_2_type:chisel3.UInt;valalu_op:chisel3.UInt;valbranch_type:chisel3.UInt}}", "kind" : "val"}, {"label" : "vaildBits", "tail" : "(n: BigInt): BigInt", "member" : "modules.hhvm.main.Misc.Decoder.vaildBits", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#vaildBits(n:BigInt):BigInt", "kind" : "def"}, {"member" : "modules.hhvm.main.Misc.Decoder#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Decoder.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Decoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/Decoder.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.DMEMsetupSignals", "shortDescription" : "", "members_class" : [{"label" : "dataAddress", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.DMEMsetupSignals.dataAddress", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#dataAddress:chisel3.UInt", "kind" : "val"}, {"label" : "dataIn", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.DMEMsetupSignals.dataIn", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#dataIn:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.DMEMsetupSignals.writeEnable", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "setup", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.DMEMsetupSignals.setup", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#setup:chisel3.Bool", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.DMEMsetupSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): DMEMsetupSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): DMEMsetupSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): DMEMsetupSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/DMEMsetupSignals.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.DonotCare", "shortDescription" : "", "object" : "modules\/hhvm\/main\/Misc\/DonotCare$.html", "members_object" : [{"label" : "DC", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.DonotCare.DC", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#DC:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/DonotCare$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.hhvm.main.Misc.IMEMsetupSignals", "shortDescription" : "", "members_class" : [{"label" : "instruction", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.IMEMsetupSignals.instruction", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#instruction:chisel3.UInt", "kind" : "val"}, {"label" : "address", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.IMEMsetupSignals.address", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#address:chisel3.UInt", "kind" : "val"}, {"label" : "setup", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.IMEMsetupSignals.setup", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#setup:chisel3.Bool", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.IMEMsetupSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): IMEMsetupSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): IMEMsetupSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): IMEMsetupSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/IMEMsetupSignals.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.ImmFormat", "shortDescription" : "Used in the decoder", "object" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html", "members_object" : [{"label" : "SI20", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.ImmFormat.SI20", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#SI20:chisel3.UInt", "kind" : "val"}, {"label" : "OFFS", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.ImmFormat.OFFS", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#OFFS:chisel3.UInt", "kind" : "val"}, {"label" : "UI12", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.ImmFormat.UI12", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#UI12:chisel3.UInt", "kind" : "val"}, {"label" : "SI12", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.ImmFormat.SI12", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#SI12:chisel3.UInt", "kind" : "val"}, {"label" : "UI5", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.ImmFormat.UI5", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#UI5:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/ImmFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.hhvm.main.Misc.Instruction", "shortDescription" : "", "object" : "modules\/hhvm\/main\/Misc\/Instruction$.html", "members_class" : [{"label" : "offs26", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.offs26", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#offs26:chisel3.UInt", "kind" : "def"}, {"label" : "offs16", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.offs16", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#offs16:chisel3.UInt", "kind" : "def"}, {"label" : "si20", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.si20", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#si20:chisel3.UInt", "kind" : "def"}, {"label" : "ui12", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.ui12", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#ui12:chisel3.UInt", "kind" : "def"}, {"label" : "si12", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.si12", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#si12:chisel3.UInt", "kind" : "def"}, {"label" : "ui5", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.ui5", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#ui5:chisel3.UInt", "kind" : "def"}, {"label" : "ra", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.ra", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#ra:chisel3.UInt", "kind" : "def"}, {"label" : "rk", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.rk", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#rk:chisel3.UInt", "kind" : "def"}, {"label" : "rj", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.rj", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#rj:chisel3.UInt", "kind" : "def"}, {"label" : "rd", "tail" : "(): UInt", "member" : "modules.hhvm.main.Misc.Instruction.rd", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#rd:chisel3.UInt", "kind" : "def"}, {"label" : "instruction", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.Instruction.instruction", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#instruction:chisel3.UInt", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.Instruction#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): Instruction.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): Instruction.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Instruction.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Instruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "NOP", "tail" : "(): Instruction", "member" : "modules.hhvm.main.Misc.Instruction.NOP", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#NOP:modules.hhvm.main.Misc.Instruction", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Instruction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/Instruction.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.lookup", "shortDescription" : "", "object" : "modules\/hhvm\/main\/Misc\/lookup$.html", "members_object" : [{"label" : "STW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.STW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#STW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "LDW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.LDW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#LDW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SRAIW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SRAIW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SRAIW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SRLIW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SRLIW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SRLIW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLLIW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SLLIW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SLLIW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SRAW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SRAW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SRAW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SRLW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SRLW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SRLW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLLW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SLLW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SLLW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "ORI", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.ORI", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#ORI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "ANDI", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.ANDI", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#ANDI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "XORI", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.XORI", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#XORI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "NOR", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.NOR", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#NOR:chisel3.util.BitPat", "kind" : "def"}, {"label" : "XOR", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.XOR", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#XOR:chisel3.util.BitPat", "kind" : "def"}, {"label" : "AND", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.AND", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#AND:chisel3.util.BitPat", "kind" : "def"}, {"label" : "OR", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.OR", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#OR:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SUBW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SUBW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SUBW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "ADDW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.ADDW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#ADDW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLTUI", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SLTUI", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SLTUI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLTI", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SLTI", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SLTI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLTU", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SLTU", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SLTU:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLT", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.SLT", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#SLT:chisel3.util.BitPat", "kind" : "def"}, {"label" : "ADDIW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.ADDIW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#ADDIW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "PCADDU12I", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.PCADDU12I", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#PCADDU12I:chisel3.util.BitPat", "kind" : "def"}, {"label" : "LU12IW", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.LU12IW", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#LU12IW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BL", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.BL", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#BL:chisel3.util.BitPat", "kind" : "def"}, {"label" : "B", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.B", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#B:chisel3.util.BitPat", "kind" : "def"}, {"label" : "JIRL", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.JIRL", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#JIRL:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BGEU", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.BGEU", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#BGEU:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BLTU", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.BLTU", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#BLTU:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BGE", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.BGE", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#BGE:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BLT", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.BLT", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#BLT:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BNE", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.BNE", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#BNE:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BEQ", "tail" : "(): BitPat", "member" : "modules.hhvm.main.Misc.lookup.BEQ", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#BEQ:chisel3.util.BitPat", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/lookup$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.hhvm.main.Misc.MemUpdates", "shortDescription" : "", "members_class" : [{"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.MemUpdates.writeAddress", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "writeData", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.MemUpdates.writeData", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.MemUpdates.writeEnable", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.MemUpdates#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): MemUpdates.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): MemUpdates.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): MemUpdates.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/MemUpdates.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/MemUpdates.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.Op1Select", "shortDescription" : "these take the role of the alu source signal.", "object" : "modules\/hhvm\/main\/Misc\/Op1Select$.html", "members_object" : [{"label" : "PC", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.Op1Select.PC", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#PC:chisel3.UInt", "kind" : "val"}, {"label" : "RJ", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.Op1Select.RJ", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#RJ:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Op1Select$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.hhvm.main.Misc.Op2Select", "shortDescription" : "", "object" : "modules\/hhvm\/main\/Misc\/Op2Select$.html", "members_object" : [{"label" : "N4", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.Op2Select.N4", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#N4:chisel3.UInt", "kind" : "val"}, {"label" : "IMM", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.Op2Select.IMM", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#IMM:chisel3.UInt", "kind" : "val"}, {"label" : "RK", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.Op2Select.RK", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#RK:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/Op2Select$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.hhvm.main.Misc.RegisterSetupSignals", "shortDescription" : "", "members_class" : [{"label" : "writeData", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.RegisterSetupSignals.writeData", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.RegisterSetupSignals.writeAddress", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.RegisterSetupSignals.writeEnable", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "readAddress", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.RegisterSetupSignals.readAddress", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#readAddress:chisel3.UInt", "kind" : "val"}, {"label" : "setup", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.RegisterSetupSignals.setup", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#setup:chisel3.Bool", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.RegisterSetupSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): RegisterSetupSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): RegisterSetupSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): RegisterSetupSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/RegisterSetupSignals.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.RegisterUpdates", "shortDescription" : "", "members_class" : [{"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.RegisterUpdates.writeAddress", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "writeData", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.RegisterUpdates.writeData", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.RegisterUpdates.writeEnable", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.RegisterUpdates#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): RegisterUpdates.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): RegisterUpdates.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): RegisterUpdates.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/RegisterUpdates.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.SetupSignals", "shortDescription" : "Don't touch these", "members_class" : [{"label" : "registerSignals", "tail" : ": RegisterSetupSignals", "member" : "modules.hhvm.main.Misc.SetupSignals.registerSignals", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#registerSignals:modules.hhvm.main.Misc.RegisterSetupSignals", "kind" : "val"}, {"label" : "DMEMsignals", "tail" : ": DMEMsetupSignals", "member" : "modules.hhvm.main.Misc.SetupSignals.DMEMsignals", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#DMEMsignals:modules.hhvm.main.Misc.DMEMsetupSignals", "kind" : "val"}, {"label" : "IMEMsignals", "tail" : ": IMEMsetupSignals", "member" : "modules.hhvm.main.Misc.SetupSignals.IMEMsignals", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#IMEMsignals:modules.hhvm.main.Misc.IMEMsetupSignals", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.SetupSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): SetupSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): SetupSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): SetupSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/SetupSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/SetupSignals.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.TestReadouts", "shortDescription" : "", "members_class" : [{"label" : "DMEMread", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.TestReadouts.DMEMread", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#DMEMread:chisel3.UInt", "kind" : "val"}, {"label" : "registerRead", "tail" : ": UInt", "member" : "modules.hhvm.main.Misc.TestReadouts.registerRead", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#registerRead:chisel3.UInt", "kind" : "val"}, {"member" : "modules.hhvm.main.Misc.TestReadouts#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): TestReadouts.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): TestReadouts.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): TestReadouts.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/TestReadouts.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/hhvm\/main\/Misc\/TestReadouts.html", "kind" : "class"}, {"name" : "modules.hhvm.main.Misc.YN", "shortDescription" : "", "object" : "modules\/hhvm\/main\/Misc\/YN$.html", "members_object" : [{"label" : "Y", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.YN.Y", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#Y:chisel3.Bool", "kind" : "val"}, {"label" : "N", "tail" : ": Bool", "member" : "modules.hhvm.main.Misc.YN.N", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#N:chisel3.Bool", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/hhvm\/main\/Misc\/YN$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/hhvm\/main\/Misc\/YN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "modules.Core.main" : [{"name" : "modules.Core.main.ALUOps", "shortDescription" : "", "object" : "modules\/Core\/main\/ALUOps$.html", "members_object" : [{"label" : "DC", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.DC", "link" : "modules\/Core\/main\/ALUOps$.html#DC:chisel3.UInt", "kind" : "val"}, {"label" : "COPY_B", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.COPY_B", "link" : "modules\/Core\/main\/ALUOps$.html#COPY_B:chisel3.UInt", "kind" : "val"}, {"label" : "COPY_A", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.COPY_A", "link" : "modules\/Core\/main\/ALUOps$.html#COPY_A:chisel3.UInt", "kind" : "val"}, {"label" : "SRA", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.SRA", "link" : "modules\/Core\/main\/ALUOps$.html#SRA:chisel3.UInt", "kind" : "val"}, {"label" : "SRL", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.SRL", "link" : "modules\/Core\/main\/ALUOps$.html#SRL:chisel3.UInt", "kind" : "val"}, {"label" : "SLTU", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.SLTU", "link" : "modules\/Core\/main\/ALUOps$.html#SLTU:chisel3.UInt", "kind" : "val"}, {"label" : "SLL", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.SLL", "link" : "modules\/Core\/main\/ALUOps$.html#SLL:chisel3.UInt", "kind" : "val"}, {"label" : "SLT", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.SLT", "link" : "modules\/Core\/main\/ALUOps$.html#SLT:chisel3.UInt", "kind" : "val"}, {"label" : "XOR", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.XOR", "link" : "modules\/Core\/main\/ALUOps$.html#XOR:chisel3.UInt", "kind" : "val"}, {"label" : "OR", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.OR", "link" : "modules\/Core\/main\/ALUOps$.html#OR:chisel3.UInt", "kind" : "val"}, {"label" : "AND", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.AND", "link" : "modules\/Core\/main\/ALUOps$.html#AND:chisel3.UInt", "kind" : "val"}, {"label" : "SUB", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.SUB", "link" : "modules\/Core\/main\/ALUOps$.html#SUB:chisel3.UInt", "kind" : "val"}, {"label" : "ADD", "tail" : ": UInt", "member" : "modules.Core.main.ALUOps.ADD", "link" : "modules\/Core\/main\/ALUOps$.html#ADD:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/ALUOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/ALUOps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/ALUOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/ALUOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/ALUOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/ALUOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/ALUOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ALUOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ALUOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ALUOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/ALUOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/ALUOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/ALUOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/ALUOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/ALUOps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/ALUOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/ALUOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/ALUOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/ALUOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.Core.main.BaseBarrier", "shortDescription" : "", "members_class" : [{"label" : "regs", "tail" : ": Bundle", "member" : "modules.Core.main.BaseBarrier.regs", "link" : "modules\/Core\/main\/BaseBarrier.html#regs:chisel3.Bundle", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.BaseBarrier.io", "link" : "modules\/Core\/main\/BaseBarrier.html#io:chisel3.Bundle{valin:chisel3.Bundle;valout:chisel3.Bundle}", "kind" : "val"}, {"member" : "modules.Core.main.BaseBarrier#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/BaseBarrier.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/BaseBarrier.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/BaseBarrier.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/BaseBarrier.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/BaseBarrier.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/BaseBarrier.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/BaseBarrier.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/BaseBarrier.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/BaseBarrier.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/BaseBarrier.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/BaseBarrier.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/BaseBarrier.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/BaseBarrier.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/BaseBarrier.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/BaseBarrier.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/BaseBarrier.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/BaseBarrier.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/BaseBarrier.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/BaseBarrier.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/BaseBarrier.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/BaseBarrier.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/BaseBarrier.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/BaseBarrier.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/BaseBarrier.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/BaseBarrier.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/BaseBarrier.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/BaseBarrier.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/BaseBarrier.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): BaseBarrier.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/BaseBarrier.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/BaseBarrier.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/BaseBarrier.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/BaseBarrier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/BaseBarrier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/BaseBarrier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/BaseBarrier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/BaseBarrier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/BaseBarrier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/BaseBarrier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/BaseBarrier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/BaseBarrier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/BaseBarrier.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/BaseBarrier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/BaseBarrier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/BaseBarrier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/BaseBarrier.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/BaseBarrier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/BaseBarrier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/BaseBarrier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/BaseBarrier.html", "kind" : "class"}, {"name" : "modules.Core.main.branchType", "shortDescription" : "", "object" : "modules\/Core\/main\/branchType$.html", "members_object" : [{"label" : "BTDC", "tail" : ": UInt", "member" : "modules.Core.main.branchType.BTDC", "link" : "modules\/Core\/main\/branchType$.html#BTDC:chisel3.UInt", "kind" : "val"}, {"label" : "jump", "tail" : ": UInt", "member" : "modules.Core.main.branchType.jump", "link" : "modules\/Core\/main\/branchType$.html#jump:chisel3.UInt", "kind" : "val"}, {"label" : "ltu", "tail" : ": UInt", "member" : "modules.Core.main.branchType.ltu", "link" : "modules\/Core\/main\/branchType$.html#ltu:chisel3.UInt", "kind" : "val"}, {"label" : "gteu", "tail" : ": UInt", "member" : "modules.Core.main.branchType.gteu", "link" : "modules\/Core\/main\/branchType$.html#gteu:chisel3.UInt", "kind" : "val"}, {"label" : "lt", "tail" : ": UInt", "member" : "modules.Core.main.branchType.lt", "link" : "modules\/Core\/main\/branchType$.html#lt:chisel3.UInt", "kind" : "val"}, {"label" : "gte", "tail" : ": UInt", "member" : "modules.Core.main.branchType.gte", "link" : "modules\/Core\/main\/branchType$.html#gte:chisel3.UInt", "kind" : "val"}, {"label" : "neq", "tail" : ": UInt", "member" : "modules.Core.main.branchType.neq", "link" : "modules\/Core\/main\/branchType$.html#neq:chisel3.UInt", "kind" : "val"}, {"label" : "beq", "tail" : ": UInt", "member" : "modules.Core.main.branchType.beq", "link" : "modules\/Core\/main\/branchType$.html#beq:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/branchType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/branchType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/branchType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/branchType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/branchType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/branchType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/branchType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/branchType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/branchType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/branchType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/branchType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/branchType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/branchType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/branchType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/branchType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/branchType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/branchType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/branchType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/branchType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.Core.main.ControlSignals", "shortDescription" : "", "object" : "modules\/Core\/main\/ControlSignals$.html", "members_class" : [{"label" : "jump", "tail" : ": Bool", "member" : "modules.Core.main.ControlSignals.jump", "link" : "modules\/Core\/main\/ControlSignals.html#jump:chisel3.Bool", "kind" : "val"}, {"label" : "branch", "tail" : ": Bool", "member" : "modules.Core.main.ControlSignals.branch", "link" : "modules\/Core\/main\/ControlSignals.html#branch:chisel3.Bool", "kind" : "val"}, {"label" : "memWrite", "tail" : ": Bool", "member" : "modules.Core.main.ControlSignals.memWrite", "link" : "modules\/Core\/main\/ControlSignals.html#memWrite:chisel3.Bool", "kind" : "val"}, {"label" : "memRead", "tail" : ": Bool", "member" : "modules.Core.main.ControlSignals.memRead", "link" : "modules\/Core\/main\/ControlSignals.html#memRead:chisel3.Bool", "kind" : "val"}, {"label" : "regWrite", "tail" : ": Bool", "member" : "modules.Core.main.ControlSignals.regWrite", "link" : "modules\/Core\/main\/ControlSignals.html#regWrite:chisel3.Bool", "kind" : "val"}, {"member" : "modules.Core.main.ControlSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/ControlSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/ControlSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): ControlSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/ControlSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/ControlSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/ControlSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/ControlSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/ControlSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/ControlSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/ControlSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/ControlSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/ControlSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/ControlSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/ControlSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/ControlSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/ControlSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/ControlSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/ControlSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/ControlSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/ControlSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/ControlSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/ControlSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/ControlSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/ControlSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/ControlSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/ControlSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/ControlSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/ControlSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/ControlSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/ControlSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): ControlSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/ControlSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/ControlSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/ControlSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/ControlSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/ControlSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/ControlSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/ControlSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/ControlSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/ControlSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/ControlSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): ControlSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/ControlSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/ControlSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/ControlSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/ControlSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/ControlSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/ControlSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/ControlSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/ControlSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/ControlSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/ControlSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ControlSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ControlSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ControlSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/ControlSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/ControlSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/ControlSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/ControlSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/ControlSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/ControlSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "nop", "tail" : "(): ControlSignals", "member" : "modules.Core.main.ControlSignals.nop", "link" : "modules\/Core\/main\/ControlSignals$.html#nop:modules.Core.main.ControlSignals", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/ControlSignals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/ControlSignals$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/ControlSignals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/ControlSignals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/ControlSignals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/ControlSignals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/ControlSignals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ControlSignals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ControlSignals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ControlSignals$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/ControlSignals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/ControlSignals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/ControlSignals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/ControlSignals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/ControlSignals$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/ControlSignals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/ControlSignals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/ControlSignals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/ControlSignals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/ControlSignals.html", "kind" : "class"}, {"name" : "modules.Core.main.Core", "shortDescription" : "CPU 顶层类，添加CPU以及外部调试信号等。经过 Chisel 综合，Verilog 中的模块名称为 Core，顶层模块名称与当前模块名称相同，为 Core。在 Chisel 3.5.+ 中，MultiIOModel 已经弃用，Model 已经自带多端口特性，故改用 Module。", "members_class" : [{"label" : "CPU", "tail" : ": Bundle { ... \/* 7 definitions in type refinement *\/ }", "member" : "modules.Core.main.Core.CPU", "link" : "modules\/Core\/main\/Core.html#CPU:chisel3.Bundle{valsetupSignals:modules.Core.main.SetupSignals;valtestReadouts:modules.Core.main.TestReadouts;valregUpdates:modules.Core.main.RegisterUpdates;valmemUpdates:modules.Core.main.MemUpdates;valcurrentPC:chisel3.UInt;valcurrentInstruction:chisel3.UInt;valstate:modules.Core.main.CPUState}", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 21 definitions in type refinement *\/ }", "member" : "modules.Core.main.Core.io", "link" : "modules\/Core\/main\/Core.html#io:chisel3.Bundle{valDMEMWriteData:chisel3.UInt;valDMEMAddress:chisel3.UInt;valDMEMWriteEnable:chisel3.Bool;valDMEMReadData:chisel3.UInt;valregsWriteData:chisel3.UInt;valregsAddress:chisel3.UInt;valregsWriteEnable:chisel3.Bool;valregsReadData:chisel3.UInt;valregsDeviceWriteEnable:chisel3.Bool;valregsDeviceWriteData:chisel3.UInt;valregsDeviceWriteAddress:chisel3.UInt;valmemDeviceWriteEnable:chisel3.Bool;valmemDeviceWriteData:chisel3.UInt;valmemDeviceWriteAddress:chisel3.UInt;valIMEMWriteData:chisel3.UInt;valIMEMAddress:chisel3.UInt;valsetup:chisel3.Bool;valcurrentPC:chisel3.UInt;valcurrentInstruction:chisel3.UInt;vallaunched:chisel3.Bool;valstopped:chisel3.Bool}", "kind" : "val"}, {"member" : "modules.Core.main.Core#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/Core.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/Core.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/Core.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/Core.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/Core.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/Core.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/Core.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/Core.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/Core.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/Core.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/Core.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/Core.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/Core.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/Core.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/Core.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/Core.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/Core.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/Core.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/Core.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/Core.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/Core.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/Core.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/Core.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/Core.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/Core.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/Core.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/Core.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/Core.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Core.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/Core.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/Core.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/Core.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/Core.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/Core.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/Core.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/Core.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/Core.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/Core.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/Core.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Core.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Core.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Core.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/Core.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/Core.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/Core.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/Core.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/Core.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/Core.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/Core.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/Core.html", "kind" : "class"}, {"name" : "modules.Core.main.CPU", "shortDescription" : "", "members_class" : [{"label" : "WB", "tail" : ": WriteBack", "member" : "modules.Core.main.CPU.WB", "link" : "modules\/Core\/main\/CPU.html#WB:modules.Core.main.WriteBack", "kind" : "val"}, {"label" : "MEM", "tail" : ": MemoryFetch", "member" : "modules.Core.main.CPU.MEM", "link" : "modules\/Core\/main\/CPU.html#MEM:modules.Core.main.MemoryFetch", "kind" : "val"}, {"label" : "EX", "tail" : ": Execute", "member" : "modules.Core.main.CPU.EX", "link" : "modules\/Core\/main\/CPU.html#EX:modules.Core.main.Execute", "kind" : "val"}, {"label" : "ID", "tail" : ": InstructionDecode", "member" : "modules.Core.main.CPU.ID", "link" : "modules\/Core\/main\/CPU.html#ID:modules.Core.main.InstructionDecode", "kind" : "val"}, {"label" : "IF", "tail" : ": InstructionFetch", "member" : "modules.Core.main.CPU.IF", "link" : "modules\/Core\/main\/CPU.html#IF:modules.Core.main.InstructionFetch", "kind" : "val"}, {"label" : "MEMBarrier", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "modules.Core.main.CPU.MEMBarrier", "link" : "modules\/Core\/main\/CPU.html#MEMBarrier:chisel3.Bundle{valin:modules.Core.main.MEMBarrierContents;valout:modules.Core.main.MEMBarrierContents;vallastMemValue:chisel3.UInt}", "kind" : "val"}, {"label" : "EXBarrier", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.CPU.EXBarrier", "link" : "modules\/Core\/main\/CPU.html#EXBarrier:chisel3.Bundle{valin:chisel3.Bundle;valout:chisel3.Bundle}", "kind" : "val"}, {"label" : "IDBarrier", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.CPU.IDBarrier", "link" : "modules\/Core\/main\/CPU.html#IDBarrier:chisel3.Bundle{valin:chisel3.Bundle;valout:chisel3.Bundle}", "kind" : "val"}, {"label" : "testHarness", "tail" : ": Bundle { ... \/* 7 definitions in type refinement *\/ }", "member" : "modules.Core.main.CPU.testHarness", "link" : "modules\/Core\/main\/CPU.html#testHarness:chisel3.Bundle{valsetupSignals:modules.Core.main.SetupSignals;valtestReadouts:modules.Core.main.TestReadouts;valregUpdates:modules.Core.main.RegisterUpdates;valmemUpdates:modules.Core.main.MemUpdates;valcurrentPC:chisel3.UInt;valcurrentInstruction:chisel3.UInt;valstate:modules.Core.main.CPUState}", "kind" : "val"}, {"member" : "modules.Core.main.CPU#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/CPU.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/CPU.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/CPU.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/CPU.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/CPU.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/CPU.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/CPU.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/CPU.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/CPU.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/CPU.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/CPU.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/CPU.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/CPU.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/CPU.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/CPU.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/CPU.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/CPU.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/CPU.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/CPU.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/CPU.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/CPU.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/CPU.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/CPU.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/CPU.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/CPU.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/CPU.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/CPU.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/CPU.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CPU.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/CPU.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/CPU.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/CPU.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/CPU.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/CPU.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/CPU.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/CPU.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/CPU.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/CPU.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/CPU.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/CPU.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/CPU.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/CPU.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/CPU.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/CPU.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/CPU.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/CPU.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/CPU.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/CPU.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/CPU.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/CPU.html", "kind" : "class"}, {"name" : "modules.Core.main.CPUState", "shortDescription" : "", "members_class" : [{"label" : "stopped", "tail" : ": Bool", "member" : "modules.Core.main.CPUState.stopped", "link" : "modules\/Core\/main\/CPUState.html#stopped:chisel3.Bool", "kind" : "val"}, {"label" : "launched", "tail" : ": Bool", "member" : "modules.Core.main.CPUState.launched", "link" : "modules\/Core\/main\/CPUState.html#launched:chisel3.Bool", "kind" : "val"}, {"member" : "modules.Core.main.CPUState#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/CPUState.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/CPUState.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): CPUState.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/CPUState.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/CPUState.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/CPUState.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/CPUState.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/CPUState.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/CPUState.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/CPUState.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/CPUState.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/CPUState.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/CPUState.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/CPUState.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/CPUState.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/CPUState.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/CPUState.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/CPUState.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/CPUState.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/CPUState.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/CPUState.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/CPUState.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/CPUState.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/CPUState.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/CPUState.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/CPUState.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/CPUState.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/CPUState.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/CPUState.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/CPUState.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): CPUState.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/CPUState.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/CPUState.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/CPUState.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/CPUState.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/CPUState.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/CPUState.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/CPUState.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/CPUState.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/CPUState.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/CPUState.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CPUState.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/CPUState.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/CPUState.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/CPUState.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/CPUState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/CPUState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/CPUState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/CPUState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/CPUState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/CPUState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/CPUState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/CPUState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/CPUState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/CPUState.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/CPUState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/CPUState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/CPUState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/CPUState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/CPUState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/CPUState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/CPUState.html", "kind" : "class"}, {"name" : "modules.Core.main.Decoder", "shortDescription" : "指令解码部分。", "members_class" : [{"label" : "decodedControlSignals", "tail" : ": List[UInt]", "member" : "modules.Core.main.Decoder.decodedControlSignals", "link" : "modules\/Core\/main\/Decoder.html#decodedControlSignals:List[chisel3.UInt]", "kind" : "val"}, {"label" : "NOP", "tail" : ": List[UInt]", "member" : "modules.Core.main.Decoder.NOP", "link" : "modules\/Core\/main\/Decoder.html#NOP:List[chisel3.UInt]", "kind" : "val"}, {"label" : "opcodeMap", "tail" : ": Array[(BitPat, List[UInt])]", "member" : "modules.Core.main.Decoder.opcodeMap", "link" : "modules\/Core\/main\/Decoder.html#opcodeMap:Array[(chisel3.util.BitPat,List[chisel3.UInt])]", "kind" : "val"}, {"label" : "Y", "tail" : ": UInt", "member" : "modules.Core.main.Decoder.Y", "link" : "modules\/Core\/main\/Decoder.html#Y:chisel3.UInt", "kind" : "val"}, {"label" : "N", "tail" : ": UInt", "member" : "modules.Core.main.Decoder.N", "link" : "modules\/Core\/main\/Decoder.html#N:chisel3.UInt", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 9 definitions in type refinement *\/ }", "member" : "modules.Core.main.Decoder.io", "link" : "modules\/Core\/main\/Decoder.html#io:chisel3.Bundle{valinstruction:modules.Core.main.Instruction;valcontrolSignals:modules.Core.main.ControlSignals;valbranchType:chisel3.UInt;valop1Select:chisel3.UInt;valop2Select:chisel3.UInt;valimmType:chisel3.UInt;valimmExt:chisel3.UInt;vallswByte:chisel3.UInt;valALUop:chisel3.UInt}", "kind" : "val"}, {"member" : "modules.Core.main.Decoder#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/Decoder.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/Decoder.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/Decoder.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/Decoder.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/Decoder.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/Decoder.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/Decoder.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/Decoder.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/Decoder.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/Decoder.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/Decoder.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/Decoder.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/Decoder.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/Decoder.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/Decoder.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/Decoder.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/Decoder.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/Decoder.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/Decoder.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/Decoder.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/Decoder.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/Decoder.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/Decoder.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/Decoder.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/Decoder.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/Decoder.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/Decoder.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/Decoder.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Decoder.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/Decoder.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/Decoder.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/Decoder.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/Decoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/Decoder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/Decoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/Decoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/Decoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/Decoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/Decoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Decoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Decoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Decoder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/Decoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/Decoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/Decoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/Decoder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/Decoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/Decoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/Decoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/Decoder.html", "kind" : "class"}, {"name" : "modules.Core.main.DMEM", "shortDescription" : "数据缓存部分。", "members_class" : [{"label" : "realAddressSource", "tail" : ": UInt", "member" : "modules.Core.main.DMEM.realAddressSource", "link" : "modules\/Core\/main\/DMEM.html#realAddressSource:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnableSource", "tail" : ": Bool", "member" : "modules.Core.main.DMEM.writeEnableSource", "link" : "modules\/Core\/main\/DMEM.html#writeEnableSource:chisel3.Bool", "kind" : "val"}, {"label" : "dataSource", "tail" : ": UInt", "member" : "modules.Core.main.DMEM.dataSource", "link" : "modules\/Core\/main\/DMEM.html#dataSource:chisel3.UInt", "kind" : "val"}, {"label" : "addressSource", "tail" : ": UInt", "member" : "modules.Core.main.DMEM.addressSource", "link" : "modules\/Core\/main\/DMEM.html#addressSource:chisel3.UInt", "kind" : "val"}, {"label" : "data", "tail" : ": SyncReadMem[UInt]", "member" : "modules.Core.main.DMEM.data", "link" : "modules\/Core\/main\/DMEM.html#data:chisel3.SyncReadMem[chisel3.UInt]", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 4 definitions in type refinement *\/ }", "member" : "modules.Core.main.DMEM.io", "link" : "modules\/Core\/main\/DMEM.html#io:chisel3.Bundle{valwriteEnable:chisel3.Bool;valdataIn:chisel3.UInt;valdataAddress:chisel3.UInt;valdataOut:chisel3.UInt}", "kind" : "val"}, {"label" : "testHarness", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.DMEM.testHarness", "link" : "modules\/Core\/main\/DMEM.html#testHarness:chisel3.Bundle{valsetup:modules.Core.main.DMEMsetupSignals;valtestUpdates:modules.Core.main.MemUpdates}", "kind" : "val"}, {"member" : "modules.Core.main.DMEM#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/DMEM.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/DMEM.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/DMEM.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/DMEM.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/DMEM.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/DMEM.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/DMEM.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/DMEM.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/DMEM.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/DMEM.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/DMEM.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/DMEM.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/DMEM.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/DMEM.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/DMEM.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/DMEM.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/DMEM.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/DMEM.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/DMEM.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/DMEM.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/DMEM.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/DMEM.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/DMEM.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/DMEM.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/DMEM.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/DMEM.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/DMEM.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/DMEM.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): DMEM.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/DMEM.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/DMEM.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/DMEM.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/DMEM.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/DMEM.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/DMEM.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/DMEM.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/DMEM.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/DMEM.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/DMEM.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/DMEM.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/DMEM.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/DMEM.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/DMEM.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/DMEM.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/DMEM.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/DMEM.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/DMEM.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/DMEM.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/DMEM.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/DMEM.html", "kind" : "class"}, {"name" : "modules.Core.main.DMEMsetupSignals", "shortDescription" : "", "members_class" : [{"label" : "dataAddress", "tail" : ": UInt", "member" : "modules.Core.main.DMEMsetupSignals.dataAddress", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#dataAddress:chisel3.UInt", "kind" : "val"}, {"label" : "dataIn", "tail" : ": UInt", "member" : "modules.Core.main.DMEMsetupSignals.dataIn", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#dataIn:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Core.main.DMEMsetupSignals.writeEnable", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "setup", "tail" : ": Bool", "member" : "modules.Core.main.DMEMsetupSignals.setup", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#setup:chisel3.Bool", "kind" : "val"}, {"member" : "modules.Core.main.DMEMsetupSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): DMEMsetupSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): DMEMsetupSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): DMEMsetupSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/DMEMsetupSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/DMEMsetupSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/DMEMsetupSignals.html", "kind" : "class"}, {"name" : "modules.Core.main.EXBarrier", "shortDescription" : "", "members_class" : [{"member" : "modules.Core.main.EXBarrier#<init>", "error" : "unsupported entity"}, {"label" : "regs", "tail" : ": Bundle", "member" : "modules.Core.main.BaseBarrier.regs", "link" : "modules\/Core\/main\/EXBarrier.html#regs:chisel3.Bundle", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.BaseBarrier.io", "link" : "modules\/Core\/main\/EXBarrier.html#io:chisel3.Bundle{valin:chisel3.Bundle;valout:chisel3.Bundle}", "kind" : "val"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/EXBarrier.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/EXBarrier.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/EXBarrier.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/EXBarrier.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/EXBarrier.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/EXBarrier.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/EXBarrier.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/EXBarrier.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/EXBarrier.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/EXBarrier.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/EXBarrier.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/EXBarrier.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/EXBarrier.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/EXBarrier.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/EXBarrier.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/EXBarrier.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/EXBarrier.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/EXBarrier.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/EXBarrier.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/EXBarrier.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/EXBarrier.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/EXBarrier.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/EXBarrier.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/EXBarrier.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/EXBarrier.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/EXBarrier.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/EXBarrier.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/EXBarrier.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): EXBarrier.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/EXBarrier.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/EXBarrier.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/EXBarrier.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/EXBarrier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/EXBarrier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/EXBarrier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/EXBarrier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/EXBarrier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/EXBarrier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/EXBarrier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/EXBarrier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/EXBarrier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/EXBarrier.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/EXBarrier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/EXBarrier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/EXBarrier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/EXBarrier.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/EXBarrier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/EXBarrier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/EXBarrier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/EXBarrier.html", "kind" : "class"}, {"name" : "modules.Core.main.EXBarrierContents", "shortDescription" : "", "members_class" : [{"label" : "lswByte", "tail" : ": UInt", "member" : "modules.Core.main.EXBarrierContents.lswByte", "link" : "modules\/Core\/main\/EXBarrierContents.html#lswByte:chisel3.UInt", "kind" : "val"}, {"label" : "writeReg", "tail" : ": Bool", "member" : "modules.Core.main.EXBarrierContents.writeReg", "link" : "modules\/Core\/main\/EXBarrierContents.html#writeReg:chisel3.Bool", "kind" : "val"}, {"label" : "readEnable", "tail" : ": Bool", "member" : "modules.Core.main.EXBarrierContents.readEnable", "link" : "modules\/Core\/main\/EXBarrierContents.html#readEnable:chisel3.Bool", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Core.main.EXBarrierContents.writeEnable", "link" : "modules\/Core\/main\/EXBarrierContents.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "writeData", "tail" : ": UInt", "member" : "modules.Core.main.EXBarrierContents.writeData", "link" : "modules\/Core\/main\/EXBarrierContents.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.EXBarrierContents.writeAddress", "link" : "modules\/Core\/main\/EXBarrierContents.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "regData", "tail" : ": UInt", "member" : "modules.Core.main.EXBarrierContents.regData", "link" : "modules\/Core\/main\/EXBarrierContents.html#regData:chisel3.UInt", "kind" : "val"}, {"label" : "PC", "tail" : ": UInt", "member" : "modules.Core.main.EXBarrierContents.PC", "link" : "modules\/Core\/main\/EXBarrierContents.html#PC:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Core.main.EXBarrierContents#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/EXBarrierContents.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/EXBarrierContents.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): EXBarrierContents.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/EXBarrierContents.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/EXBarrierContents.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/EXBarrierContents.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/EXBarrierContents.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/EXBarrierContents.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/EXBarrierContents.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/EXBarrierContents.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/EXBarrierContents.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/EXBarrierContents.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/EXBarrierContents.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/EXBarrierContents.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/EXBarrierContents.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/EXBarrierContents.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/EXBarrierContents.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/EXBarrierContents.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/EXBarrierContents.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/EXBarrierContents.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/EXBarrierContents.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/EXBarrierContents.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/EXBarrierContents.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/EXBarrierContents.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/EXBarrierContents.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/EXBarrierContents.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/EXBarrierContents.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/EXBarrierContents.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/EXBarrierContents.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/EXBarrierContents.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): EXBarrierContents.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/EXBarrierContents.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/EXBarrierContents.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/EXBarrierContents.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/EXBarrierContents.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/EXBarrierContents.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/EXBarrierContents.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/EXBarrierContents.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/EXBarrierContents.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/EXBarrierContents.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/EXBarrierContents.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): EXBarrierContents.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/EXBarrierContents.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/EXBarrierContents.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/EXBarrierContents.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/EXBarrierContents.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/EXBarrierContents.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/EXBarrierContents.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/EXBarrierContents.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/EXBarrierContents.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/EXBarrierContents.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/EXBarrierContents.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/EXBarrierContents.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/EXBarrierContents.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/EXBarrierContents.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/EXBarrierContents.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/EXBarrierContents.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/EXBarrierContents.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/EXBarrierContents.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/EXBarrierContents.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/EXBarrierContents.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/EXBarrierContents.html", "kind" : "class"}, {"name" : "modules.Core.main.Execute", "shortDescription" : "CPU 运算部分。", "members_class" : [{"label" : "aluResult", "tail" : ": UInt", "member" : "modules.Core.main.Execute.aluResult", "link" : "modules\/Core\/main\/Execute.html#aluResult:chisel3.UInt", "kind" : "val"}, {"label" : "ALUopMap", "tail" : ": Array[(UInt, UInt)]", "member" : "modules.Core.main.Execute.ALUopMap", "link" : "modules\/Core\/main\/Execute.html#ALUopMap:Array[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "b", "tail" : ": UInt", "member" : "modules.Core.main.Execute.b", "link" : "modules\/Core\/main\/Execute.html#b:chisel3.UInt", "kind" : "val"}, {"label" : "a", "tail" : ": UInt", "member" : "modules.Core.main.Execute.a", "link" : "modules\/Core\/main\/Execute.html#a:chisel3.UInt", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.Execute.io", "link" : "modules\/Core\/main\/Execute.html#io:chisel3.Bundle{valin:modules.Core.main.IDBarrierContents;valout:modules.Core.main.EXBarrierContents}", "kind" : "val"}, {"member" : "modules.Core.main.Execute#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/Execute.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/Execute.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/Execute.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/Execute.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/Execute.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/Execute.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/Execute.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/Execute.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/Execute.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/Execute.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/Execute.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/Execute.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/Execute.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/Execute.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/Execute.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/Execute.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/Execute.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/Execute.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/Execute.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/Execute.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/Execute.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/Execute.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/Execute.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/Execute.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/Execute.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/Execute.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/Execute.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/Execute.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Execute.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/Execute.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/Execute.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/Execute.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/Execute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/Execute.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/Execute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/Execute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/Execute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/Execute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/Execute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Execute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Execute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Execute.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/Execute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/Execute.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/Execute.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/Execute.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/Execute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/Execute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/Execute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/Execute.html", "kind" : "class"}, {"name" : "modules.Core.main.IDBarrier", "shortDescription" : "", "members_class" : [{"member" : "modules.Core.main.IDBarrier#<init>", "error" : "unsupported entity"}, {"label" : "regs", "tail" : ": Bundle", "member" : "modules.Core.main.BaseBarrier.regs", "link" : "modules\/Core\/main\/IDBarrier.html#regs:chisel3.Bundle", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.BaseBarrier.io", "link" : "modules\/Core\/main\/IDBarrier.html#io:chisel3.Bundle{valin:chisel3.Bundle;valout:chisel3.Bundle}", "kind" : "val"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/IDBarrier.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/IDBarrier.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/IDBarrier.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/IDBarrier.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/IDBarrier.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/IDBarrier.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/IDBarrier.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/IDBarrier.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/IDBarrier.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/IDBarrier.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/IDBarrier.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/IDBarrier.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/IDBarrier.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/IDBarrier.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/IDBarrier.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/IDBarrier.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/IDBarrier.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/IDBarrier.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/IDBarrier.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/IDBarrier.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/IDBarrier.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/IDBarrier.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/IDBarrier.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/IDBarrier.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/IDBarrier.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/IDBarrier.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/IDBarrier.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/IDBarrier.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): IDBarrier.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/IDBarrier.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/IDBarrier.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/IDBarrier.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/IDBarrier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/IDBarrier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/IDBarrier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/IDBarrier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/IDBarrier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/IDBarrier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/IDBarrier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IDBarrier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IDBarrier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IDBarrier.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/IDBarrier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/IDBarrier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/IDBarrier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/IDBarrier.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/IDBarrier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/IDBarrier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/IDBarrier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/IDBarrier.html", "kind" : "class"}, {"name" : "modules.Core.main.IDBarrierContents", "shortDescription" : "", "members_class" : [{"label" : "lswByte", "tail" : ": UInt", "member" : "modules.Core.main.IDBarrierContents.lswByte", "link" : "modules\/Core\/main\/IDBarrierContents.html#lswByte:chisel3.UInt", "kind" : "val"}, {"label" : "writeReg", "tail" : ": Bool", "member" : "modules.Core.main.IDBarrierContents.writeReg", "link" : "modules\/Core\/main\/IDBarrierContents.html#writeReg:chisel3.Bool", "kind" : "val"}, {"label" : "readEnable", "tail" : ": Bool", "member" : "modules.Core.main.IDBarrierContents.readEnable", "link" : "modules\/Core\/main\/IDBarrierContents.html#readEnable:chisel3.Bool", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Core.main.IDBarrierContents.writeEnable", "link" : "modules\/Core\/main\/IDBarrierContents.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.IDBarrierContents.writeAddress", "link" : "modules\/Core\/main\/IDBarrierContents.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "regData", "tail" : ": UInt", "member" : "modules.Core.main.IDBarrierContents.regData", "link" : "modules\/Core\/main\/IDBarrierContents.html#regData:chisel3.UInt", "kind" : "val"}, {"label" : "aluOp", "tail" : ": UInt", "member" : "modules.Core.main.IDBarrierContents.aluOp", "link" : "modules\/Core\/main\/IDBarrierContents.html#aluOp:chisel3.UInt", "kind" : "val"}, {"label" : "op2", "tail" : ": UInt", "member" : "modules.Core.main.IDBarrierContents.op2", "link" : "modules\/Core\/main\/IDBarrierContents.html#op2:chisel3.UInt", "kind" : "val"}, {"label" : "op1", "tail" : ": UInt", "member" : "modules.Core.main.IDBarrierContents.op1", "link" : "modules\/Core\/main\/IDBarrierContents.html#op1:chisel3.UInt", "kind" : "val"}, {"label" : "PC", "tail" : ": UInt", "member" : "modules.Core.main.IDBarrierContents.PC", "link" : "modules\/Core\/main\/IDBarrierContents.html#PC:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Core.main.IDBarrierContents#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/IDBarrierContents.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/IDBarrierContents.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): IDBarrierContents.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/IDBarrierContents.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/IDBarrierContents.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/IDBarrierContents.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/IDBarrierContents.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/IDBarrierContents.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/IDBarrierContents.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/IDBarrierContents.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/IDBarrierContents.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/IDBarrierContents.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/IDBarrierContents.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/IDBarrierContents.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/IDBarrierContents.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/IDBarrierContents.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/IDBarrierContents.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/IDBarrierContents.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/IDBarrierContents.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/IDBarrierContents.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/IDBarrierContents.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/IDBarrierContents.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/IDBarrierContents.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/IDBarrierContents.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/IDBarrierContents.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/IDBarrierContents.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/IDBarrierContents.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/IDBarrierContents.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/IDBarrierContents.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/IDBarrierContents.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): IDBarrierContents.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/IDBarrierContents.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/IDBarrierContents.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/IDBarrierContents.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/IDBarrierContents.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/IDBarrierContents.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/IDBarrierContents.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/IDBarrierContents.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/IDBarrierContents.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/IDBarrierContents.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/IDBarrierContents.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): IDBarrierContents.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/IDBarrierContents.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/IDBarrierContents.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/IDBarrierContents.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/IDBarrierContents.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/IDBarrierContents.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/IDBarrierContents.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/IDBarrierContents.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/IDBarrierContents.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/IDBarrierContents.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/IDBarrierContents.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IDBarrierContents.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IDBarrierContents.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IDBarrierContents.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/IDBarrierContents.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/IDBarrierContents.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/IDBarrierContents.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/IDBarrierContents.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/IDBarrierContents.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/IDBarrierContents.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/IDBarrierContents.html", "kind" : "class"}, {"name" : "modules.Core.main.IFBarrierContents", "shortDescription" : "各个流水线处理阶段之间的接口。包括接口定义和流水线之间数据储存（寄存器）。", "members_class" : [{"label" : "instruction", "tail" : ": UInt", "member" : "modules.Core.main.IFBarrierContents.instruction", "link" : "modules\/Core\/main\/IFBarrierContents.html#instruction:chisel3.UInt", "kind" : "val"}, {"label" : "PC", "tail" : ": UInt", "member" : "modules.Core.main.IFBarrierContents.PC", "link" : "modules\/Core\/main\/IFBarrierContents.html#PC:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Core.main.IFBarrierContents#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/IFBarrierContents.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/IFBarrierContents.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): IFBarrierContents.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/IFBarrierContents.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/IFBarrierContents.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/IFBarrierContents.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/IFBarrierContents.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/IFBarrierContents.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/IFBarrierContents.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/IFBarrierContents.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/IFBarrierContents.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/IFBarrierContents.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/IFBarrierContents.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/IFBarrierContents.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/IFBarrierContents.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/IFBarrierContents.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/IFBarrierContents.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/IFBarrierContents.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/IFBarrierContents.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/IFBarrierContents.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/IFBarrierContents.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/IFBarrierContents.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/IFBarrierContents.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/IFBarrierContents.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/IFBarrierContents.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/IFBarrierContents.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/IFBarrierContents.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/IFBarrierContents.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/IFBarrierContents.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/IFBarrierContents.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): IFBarrierContents.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/IFBarrierContents.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/IFBarrierContents.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/IFBarrierContents.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/IFBarrierContents.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/IFBarrierContents.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/IFBarrierContents.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/IFBarrierContents.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/IFBarrierContents.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/IFBarrierContents.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/IFBarrierContents.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): IFBarrierContents.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/IFBarrierContents.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/IFBarrierContents.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/IFBarrierContents.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/IFBarrierContents.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/IFBarrierContents.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/IFBarrierContents.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/IFBarrierContents.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/IFBarrierContents.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/IFBarrierContents.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/IFBarrierContents.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IFBarrierContents.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IFBarrierContents.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IFBarrierContents.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/IFBarrierContents.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/IFBarrierContents.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/IFBarrierContents.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/IFBarrierContents.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/IFBarrierContents.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/IFBarrierContents.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/IFBarrierContents.html", "kind" : "class"}, {"name" : "modules.Core.main.IMEM", "shortDescription" : "指令缓存部分。", "members_class" : [{"label" : "realAddressSource", "tail" : ": UInt", "member" : "modules.Core.main.IMEM.realAddressSource", "link" : "modules\/Core\/main\/IMEM.html#realAddressSource:chisel3.UInt", "kind" : "val"}, {"label" : "addressSource", "tail" : ": UInt", "member" : "modules.Core.main.IMEM.addressSource", "link" : "modules\/Core\/main\/IMEM.html#addressSource:chisel3.UInt", "kind" : "val"}, {"label" : "instructions", "tail" : ": SyncReadMem[UInt]", "member" : "modules.Core.main.IMEM.instructions", "link" : "modules\/Core\/main\/IMEM.html#instructions:chisel3.SyncReadMem[chisel3.UInt]", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.IMEM.io", "link" : "modules\/Core\/main\/IMEM.html#io:chisel3.Bundle{valinstructionAddress:chisel3.UInt;valinstruction:chisel3.UInt}", "kind" : "val"}, {"label" : "testHarness", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.IMEM.testHarness", "link" : "modules\/Core\/main\/IMEM.html#testHarness:chisel3.Bundle{valsetupSignals:modules.Core.main.IMEMsetupSignals;valrequestedAddress:chisel3.UInt}", "kind" : "val"}, {"member" : "modules.Core.main.IMEM#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/IMEM.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/IMEM.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/IMEM.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/IMEM.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/IMEM.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/IMEM.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/IMEM.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/IMEM.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/IMEM.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/IMEM.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/IMEM.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/IMEM.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/IMEM.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/IMEM.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/IMEM.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/IMEM.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/IMEM.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/IMEM.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/IMEM.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/IMEM.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/IMEM.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/IMEM.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/IMEM.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/IMEM.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/IMEM.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/IMEM.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/IMEM.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/IMEM.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): IMEM.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/IMEM.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/IMEM.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/IMEM.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/IMEM.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/IMEM.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/IMEM.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/IMEM.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/IMEM.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/IMEM.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/IMEM.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IMEM.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IMEM.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IMEM.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/IMEM.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/IMEM.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/IMEM.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/IMEM.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/IMEM.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/IMEM.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/IMEM.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/IMEM.html", "kind" : "class"}, {"name" : "modules.Core.main.IMEMsetupSignals", "shortDescription" : "", "members_class" : [{"label" : "instruction", "tail" : ": UInt", "member" : "modules.Core.main.IMEMsetupSignals.instruction", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#instruction:chisel3.UInt", "kind" : "val"}, {"label" : "address", "tail" : ": UInt", "member" : "modules.Core.main.IMEMsetupSignals.address", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#address:chisel3.UInt", "kind" : "val"}, {"label" : "setup", "tail" : ": Bool", "member" : "modules.Core.main.IMEMsetupSignals.setup", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#setup:chisel3.Bool", "kind" : "val"}, {"member" : "modules.Core.main.IMEMsetupSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): IMEMsetupSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): IMEMsetupSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): IMEMsetupSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/IMEMsetupSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/IMEMsetupSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/IMEMsetupSignals.html", "kind" : "class"}, {"name" : "modules.Core.main.ImmExtension", "shortDescription" : "", "object" : "modules\/Core\/main\/ImmExtension$.html", "members_object" : [{"label" : "REXT", "tail" : ": UInt", "member" : "modules.Core.main.ImmExtension.REXT", "link" : "modules\/Core\/main\/ImmExtension$.html#REXT:chisel3.UInt", "kind" : "val"}, {"label" : "UEXT", "tail" : ": UInt", "member" : "modules.Core.main.ImmExtension.UEXT", "link" : "modules\/Core\/main\/ImmExtension$.html#UEXT:chisel3.UInt", "kind" : "val"}, {"label" : "SEXT", "tail" : ": UInt", "member" : "modules.Core.main.ImmExtension.SEXT", "link" : "modules\/Core\/main\/ImmExtension$.html#SEXT:chisel3.UInt", "kind" : "val"}, {"label" : "NEXT", "tail" : ": UInt", "member" : "modules.Core.main.ImmExtension.NEXT", "link" : "modules\/Core\/main\/ImmExtension$.html#NEXT:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/ImmExtension$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/ImmExtension$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/ImmExtension$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/ImmExtension$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/ImmExtension$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/ImmExtension$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/ImmExtension$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ImmExtension$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ImmExtension$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ImmExtension$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/ImmExtension$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/ImmExtension$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/ImmExtension$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/ImmExtension$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/ImmExtension$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/ImmExtension$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/ImmExtension$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/ImmExtension$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/ImmExtension$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.Core.main.ImmFormat", "shortDescription" : "Used in the decoder", "object" : "modules\/Core\/main\/ImmFormat$.html", "members_object" : [{"label" : "IMFDC", "tail" : ": UInt", "member" : "modules.Core.main.ImmFormat.IMFDC", "link" : "modules\/Core\/main\/ImmFormat$.html#IMFDC:chisel3.UInt", "kind" : "val"}, {"label" : "SHAMT", "tail" : ": UInt", "member" : "modules.Core.main.ImmFormat.SHAMT", "link" : "modules\/Core\/main\/ImmFormat$.html#SHAMT:chisel3.UInt", "kind" : "val"}, {"label" : "JTYPE", "tail" : ": UInt", "member" : "modules.Core.main.ImmFormat.JTYPE", "link" : "modules\/Core\/main\/ImmFormat$.html#JTYPE:chisel3.UInt", "kind" : "val"}, {"label" : "UTYPE", "tail" : ": UInt", "member" : "modules.Core.main.ImmFormat.UTYPE", "link" : "modules\/Core\/main\/ImmFormat$.html#UTYPE:chisel3.UInt", "kind" : "val"}, {"label" : "BTYPE", "tail" : ": UInt", "member" : "modules.Core.main.ImmFormat.BTYPE", "link" : "modules\/Core\/main\/ImmFormat$.html#BTYPE:chisel3.UInt", "kind" : "val"}, {"label" : "STYPE", "tail" : ": UInt", "member" : "modules.Core.main.ImmFormat.STYPE", "link" : "modules\/Core\/main\/ImmFormat$.html#STYPE:chisel3.UInt", "kind" : "val"}, {"label" : "ITYPE", "tail" : ": UInt", "member" : "modules.Core.main.ImmFormat.ITYPE", "link" : "modules\/Core\/main\/ImmFormat$.html#ITYPE:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/ImmFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/ImmFormat$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/ImmFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/ImmFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/ImmFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/ImmFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/ImmFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ImmFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ImmFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/ImmFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/ImmFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/ImmFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/ImmFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/ImmFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/ImmFormat$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/ImmFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/ImmFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/ImmFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/ImmFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.Core.main.Instruction", "shortDescription" : "", "object" : "modules\/Core\/main\/Instruction$.html", "members_class" : [{"label" : "bubble", "tail" : "(): Instruction", "member" : "modules.Core.main.Instruction.bubble", "link" : "modules\/Core\/main\/Instruction.html#bubble():modules.Core.main.Instruction", "kind" : "def"}, {"label" : "immediateZType", "tail" : "(): SInt", "member" : "modules.Core.main.Instruction.immediateZType", "link" : "modules\/Core\/main\/Instruction.html#immediateZType:chisel3.SInt", "kind" : "def"}, {"label" : "immediateJType", "tail" : "(): SInt", "member" : "modules.Core.main.Instruction.immediateJType", "link" : "modules\/Core\/main\/Instruction.html#immediateJType:chisel3.SInt", "kind" : "def"}, {"label" : "immediateUType", "tail" : "(): SInt", "member" : "modules.Core.main.Instruction.immediateUType", "link" : "modules\/Core\/main\/Instruction.html#immediateUType:chisel3.SInt", "kind" : "def"}, {"label" : "immediateBType", "tail" : "(): SInt", "member" : "modules.Core.main.Instruction.immediateBType", "link" : "modules\/Core\/main\/Instruction.html#immediateBType:chisel3.SInt", "kind" : "def"}, {"label" : "immediateSType", "tail" : "(): SInt", "member" : "modules.Core.main.Instruction.immediateSType", "link" : "modules\/Core\/main\/Instruction.html#immediateSType:chisel3.SInt", "kind" : "def"}, {"label" : "immediateIType", "tail" : "(): SInt", "member" : "modules.Core.main.Instruction.immediateIType", "link" : "modules\/Core\/main\/Instruction.html#immediateIType:chisel3.SInt", "kind" : "def"}, {"label" : "funct6", "tail" : "(): UInt", "member" : "modules.Core.main.Instruction.funct6", "link" : "modules\/Core\/main\/Instruction.html#funct6:chisel3.UInt", "kind" : "def"}, {"label" : "funct7", "tail" : "(): UInt", "member" : "modules.Core.main.Instruction.funct7", "link" : "modules\/Core\/main\/Instruction.html#funct7:chisel3.UInt", "kind" : "def"}, {"label" : "registerRs2", "tail" : "(): UInt", "member" : "modules.Core.main.Instruction.registerRs2", "link" : "modules\/Core\/main\/Instruction.html#registerRs2:chisel3.UInt", "kind" : "def"}, {"label" : "registerRs1", "tail" : "(): UInt", "member" : "modules.Core.main.Instruction.registerRs1", "link" : "modules\/Core\/main\/Instruction.html#registerRs1:chisel3.UInt", "kind" : "def"}, {"label" : "funct3", "tail" : "(): UInt", "member" : "modules.Core.main.Instruction.funct3", "link" : "modules\/Core\/main\/Instruction.html#funct3:chisel3.UInt", "kind" : "def"}, {"label" : "registerRd", "tail" : "(): UInt", "member" : "modules.Core.main.Instruction.registerRd", "link" : "modules\/Core\/main\/Instruction.html#registerRd:chisel3.UInt", "kind" : "def"}, {"label" : "opcode", "tail" : "(): UInt", "member" : "modules.Core.main.Instruction.opcode", "link" : "modules\/Core\/main\/Instruction.html#opcode:chisel3.UInt", "kind" : "def"}, {"label" : "instruction", "tail" : ": UInt", "member" : "modules.Core.main.Instruction.instruction", "link" : "modules\/Core\/main\/Instruction.html#instruction:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Core.main.Instruction#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/Instruction.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/Instruction.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): Instruction.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/Instruction.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/Instruction.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/Instruction.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/Instruction.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/Instruction.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/Instruction.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/Instruction.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/Instruction.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/Instruction.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/Instruction.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/Instruction.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/Instruction.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/Instruction.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/Instruction.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/Instruction.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/Instruction.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/Instruction.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/Instruction.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/Instruction.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/Instruction.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/Instruction.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/Instruction.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/Instruction.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/Instruction.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/Instruction.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/Instruction.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/Instruction.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): Instruction.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/Instruction.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/Instruction.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/Instruction.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/Instruction.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/Instruction.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/Instruction.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/Instruction.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/Instruction.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/Instruction.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/Instruction.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Instruction.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/Instruction.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/Instruction.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/Instruction.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/Instruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/Instruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/Instruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/Instruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/Instruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/Instruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/Instruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Instruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Instruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Instruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/Instruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/Instruction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/Instruction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/Instruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/Instruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/Instruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "NOP", "tail" : "(): Instruction", "member" : "modules.Core.main.Instruction.NOP", "link" : "modules\/Core\/main\/Instruction$.html#NOP:modules.Core.main.Instruction", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/Instruction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/Instruction$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/Instruction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/Instruction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/Instruction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/Instruction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/Instruction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Instruction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Instruction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Instruction$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/Instruction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/Instruction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/Instruction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/Instruction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/Instruction$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/Instruction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/Instruction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/Instruction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/Instruction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/Instruction.html", "kind" : "class"}, {"name" : "modules.Core.main.InstructionDecode", "shortDescription" : "流水线译码部分。", "members_class" : [{"label" : "needJump", "tail" : ": Bool", "member" : "modules.Core.main.InstructionDecode.needJump", "link" : "modules\/Core\/main\/InstructionDecode.html#needJump:chisel3.Bool", "kind" : "val"}, {"label" : "nextPC", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.nextPC", "link" : "modules\/Core\/main\/InstructionDecode.html#nextPC:chisel3.UInt", "kind" : "val"}, {"label" : "clearSomeOutput", "tail" : "(): Unit", "member" : "modules.Core.main.InstructionDecode.clearSomeOutput", "link" : "modules\/Core\/main\/InstructionDecode.html#clearSomeOutput():Unit", "kind" : "def"}, {"label" : "branchTypeMap", "tail" : ": Array[(UInt, Bool)]", "member" : "modules.Core.main.InstructionDecode.branchTypeMap", "link" : "modules\/Core\/main\/InstructionDecode.html#branchTypeMap:Array[(chisel3.UInt,chisel3.Bool)]", "kind" : "val"}, {"label" : "b", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.b", "link" : "modules\/Core\/main\/InstructionDecode.html#b:chisel3.UInt", "kind" : "val"}, {"label" : "a", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.a", "link" : "modules\/Core\/main\/InstructionDecode.html#a:chisel3.UInt", "kind" : "val"}, {"label" : "op2SetValue", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.op2SetValue", "link" : "modules\/Core\/main\/InstructionDecode.html#op2SetValue:chisel3.UInt", "kind" : "val"}, {"label" : "op1SetValue", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.op1SetValue", "link" : "modules\/Core\/main\/InstructionDecode.html#op1SetValue:chisel3.UInt", "kind" : "val"}, {"label" : "findOpSource", "tail" : "(registerReadOut: UInt, op: UInt, regSourceOp: UInt, rs: UInt, opSelect: UInt, registerRs: UInt, immValue: UInt): Unit", "member" : "modules.Core.main.InstructionDecode.findOpSource", "link" : "modules\/Core\/main\/InstructionDecode.html#findOpSource(registerReadOut:chisel3.UInt,op:chisel3.UInt,regSourceOp:chisel3.UInt,rs:chisel3.UInt,opSelect:chisel3.UInt,registerRs:chisel3.UInt,immValue:chisel3.UInt):Unit", "kind" : "def"}, {"label" : "stallFor2", "tail" : "(): Unit", "member" : "modules.Core.main.InstructionDecode.stallFor2", "link" : "modules\/Core\/main\/InstructionDecode.html#stallFor2():Unit", "kind" : "def"}, {"label" : "stallFor1", "tail" : "(): Unit", "member" : "modules.Core.main.InstructionDecode.stallFor1", "link" : "modules\/Core\/main\/InstructionDecode.html#stallFor1():Unit", "kind" : "def"}, {"label" : "regReadAddress2", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.regReadAddress2", "link" : "modules\/Core\/main\/InstructionDecode.html#regReadAddress2:chisel3.UInt", "kind" : "val"}, {"label" : "regReadAddress1", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.regReadAddress1", "link" : "modules\/Core\/main\/InstructionDecode.html#regReadAddress1:chisel3.UInt", "kind" : "val"}, {"label" : "regReadAddressReal2", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.regReadAddressReal2", "link" : "modules\/Core\/main\/InstructionDecode.html#regReadAddressReal2:chisel3.UInt", "kind" : "val"}, {"label" : "regReadAddressReal1", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.regReadAddressReal1", "link" : "modules\/Core\/main\/InstructionDecode.html#regReadAddressReal1:chisel3.UInt", "kind" : "val"}, {"label" : "immRealValue", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.immRealValue", "link" : "modules\/Core\/main\/InstructionDecode.html#immRealValue:chisel3.UInt", "kind" : "val"}, {"label" : "extensionMap", "tail" : ": Array[(UInt, UInt)]", "member" : "modules.Core.main.InstructionDecode.extensionMap", "link" : "modules\/Core\/main\/InstructionDecode.html#extensionMap:Array[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "rs1Ext", "tail" : "(value: SInt, width: Int): UInt", "member" : "modules.Core.main.InstructionDecode.rs1Ext", "link" : "modules\/Core\/main\/InstructionDecode.html#rs1Ext(value:chisel3.SInt,width:Int):chisel3.UInt", "kind" : "def"}, {"label" : "noExt", "tail" : "(value: SInt): UInt", "member" : "modules.Core.main.InstructionDecode.noExt", "link" : "modules\/Core\/main\/InstructionDecode.html#noExt(value:chisel3.SInt):chisel3.UInt", "kind" : "def"}, {"label" : "uext", "tail" : "(value: SInt, width: Int): UInt", "member" : "modules.Core.main.InstructionDecode.uext", "link" : "modules\/Core\/main\/InstructionDecode.html#uext(value:chisel3.SInt,width:Int):chisel3.UInt", "kind" : "def"}, {"label" : "sext", "tail" : "(value: SInt, width: Int): UInt", "member" : "modules.Core.main.InstructionDecode.sext", "link" : "modules\/Core\/main\/InstructionDecode.html#sext(value:chisel3.SInt,width:Int):chisel3.UInt", "kind" : "def"}, {"label" : "immediateValue", "tail" : ": SInt", "member" : "modules.Core.main.InstructionDecode.immediateValue", "link" : "modules\/Core\/main\/InstructionDecode.html#immediateValue:chisel3.SInt", "kind" : "val"}, {"label" : "immMap", "tail" : ": Array[(UInt, SInt)]", "member" : "modules.Core.main.InstructionDecode.immMap", "link" : "modules\/Core\/main\/InstructionDecode.html#immMap:Array[(chisel3.UInt,chisel3.SInt)]", "kind" : "val"}, {"label" : "lastInstruction2", "tail" : ": LastInstructionContents", "member" : "modules.Core.main.InstructionDecode.lastInstruction2", "link" : "modules\/Core\/main\/InstructionDecode.html#lastInstruction2:InstructionDecode.this.LastInstructionContents", "kind" : "val"}, {"label" : "lastInstruction", "tail" : ": LastInstructionContents", "member" : "modules.Core.main.InstructionDecode.lastInstruction", "link" : "modules\/Core\/main\/InstructionDecode.html#lastInstruction:InstructionDecode.this.LastInstructionContents", "kind" : "val"}, {"label" : "LastInstructionContents", "tail" : "", "member" : "modules.Core.main.InstructionDecode.LastInstructionContents", "link" : "modules\/Core\/main\/InstructionDecode.html#LastInstructionContentsextendsAnyRef", "kind" : "class"}, {"label" : "regDataSource", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.regDataSource", "link" : "modules\/Core\/main\/InstructionDecode.html#regDataSource:chisel3.UInt", "kind" : "val"}, {"label" : "regSourceOp2", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.regSourceOp2", "link" : "modules\/Core\/main\/InstructionDecode.html#regSourceOp2:chisel3.UInt", "kind" : "val"}, {"label" : "regSourceOp1", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.regSourceOp1", "link" : "modules\/Core\/main\/InstructionDecode.html#regSourceOp1:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.writeAddress", "link" : "modules\/Core\/main\/InstructionDecode.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "OpSourceType", "tail" : "", "member" : "modules.Core.main.InstructionDecode.OpSourceType", "link" : "modules\/Core\/main\/InstructionDecode.html#OpSourceType", "kind" : "object"}, {"label" : "stopping", "tail" : ": Bool", "member" : "modules.Core.main.InstructionDecode.stopping", "link" : "modules\/Core\/main\/InstructionDecode.html#stopping:chisel3.Bool", "kind" : "val"}, {"label" : "stopped", "tail" : ": Bool", "member" : "modules.Core.main.InstructionDecode.stopped", "link" : "modules\/Core\/main\/InstructionDecode.html#stopped:chisel3.Bool", "kind" : "val"}, {"label" : "instructionNow", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.instructionNow", "link" : "modules\/Core\/main\/InstructionDecode.html#instructionNow:chisel3.UInt", "kind" : "val"}, {"label" : "instructionLast", "tail" : ": UInt", "member" : "modules.Core.main.InstructionDecode.instructionLast", "link" : "modules\/Core\/main\/InstructionDecode.html#instructionLast:chisel3.UInt", "kind" : "val"}, {"label" : "stalled2", "tail" : ": Bool", "member" : "modules.Core.main.InstructionDecode.stalled2", "link" : "modules\/Core\/main\/InstructionDecode.html#stalled2:chisel3.Bool", "kind" : "val"}, {"label" : "stalled", "tail" : ": Bool", "member" : "modules.Core.main.InstructionDecode.stalled", "link" : "modules\/Core\/main\/InstructionDecode.html#stalled:chisel3.Bool", "kind" : "val"}, {"label" : "launched", "tail" : ": Bool", "member" : "modules.Core.main.InstructionDecode.launched", "link" : "modules\/Core\/main\/InstructionDecode.html#launched:chisel3.Bool", "kind" : "val"}, {"label" : "decoder", "tail" : ": Bundle { ... \/* 9 definitions in type refinement *\/ }", "member" : "modules.Core.main.InstructionDecode.decoder", "link" : "modules\/Core\/main\/InstructionDecode.html#decoder:chisel3.Bundle{valinstruction:modules.Core.main.Instruction;valcontrolSignals:modules.Core.main.ControlSignals;valbranchType:chisel3.UInt;valop1Select:chisel3.UInt;valop2Select:chisel3.UInt;valimmType:chisel3.UInt;valimmExt:chisel3.UInt;vallswByte:chisel3.UInt;valALUop:chisel3.UInt}", "kind" : "val"}, {"label" : "registers", "tail" : ": Registers", "member" : "modules.Core.main.InstructionDecode.registers", "link" : "modules\/Core\/main\/InstructionDecode.html#registers:modules.Core.main.Registers", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 16 definitions in type refinement *\/ }", "member" : "modules.Core.main.InstructionDecode.io", "link" : "modules\/Core\/main\/InstructionDecode.html#io:chisel3.Bundle{valin:modules.Core.main.IFBarrierContents;valout:modules.Core.main.IDBarrierContents;valwriteBack:modules.Core.main.WriteBackBarrierContents;valex:modules.Core.main.EXBarrierContents;valmem:modules.Core.main.MEMBarrierContents;valstall:chisel3.Bool;valnextPC:chisel3.UInt;valtoJump:chisel3.Bool;valregSourceOp1:chisel3.UInt;valregSourceOp2:chisel3.UInt;valregDataSource:chisel3.UInt;valop1SetValue:chisel3.UInt;valop2SetValue:chisel3.UInt;valstopped:chisel3.Bool;valjumpNeedWriteRegister:chisel3.Bool;vallaunched:chisel3.Bool}", "kind" : "val"}, {"label" : "testHarness", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "modules.Core.main.InstructionDecode.testHarness", "link" : "modules\/Core\/main\/InstructionDecode.html#testHarness:chisel3.Bundle{valregisterSetup:modules.Core.main.RegisterSetupSignals;valregisterPeek:chisel3.UInt;valtestUpdates:modules.Core.main.RegisterUpdates}", "kind" : "val"}, {"member" : "modules.Core.main.InstructionDecode#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/InstructionDecode.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/InstructionDecode.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/InstructionDecode.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/InstructionDecode.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/InstructionDecode.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/InstructionDecode.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/InstructionDecode.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/InstructionDecode.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/InstructionDecode.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/InstructionDecode.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/InstructionDecode.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/InstructionDecode.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/InstructionDecode.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/InstructionDecode.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/InstructionDecode.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/InstructionDecode.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/InstructionDecode.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/InstructionDecode.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/InstructionDecode.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/InstructionDecode.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/InstructionDecode.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/InstructionDecode.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/InstructionDecode.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/InstructionDecode.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/InstructionDecode.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/InstructionDecode.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/InstructionDecode.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/InstructionDecode.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): InstructionDecode.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/InstructionDecode.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/InstructionDecode.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/InstructionDecode.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/InstructionDecode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/InstructionDecode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/InstructionDecode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/InstructionDecode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/InstructionDecode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/InstructionDecode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/InstructionDecode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/InstructionDecode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/InstructionDecode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/InstructionDecode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/InstructionDecode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/InstructionDecode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/InstructionDecode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/InstructionDecode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/InstructionDecode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/InstructionDecode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/InstructionDecode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/InstructionDecode.html", "kind" : "class"}, {"name" : "modules.Core.main.InstructionFetch", "shortDescription" : "流水线取指部分。", "members_class" : [{"label" : "PCOffset", "tail" : ": SInt", "member" : "modules.Core.main.InstructionFetch.PCOffset", "link" : "modules\/Core\/main\/InstructionFetch.html#PCOffset:chisel3.SInt", "kind" : "val"}, {"label" : "instructionStarter", "tail" : ": UInt", "member" : "modules.Core.main.InstructionFetch.instructionStarter", "link" : "modules\/Core\/main\/InstructionFetch.html#instructionStarter:chisel3.UInt", "kind" : "val"}, {"label" : "stalled", "tail" : ": Bool", "member" : "modules.Core.main.InstructionFetch.stalled", "link" : "modules\/Core\/main\/InstructionFetch.html#stalled:chisel3.Bool", "kind" : "val"}, {"label" : "lastInstruction", "tail" : ": UInt", "member" : "modules.Core.main.InstructionFetch.lastInstruction", "link" : "modules\/Core\/main\/InstructionFetch.html#lastInstruction:chisel3.UInt", "kind" : "val"}, {"label" : "instructionReadAddress", "tail" : ": UInt", "member" : "modules.Core.main.InstructionFetch.instructionReadAddress", "link" : "modules\/Core\/main\/InstructionFetch.html#instructionReadAddress:chisel3.UInt", "kind" : "val"}, {"label" : "nextPC", "tail" : ": UInt", "member" : "modules.Core.main.InstructionFetch.nextPC", "link" : "modules\/Core\/main\/InstructionFetch.html#nextPC:chisel3.UInt", "kind" : "val"}, {"label" : "launched", "tail" : ": Bool", "member" : "modules.Core.main.InstructionFetch.launched", "link" : "modules\/Core\/main\/InstructionFetch.html#launched:chisel3.Bool", "kind" : "val"}, {"label" : "setup", "tail" : ": Bool", "member" : "modules.Core.main.InstructionFetch.setup", "link" : "modules\/Core\/main\/InstructionFetch.html#setup:chisel3.Bool", "kind" : "val"}, {"label" : "PCInit", "tail" : ": UInt", "member" : "modules.Core.main.InstructionFetch.PCInit", "link" : "modules\/Core\/main\/InstructionFetch.html#PCInit:chisel3.UInt", "kind" : "val"}, {"label" : "testPC", "tail" : ": UInt", "member" : "modules.Core.main.InstructionFetch.testPC", "link" : "modules\/Core\/main\/InstructionFetch.html#testPC:chisel3.UInt", "kind" : "val"}, {"label" : "PC", "tail" : ": UInt", "member" : "modules.Core.main.InstructionFetch.PC", "link" : "modules\/Core\/main\/InstructionFetch.html#PC:chisel3.UInt", "kind" : "val"}, {"label" : "IMEM", "tail" : ": IMEM", "member" : "modules.Core.main.InstructionFetch.IMEM", "link" : "modules\/Core\/main\/InstructionFetch.html#IMEM:modules.Core.main.IMEM", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 5 definitions in type refinement *\/ }", "member" : "modules.Core.main.InstructionFetch.io", "link" : "modules\/Core\/main\/InstructionFetch.html#io:chisel3.Bundle{valout:modules.Core.main.IFBarrierContents;valstall:chisel3.Bool;valjump:chisel3.Bool;valnextPC:chisel3.UInt;valstopped:chisel3.Bool}", "kind" : "val"}, {"label" : "testHarness", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.InstructionFetch.testHarness", "link" : "modules\/Core\/main\/InstructionFetch.html#testHarness:chisel3.Bundle{valIMEMsetup:modules.Core.main.IMEMsetupSignals;valPC:chisel3.UInt}", "kind" : "val"}, {"member" : "modules.Core.main.InstructionFetch#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/InstructionFetch.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/InstructionFetch.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/InstructionFetch.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/InstructionFetch.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/InstructionFetch.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/InstructionFetch.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/InstructionFetch.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/InstructionFetch.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/InstructionFetch.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/InstructionFetch.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/InstructionFetch.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/InstructionFetch.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/InstructionFetch.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/InstructionFetch.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/InstructionFetch.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/InstructionFetch.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/InstructionFetch.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/InstructionFetch.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/InstructionFetch.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/InstructionFetch.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/InstructionFetch.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/InstructionFetch.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/InstructionFetch.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/InstructionFetch.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/InstructionFetch.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/InstructionFetch.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/InstructionFetch.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/InstructionFetch.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): InstructionFetch.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/InstructionFetch.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/InstructionFetch.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/InstructionFetch.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/InstructionFetch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/InstructionFetch.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/InstructionFetch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/InstructionFetch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/InstructionFetch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/InstructionFetch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/InstructionFetch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/InstructionFetch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/InstructionFetch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/InstructionFetch.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/InstructionFetch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/InstructionFetch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/InstructionFetch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/InstructionFetch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/InstructionFetch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/InstructionFetch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/InstructionFetch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/InstructionFetch.html", "kind" : "class"}, {"name" : "modules.Core.main.lookup", "shortDescription" : "CPU 常数部分。", "object" : "modules\/Core\/main\/lookup$.html", "members_object" : [{"label" : "SW", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SW", "link" : "modules\/Core\/main\/lookup$.html#SW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SH", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SH", "link" : "modules\/Core\/main\/lookup$.html#SH:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SB", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SB", "link" : "modules\/Core\/main\/lookup$.html#SB:chisel3.util.BitPat", "kind" : "def"}, {"label" : "LHU", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.LHU", "link" : "modules\/Core\/main\/lookup$.html#LHU:chisel3.util.BitPat", "kind" : "def"}, {"label" : "LBU", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.LBU", "link" : "modules\/Core\/main\/lookup$.html#LBU:chisel3.util.BitPat", "kind" : "def"}, {"label" : "LW", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.LW", "link" : "modules\/Core\/main\/lookup$.html#LW:chisel3.util.BitPat", "kind" : "def"}, {"label" : "LH", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.LH", "link" : "modules\/Core\/main\/lookup$.html#LH:chisel3.util.BitPat", "kind" : "def"}, {"label" : "LB", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.LB", "link" : "modules\/Core\/main\/lookup$.html#LB:chisel3.util.BitPat", "kind" : "def"}, {"label" : "AND", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.AND", "link" : "modules\/Core\/main\/lookup$.html#AND:chisel3.util.BitPat", "kind" : "def"}, {"label" : "OR", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.OR", "link" : "modules\/Core\/main\/lookup$.html#OR:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SRA", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SRA", "link" : "modules\/Core\/main\/lookup$.html#SRA:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SRL", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SRL", "link" : "modules\/Core\/main\/lookup$.html#SRL:chisel3.util.BitPat", "kind" : "def"}, {"label" : "XOR", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.XOR", "link" : "modules\/Core\/main\/lookup$.html#XOR:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLTU", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SLTU", "link" : "modules\/Core\/main\/lookup$.html#SLTU:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLT", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SLT", "link" : "modules\/Core\/main\/lookup$.html#SLT:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLL", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SLL", "link" : "modules\/Core\/main\/lookup$.html#SLL:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SUB", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SUB", "link" : "modules\/Core\/main\/lookup$.html#SUB:chisel3.util.BitPat", "kind" : "def"}, {"label" : "ADD", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.ADD", "link" : "modules\/Core\/main\/lookup$.html#ADD:chisel3.util.BitPat", "kind" : "def"}, {"label" : "ANDI", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.ANDI", "link" : "modules\/Core\/main\/lookup$.html#ANDI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "ORI", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.ORI", "link" : "modules\/Core\/main\/lookup$.html#ORI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SRAI", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SRAI", "link" : "modules\/Core\/main\/lookup$.html#SRAI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SRLI", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SRLI", "link" : "modules\/Core\/main\/lookup$.html#SRLI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "XORI", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.XORI", "link" : "modules\/Core\/main\/lookup$.html#XORI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLTIU", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SLTIU", "link" : "modules\/Core\/main\/lookup$.html#SLTIU:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLTI", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SLTI", "link" : "modules\/Core\/main\/lookup$.html#SLTI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "SLLI", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.SLLI", "link" : "modules\/Core\/main\/lookup$.html#SLLI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "ADDI", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.ADDI", "link" : "modules\/Core\/main\/lookup$.html#ADDI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "AUIPC", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.AUIPC", "link" : "modules\/Core\/main\/lookup$.html#AUIPC:chisel3.util.BitPat", "kind" : "def"}, {"label" : "LUI", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.LUI", "link" : "modules\/Core\/main\/lookup$.html#LUI:chisel3.util.BitPat", "kind" : "def"}, {"label" : "JAL", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.JAL", "link" : "modules\/Core\/main\/lookup$.html#JAL:chisel3.util.BitPat", "kind" : "def"}, {"label" : "JALR", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.JALR", "link" : "modules\/Core\/main\/lookup$.html#JALR:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BGEU", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.BGEU", "link" : "modules\/Core\/main\/lookup$.html#BGEU:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BLTU", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.BLTU", "link" : "modules\/Core\/main\/lookup$.html#BLTU:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BGE", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.BGE", "link" : "modules\/Core\/main\/lookup$.html#BGE:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BLT", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.BLT", "link" : "modules\/Core\/main\/lookup$.html#BLT:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BNE", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.BNE", "link" : "modules\/Core\/main\/lookup$.html#BNE:chisel3.util.BitPat", "kind" : "def"}, {"label" : "BEQ", "tail" : "(): BitPat", "member" : "modules.Core.main.lookup.BEQ", "link" : "modules\/Core\/main\/lookup$.html#BEQ:chisel3.util.BitPat", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/lookup$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/lookup$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/lookup$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/lookup$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/lookup$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/lookup$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/lookup$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/lookup$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/lookup$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/lookup$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/lookup$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/lookup$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/lookup$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/lookup$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/lookup$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/lookup$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/lookup$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/lookup$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/lookup$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.Core.main.LswByteType", "shortDescription" : "", "object" : "modules\/Core\/main\/LswByteType$.html", "members_object" : [{"label" : "LSWD", "tail" : ": UInt", "member" : "modules.Core.main.LswByteType.LSWD", "link" : "modules\/Core\/main\/LswByteType$.html#LSWD:chisel3.UInt", "kind" : "val"}, {"label" : "LSW1", "tail" : ": UInt", "member" : "modules.Core.main.LswByteType.LSW1", "link" : "modules\/Core\/main\/LswByteType$.html#LSW1:chisel3.UInt", "kind" : "val"}, {"label" : "LSW2", "tail" : ": UInt", "member" : "modules.Core.main.LswByteType.LSW2", "link" : "modules\/Core\/main\/LswByteType$.html#LSW2:chisel3.UInt", "kind" : "val"}, {"label" : "LSW4", "tail" : ": UInt", "member" : "modules.Core.main.LswByteType.LSW4", "link" : "modules\/Core\/main\/LswByteType$.html#LSW4:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/LswByteType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/LswByteType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/LswByteType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/LswByteType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/LswByteType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/LswByteType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/LswByteType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/LswByteType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/LswByteType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/LswByteType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/LswByteType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/LswByteType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/LswByteType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/LswByteType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/LswByteType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/LswByteType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/LswByteType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/LswByteType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/LswByteType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.Core.main.MEMBarrier", "shortDescription" : "", "members_class" : [{"label" : "waitNext", "tail" : ": Bool", "member" : "modules.Core.main.MEMBarrier.waitNext", "link" : "modules\/Core\/main\/MEMBarrier.html#waitNext:chisel3.Bool", "kind" : "val"}, {"label" : "regs", "tail" : ": MEMBarrierContents", "member" : "modules.Core.main.MEMBarrier.regs", "link" : "modules\/Core\/main\/MEMBarrier.html#regs:modules.Core.main.MEMBarrierContents", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "modules.Core.main.MEMBarrier.io", "link" : "modules\/Core\/main\/MEMBarrier.html#io:chisel3.Bundle{valin:modules.Core.main.MEMBarrierContents;valout:modules.Core.main.MEMBarrierContents;vallastMemValue:chisel3.UInt}", "kind" : "val"}, {"member" : "modules.Core.main.MEMBarrier#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/MEMBarrier.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/MEMBarrier.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/MEMBarrier.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/MEMBarrier.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/MEMBarrier.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/MEMBarrier.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/MEMBarrier.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/MEMBarrier.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/MEMBarrier.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/MEMBarrier.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/MEMBarrier.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/MEMBarrier.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/MEMBarrier.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/MEMBarrier.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/MEMBarrier.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/MEMBarrier.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/MEMBarrier.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/MEMBarrier.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/MEMBarrier.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/MEMBarrier.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/MEMBarrier.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/MEMBarrier.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/MEMBarrier.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/MEMBarrier.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/MEMBarrier.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/MEMBarrier.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/MEMBarrier.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/MEMBarrier.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): MEMBarrier.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/MEMBarrier.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/MEMBarrier.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/MEMBarrier.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/MEMBarrier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/MEMBarrier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/MEMBarrier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/MEMBarrier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/MEMBarrier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/MEMBarrier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/MEMBarrier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MEMBarrier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MEMBarrier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MEMBarrier.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/MEMBarrier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/MEMBarrier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/MEMBarrier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/MEMBarrier.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/MEMBarrier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/MEMBarrier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/MEMBarrier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/MEMBarrier.html", "kind" : "class"}, {"name" : "modules.Core.main.MEMBarrierContents", "shortDescription" : "", "members_class" : [{"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.MEMBarrierContents.writeAddress", "link" : "modules\/Core\/main\/MEMBarrierContents.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "writeReg", "tail" : ": Bool", "member" : "modules.Core.main.MEMBarrierContents.writeReg", "link" : "modules\/Core\/main\/MEMBarrierContents.html#writeReg:chisel3.Bool", "kind" : "val"}, {"label" : "readDelaySignal", "tail" : ": Bool", "member" : "modules.Core.main.MEMBarrierContents.readDelaySignal", "link" : "modules\/Core\/main\/MEMBarrierContents.html#readDelaySignal:chisel3.Bool", "kind" : "val"}, {"label" : "writeData", "tail" : ": UInt", "member" : "modules.Core.main.MEMBarrierContents.writeData", "link" : "modules\/Core\/main\/MEMBarrierContents.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "PC", "tail" : ": UInt", "member" : "modules.Core.main.MEMBarrierContents.PC", "link" : "modules\/Core\/main\/MEMBarrierContents.html#PC:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Core.main.MEMBarrierContents#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/MEMBarrierContents.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/MEMBarrierContents.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): MEMBarrierContents.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/MEMBarrierContents.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/MEMBarrierContents.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/MEMBarrierContents.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/MEMBarrierContents.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/MEMBarrierContents.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/MEMBarrierContents.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/MEMBarrierContents.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/MEMBarrierContents.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/MEMBarrierContents.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/MEMBarrierContents.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/MEMBarrierContents.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/MEMBarrierContents.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/MEMBarrierContents.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/MEMBarrierContents.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/MEMBarrierContents.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/MEMBarrierContents.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/MEMBarrierContents.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/MEMBarrierContents.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/MEMBarrierContents.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/MEMBarrierContents.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/MEMBarrierContents.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/MEMBarrierContents.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/MEMBarrierContents.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/MEMBarrierContents.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/MEMBarrierContents.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/MEMBarrierContents.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/MEMBarrierContents.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): MEMBarrierContents.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/MEMBarrierContents.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/MEMBarrierContents.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/MEMBarrierContents.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/MEMBarrierContents.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/MEMBarrierContents.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/MEMBarrierContents.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/MEMBarrierContents.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/MEMBarrierContents.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/MEMBarrierContents.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/MEMBarrierContents.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): MEMBarrierContents.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/MEMBarrierContents.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/MEMBarrierContents.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/MEMBarrierContents.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/MEMBarrierContents.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/MEMBarrierContents.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/MEMBarrierContents.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/MEMBarrierContents.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/MEMBarrierContents.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/MEMBarrierContents.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/MEMBarrierContents.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MEMBarrierContents.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MEMBarrierContents.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MEMBarrierContents.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/MEMBarrierContents.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/MEMBarrierContents.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/MEMBarrierContents.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/MEMBarrierContents.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/MEMBarrierContents.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/MEMBarrierContents.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/MEMBarrierContents.html", "kind" : "class"}, {"name" : "modules.Core.main.MemoryFetch", "shortDescription" : "流水线访存部分。", "members_class" : [{"label" : "launched", "tail" : ": Bool", "member" : "modules.Core.main.MemoryFetch.launched", "link" : "modules\/Core\/main\/MemoryFetch.html#launched:chisel3.Bool", "kind" : "val"}, {"label" : "memDelayReg", "tail" : ": Bool", "member" : "modules.Core.main.MemoryFetch.memDelayReg", "link" : "modules\/Core\/main\/MemoryFetch.html#memDelayReg:chisel3.Bool", "kind" : "val"}, {"label" : "i", "tail" : ": UInt", "member" : "modules.Core.main.MemoryFetch.i", "link" : "modules\/Core\/main\/MemoryFetch.html#i:chisel3.UInt", "kind" : "val"}, {"label" : "readWriteByteMaskReg", "tail" : ": UInt", "member" : "modules.Core.main.MemoryFetch.readWriteByteMaskReg", "link" : "modules\/Core\/main\/MemoryFetch.html#readWriteByteMaskReg:chisel3.UInt", "kind" : "val"}, {"label" : "readWriteByteMask", "tail" : ": UInt", "member" : "modules.Core.main.MemoryFetch.readWriteByteMask", "link" : "modules\/Core\/main\/MemoryFetch.html#readWriteByteMask:chisel3.UInt", "kind" : "val"}, {"label" : "readWriteByteMaskMap", "tail" : ": Array[(UInt, UInt)]", "member" : "modules.Core.main.MemoryFetch.readWriteByteMaskMap", "link" : "modules\/Core\/main\/MemoryFetch.html#readWriteByteMaskMap:Array[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "byteMaskAll", "tail" : ": UInt", "member" : "modules.Core.main.MemoryFetch.byteMaskAll", "link" : "modules\/Core\/main\/MemoryFetch.html#byteMaskAll:chisel3.UInt", "kind" : "val"}, {"label" : "DMEM", "tail" : ": DMEM", "member" : "modules.Core.main.MemoryFetch.DMEM", "link" : "modules\/Core\/main\/MemoryFetch.html#DMEM:modules.Core.main.DMEM", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "modules.Core.main.MemoryFetch.io", "link" : "modules\/Core\/main\/MemoryFetch.html#io:chisel3.Bundle{valin:modules.Core.main.EXBarrierContents;valout:modules.Core.main.MEMBarrierContents;vallastMemValue:chisel3.UInt}", "kind" : "val"}, {"label" : "testHarness", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "modules.Core.main.MemoryFetch.testHarness", "link" : "modules\/Core\/main\/MemoryFetch.html#testHarness:chisel3.Bundle{valDMEMsetup:modules.Core.main.DMEMsetupSignals;valDMEMpeek:chisel3.UInt;valtestUpdates:modules.Core.main.MemUpdates}", "kind" : "val"}, {"member" : "modules.Core.main.MemoryFetch#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/MemoryFetch.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/MemoryFetch.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/MemoryFetch.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/MemoryFetch.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/MemoryFetch.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/MemoryFetch.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/MemoryFetch.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/MemoryFetch.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/MemoryFetch.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/MemoryFetch.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/MemoryFetch.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/MemoryFetch.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/MemoryFetch.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/MemoryFetch.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/MemoryFetch.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/MemoryFetch.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/MemoryFetch.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/MemoryFetch.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/MemoryFetch.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/MemoryFetch.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/MemoryFetch.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/MemoryFetch.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/MemoryFetch.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/MemoryFetch.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/MemoryFetch.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/MemoryFetch.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/MemoryFetch.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/MemoryFetch.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): MemoryFetch.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/MemoryFetch.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/MemoryFetch.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/MemoryFetch.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/MemoryFetch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/MemoryFetch.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/MemoryFetch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/MemoryFetch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/MemoryFetch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/MemoryFetch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/MemoryFetch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MemoryFetch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MemoryFetch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MemoryFetch.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/MemoryFetch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/MemoryFetch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/MemoryFetch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/MemoryFetch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/MemoryFetch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/MemoryFetch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/MemoryFetch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/MemoryFetch.html", "kind" : "class"}, {"name" : "modules.Core.main.MemUpdates", "shortDescription" : "", "members_class" : [{"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.MemUpdates.writeAddress", "link" : "modules\/Core\/main\/MemUpdates.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "writeData", "tail" : ": UInt", "member" : "modules.Core.main.MemUpdates.writeData", "link" : "modules\/Core\/main\/MemUpdates.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Core.main.MemUpdates.writeEnable", "link" : "modules\/Core\/main\/MemUpdates.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"member" : "modules.Core.main.MemUpdates#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/MemUpdates.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/MemUpdates.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): MemUpdates.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/MemUpdates.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/MemUpdates.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/MemUpdates.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/MemUpdates.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/MemUpdates.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/MemUpdates.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/MemUpdates.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/MemUpdates.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/MemUpdates.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/MemUpdates.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/MemUpdates.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/MemUpdates.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/MemUpdates.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/MemUpdates.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/MemUpdates.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/MemUpdates.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/MemUpdates.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/MemUpdates.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/MemUpdates.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/MemUpdates.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/MemUpdates.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/MemUpdates.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/MemUpdates.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/MemUpdates.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/MemUpdates.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/MemUpdates.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/MemUpdates.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): MemUpdates.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/MemUpdates.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/MemUpdates.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/MemUpdates.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/MemUpdates.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/MemUpdates.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/MemUpdates.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/MemUpdates.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/MemUpdates.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/MemUpdates.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/MemUpdates.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): MemUpdates.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/MemUpdates.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/MemUpdates.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/MemUpdates.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/MemUpdates.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/MemUpdates.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/MemUpdates.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/MemUpdates.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/MemUpdates.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/MemUpdates.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/MemUpdates.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MemUpdates.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MemUpdates.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/MemUpdates.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/MemUpdates.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/MemUpdates.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/MemUpdates.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/MemUpdates.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/MemUpdates.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/MemUpdates.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/MemUpdates.html", "kind" : "class"}, {"name" : "modules.Core.main.Op1Select", "shortDescription" : "", "object" : "modules\/Core\/main\/Op1Select$.html", "members_object" : [{"label" : "OP1_N", "tail" : ": UInt", "member" : "modules.Core.main.Op1Select.OP1_N", "link" : "modules\/Core\/main\/Op1Select$.html#OP1_N:chisel3.UInt", "kind" : "val"}, {"label" : "PC", "tail" : ": UInt", "member" : "modules.Core.main.Op1Select.PC", "link" : "modules\/Core\/main\/Op1Select$.html#PC:chisel3.UInt", "kind" : "val"}, {"label" : "rs1", "tail" : ": UInt", "member" : "modules.Core.main.Op1Select.rs1", "link" : "modules\/Core\/main\/Op1Select$.html#rs1:chisel3.UInt", "kind" : "val"}, {"label" : "OP1_DC", "tail" : ": UInt", "member" : "modules.Core.main.Op1Select.OP1_DC", "link" : "modules\/Core\/main\/Op1Select$.html#OP1_DC:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/Op1Select$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/Op1Select$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/Op1Select$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/Op1Select$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/Op1Select$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/Op1Select$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/Op1Select$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Op1Select$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Op1Select$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Op1Select$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/Op1Select$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/Op1Select$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/Op1Select$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/Op1Select$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/Op1Select$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/Op1Select$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/Op1Select$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/Op1Select$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/Op1Select$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.Core.main.Op2Select", "shortDescription" : "", "object" : "modules\/Core\/main\/Op2Select$.html", "members_object" : [{"label" : "OP2_N", "tail" : ": UInt", "member" : "modules.Core.main.Op2Select.OP2_N", "link" : "modules\/Core\/main\/Op2Select$.html#OP2_N:chisel3.UInt", "kind" : "val"}, {"label" : "imm", "tail" : ": UInt", "member" : "modules.Core.main.Op2Select.imm", "link" : "modules\/Core\/main\/Op2Select$.html#imm:chisel3.UInt", "kind" : "val"}, {"label" : "rs2", "tail" : ": UInt", "member" : "modules.Core.main.Op2Select.rs2", "link" : "modules\/Core\/main\/Op2Select$.html#rs2:chisel3.UInt", "kind" : "val"}, {"label" : "OP2_DC", "tail" : ": UInt", "member" : "modules.Core.main.Op2Select.OP2_DC", "link" : "modules\/Core\/main\/Op2Select$.html#OP2_DC:chisel3.UInt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/Op2Select$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/Op2Select$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/Op2Select$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/Op2Select$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/Op2Select$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/Op2Select$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/Op2Select$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Op2Select$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Op2Select$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Op2Select$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/Op2Select$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/Op2Select$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/Op2Select$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/Op2Select$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Core\/main\/Op2Select$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Core\/main\/Op2Select$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/Op2Select$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/Op2Select$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/Op2Select$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "modules.Core.main.Registers", "shortDescription" : "", "members_class" : [{"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Core.main.Registers.writeEnable", "link" : "modules\/Core\/main\/Registers.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "writeData", "tail" : ": UInt", "member" : "modules.Core.main.Registers.writeData", "link" : "modules\/Core\/main\/Registers.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.Registers.writeAddress", "link" : "modules\/Core\/main\/Registers.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "readAddress2", "tail" : ": UInt", "member" : "modules.Core.main.Registers.readAddress2", "link" : "modules\/Core\/main\/Registers.html#readAddress2:chisel3.UInt", "kind" : "val"}, {"label" : "readAddress1", "tail" : ": UInt", "member" : "modules.Core.main.Registers.readAddress1", "link" : "modules\/Core\/main\/Registers.html#readAddress1:chisel3.UInt", "kind" : "val"}, {"label" : "registerFile", "tail" : ": Mem[UInt]", "member" : "modules.Core.main.Registers.registerFile", "link" : "modules\/Core\/main\/Registers.html#registerFile:chisel3.Mem[chisel3.UInt]", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.Registers.io", "link" : "modules\/Core\/main\/Registers.html#io:chisel3.Bundle{valin:modules.Core.main.RegistersInContents;valout:modules.Core.main.RegistersOutContents}", "kind" : "val"}, {"label" : "testHarness", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.Registers.testHarness", "link" : "modules\/Core\/main\/Registers.html#testHarness:chisel3.Bundle{valsetup:modules.Core.main.RegisterSetupSignals;valtestUpdates:modules.Core.main.RegisterUpdates}", "kind" : "val"}, {"member" : "modules.Core.main.Registers#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/Registers.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/Registers.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/Registers.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/Registers.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/Registers.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/Registers.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/Registers.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/Registers.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/Registers.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/Registers.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/Registers.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/Registers.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/Registers.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/Registers.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/Registers.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/Registers.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/Registers.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/Registers.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/Registers.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/Registers.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/Registers.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/Registers.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/Registers.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/Registers.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/Registers.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/Registers.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/Registers.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/Registers.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Registers.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/Registers.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/Registers.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/Registers.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/Registers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/Registers.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/Registers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/Registers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/Registers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/Registers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/Registers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Registers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Registers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/Registers.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/Registers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/Registers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/Registers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/Registers.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/Registers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/Registers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/Registers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/Registers.html", "kind" : "class"}, {"name" : "modules.Core.main.RegisterSetupSignals", "shortDescription" : "", "members_class" : [{"label" : "writeData", "tail" : ": UInt", "member" : "modules.Core.main.RegisterSetupSignals.writeData", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.RegisterSetupSignals.writeAddress", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Core.main.RegisterSetupSignals.writeEnable", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "readAddress", "tail" : ": UInt", "member" : "modules.Core.main.RegisterSetupSignals.readAddress", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#readAddress:chisel3.UInt", "kind" : "val"}, {"label" : "setup", "tail" : ": Bool", "member" : "modules.Core.main.RegisterSetupSignals.setup", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#setup:chisel3.Bool", "kind" : "val"}, {"member" : "modules.Core.main.RegisterSetupSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): RegisterSetupSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): RegisterSetupSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): RegisterSetupSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/RegisterSetupSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/RegisterSetupSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/RegisterSetupSignals.html", "kind" : "class"}, {"name" : "modules.Core.main.RegistersInContents", "shortDescription" : "", "members_class" : [{"label" : "writeData", "tail" : ": UInt", "member" : "modules.Core.main.RegistersInContents.writeData", "link" : "modules\/Core\/main\/RegistersInContents.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.RegistersInContents.writeAddress", "link" : "modules\/Core\/main\/RegistersInContents.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Core.main.RegistersInContents.writeEnable", "link" : "modules\/Core\/main\/RegistersInContents.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "readAddress2", "tail" : ": UInt", "member" : "modules.Core.main.RegistersInContents.readAddress2", "link" : "modules\/Core\/main\/RegistersInContents.html#readAddress2:chisel3.UInt", "kind" : "val"}, {"label" : "readAddress1", "tail" : ": UInt", "member" : "modules.Core.main.RegistersInContents.readAddress1", "link" : "modules\/Core\/main\/RegistersInContents.html#readAddress1:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Core.main.RegistersInContents#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/RegistersInContents.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/RegistersInContents.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): RegistersInContents.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/RegistersInContents.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/RegistersInContents.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/RegistersInContents.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/RegistersInContents.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/RegistersInContents.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/RegistersInContents.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/RegistersInContents.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/RegistersInContents.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/RegistersInContents.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/RegistersInContents.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/RegistersInContents.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/RegistersInContents.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/RegistersInContents.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/RegistersInContents.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/RegistersInContents.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/RegistersInContents.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/RegistersInContents.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/RegistersInContents.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/RegistersInContents.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/RegistersInContents.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/RegistersInContents.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/RegistersInContents.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/RegistersInContents.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/RegistersInContents.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/RegistersInContents.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/RegistersInContents.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/RegistersInContents.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): RegistersInContents.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/RegistersInContents.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/RegistersInContents.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/RegistersInContents.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/RegistersInContents.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/RegistersInContents.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/RegistersInContents.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/RegistersInContents.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/RegistersInContents.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/RegistersInContents.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/RegistersInContents.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): RegistersInContents.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/RegistersInContents.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/RegistersInContents.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/RegistersInContents.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/RegistersInContents.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/RegistersInContents.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/RegistersInContents.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/RegistersInContents.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/RegistersInContents.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/RegistersInContents.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/RegistersInContents.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegistersInContents.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegistersInContents.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegistersInContents.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/RegistersInContents.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/RegistersInContents.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/RegistersInContents.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/RegistersInContents.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/RegistersInContents.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/RegistersInContents.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/RegistersInContents.html", "kind" : "class"}, {"name" : "modules.Core.main.RegistersOutContents", "shortDescription" : "", "members_class" : [{"label" : "readData2", "tail" : ": UInt", "member" : "modules.Core.main.RegistersOutContents.readData2", "link" : "modules\/Core\/main\/RegistersOutContents.html#readData2:chisel3.UInt", "kind" : "val"}, {"label" : "readData1", "tail" : ": UInt", "member" : "modules.Core.main.RegistersOutContents.readData1", "link" : "modules\/Core\/main\/RegistersOutContents.html#readData1:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Core.main.RegistersOutContents#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/RegistersOutContents.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/RegistersOutContents.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): RegistersOutContents.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/RegistersOutContents.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/RegistersOutContents.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/RegistersOutContents.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/RegistersOutContents.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/RegistersOutContents.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/RegistersOutContents.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/RegistersOutContents.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/RegistersOutContents.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/RegistersOutContents.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/RegistersOutContents.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/RegistersOutContents.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/RegistersOutContents.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/RegistersOutContents.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/RegistersOutContents.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/RegistersOutContents.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/RegistersOutContents.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/RegistersOutContents.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/RegistersOutContents.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/RegistersOutContents.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/RegistersOutContents.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/RegistersOutContents.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/RegistersOutContents.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/RegistersOutContents.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/RegistersOutContents.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/RegistersOutContents.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/RegistersOutContents.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/RegistersOutContents.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): RegistersOutContents.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/RegistersOutContents.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/RegistersOutContents.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/RegistersOutContents.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/RegistersOutContents.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/RegistersOutContents.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/RegistersOutContents.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/RegistersOutContents.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/RegistersOutContents.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/RegistersOutContents.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/RegistersOutContents.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): RegistersOutContents.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/RegistersOutContents.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/RegistersOutContents.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/RegistersOutContents.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/RegistersOutContents.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/RegistersOutContents.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/RegistersOutContents.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/RegistersOutContents.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/RegistersOutContents.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/RegistersOutContents.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/RegistersOutContents.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegistersOutContents.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegistersOutContents.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegistersOutContents.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/RegistersOutContents.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/RegistersOutContents.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/RegistersOutContents.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/RegistersOutContents.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/RegistersOutContents.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/RegistersOutContents.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/RegistersOutContents.html", "kind" : "class"}, {"name" : "modules.Core.main.RegisterUpdates", "shortDescription" : "", "members_class" : [{"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.RegisterUpdates.writeAddress", "link" : "modules\/Core\/main\/RegisterUpdates.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "writeData", "tail" : ": UInt", "member" : "modules.Core.main.RegisterUpdates.writeData", "link" : "modules\/Core\/main\/RegisterUpdates.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Core.main.RegisterUpdates.writeEnable", "link" : "modules\/Core\/main\/RegisterUpdates.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"member" : "modules.Core.main.RegisterUpdates#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/RegisterUpdates.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/RegisterUpdates.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): RegisterUpdates.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/RegisterUpdates.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/RegisterUpdates.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/RegisterUpdates.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/RegisterUpdates.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/RegisterUpdates.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/RegisterUpdates.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/RegisterUpdates.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/RegisterUpdates.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/RegisterUpdates.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/RegisterUpdates.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/RegisterUpdates.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/RegisterUpdates.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/RegisterUpdates.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/RegisterUpdates.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/RegisterUpdates.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/RegisterUpdates.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/RegisterUpdates.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/RegisterUpdates.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/RegisterUpdates.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/RegisterUpdates.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/RegisterUpdates.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/RegisterUpdates.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/RegisterUpdates.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/RegisterUpdates.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/RegisterUpdates.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/RegisterUpdates.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/RegisterUpdates.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): RegisterUpdates.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/RegisterUpdates.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/RegisterUpdates.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/RegisterUpdates.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/RegisterUpdates.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/RegisterUpdates.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/RegisterUpdates.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/RegisterUpdates.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/RegisterUpdates.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/RegisterUpdates.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/RegisterUpdates.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): RegisterUpdates.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/RegisterUpdates.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/RegisterUpdates.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/RegisterUpdates.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/RegisterUpdates.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/RegisterUpdates.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/RegisterUpdates.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/RegisterUpdates.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/RegisterUpdates.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/RegisterUpdates.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/RegisterUpdates.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegisterUpdates.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegisterUpdates.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/RegisterUpdates.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/RegisterUpdates.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/RegisterUpdates.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/RegisterUpdates.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/RegisterUpdates.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/RegisterUpdates.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/RegisterUpdates.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/RegisterUpdates.html", "kind" : "class"}, {"name" : "modules.Core.main.SetupSignals", "shortDescription" : "", "members_class" : [{"label" : "registerSignals", "tail" : ": RegisterSetupSignals", "member" : "modules.Core.main.SetupSignals.registerSignals", "link" : "modules\/Core\/main\/SetupSignals.html#registerSignals:modules.Core.main.RegisterSetupSignals", "kind" : "val"}, {"label" : "DMEMsignals", "tail" : ": DMEMsetupSignals", "member" : "modules.Core.main.SetupSignals.DMEMsignals", "link" : "modules\/Core\/main\/SetupSignals.html#DMEMsignals:modules.Core.main.DMEMsetupSignals", "kind" : "val"}, {"label" : "IMEMsignals", "tail" : ": IMEMsetupSignals", "member" : "modules.Core.main.SetupSignals.IMEMsignals", "link" : "modules\/Core\/main\/SetupSignals.html#IMEMsignals:modules.Core.main.IMEMsetupSignals", "kind" : "val"}, {"member" : "modules.Core.main.SetupSignals#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/SetupSignals.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/SetupSignals.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): SetupSignals.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/SetupSignals.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/SetupSignals.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/SetupSignals.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/SetupSignals.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/SetupSignals.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/SetupSignals.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/SetupSignals.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/SetupSignals.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/SetupSignals.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/SetupSignals.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/SetupSignals.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/SetupSignals.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/SetupSignals.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/SetupSignals.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/SetupSignals.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/SetupSignals.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/SetupSignals.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/SetupSignals.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/SetupSignals.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/SetupSignals.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/SetupSignals.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/SetupSignals.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/SetupSignals.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/SetupSignals.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/SetupSignals.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/SetupSignals.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/SetupSignals.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): SetupSignals.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/SetupSignals.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/SetupSignals.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/SetupSignals.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/SetupSignals.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/SetupSignals.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/SetupSignals.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/SetupSignals.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/SetupSignals.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/SetupSignals.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/SetupSignals.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): SetupSignals.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/SetupSignals.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/SetupSignals.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/SetupSignals.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/SetupSignals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/SetupSignals.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/SetupSignals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/SetupSignals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/SetupSignals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/SetupSignals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/SetupSignals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/SetupSignals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/SetupSignals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/SetupSignals.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/SetupSignals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/SetupSignals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/SetupSignals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/SetupSignals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/SetupSignals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/SetupSignals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/SetupSignals.html", "kind" : "class"}, {"name" : "modules.Core.main.TestReadouts", "shortDescription" : "", "members_class" : [{"label" : "DMEMread", "tail" : ": UInt", "member" : "modules.Core.main.TestReadouts.DMEMread", "link" : "modules\/Core\/main\/TestReadouts.html#DMEMread:chisel3.UInt", "kind" : "val"}, {"label" : "registerRead", "tail" : ": UInt", "member" : "modules.Core.main.TestReadouts.registerRead", "link" : "modules\/Core\/main\/TestReadouts.html#registerRead:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Core.main.TestReadouts#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/TestReadouts.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/TestReadouts.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): TestReadouts.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/TestReadouts.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/TestReadouts.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/TestReadouts.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/TestReadouts.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/TestReadouts.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/TestReadouts.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/TestReadouts.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/TestReadouts.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/TestReadouts.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/TestReadouts.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/TestReadouts.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/TestReadouts.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/TestReadouts.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/TestReadouts.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/TestReadouts.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/TestReadouts.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/TestReadouts.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/TestReadouts.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/TestReadouts.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/TestReadouts.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/TestReadouts.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/TestReadouts.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/TestReadouts.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/TestReadouts.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/TestReadouts.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/TestReadouts.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/TestReadouts.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): TestReadouts.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/TestReadouts.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/TestReadouts.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/TestReadouts.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/TestReadouts.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/TestReadouts.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/TestReadouts.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/TestReadouts.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/TestReadouts.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/TestReadouts.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/TestReadouts.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): TestReadouts.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/TestReadouts.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/TestReadouts.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/TestReadouts.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/TestReadouts.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/TestReadouts.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/TestReadouts.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/TestReadouts.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/TestReadouts.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/TestReadouts.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/TestReadouts.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/TestReadouts.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/TestReadouts.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/TestReadouts.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/TestReadouts.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/TestReadouts.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/TestReadouts.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/TestReadouts.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/TestReadouts.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/TestReadouts.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/TestReadouts.html", "kind" : "class"}, {"name" : "modules.Core.main.WriteBack", "shortDescription" : "流水线写回部分。", "members_class" : [{"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Core.main.WriteBack.io", "link" : "modules\/Core\/main\/WriteBack.html#io:chisel3.Bundle{valin:modules.Core.main.MEMBarrierContents;valout:modules.Core.main.WriteBackBarrierContents}", "kind" : "val"}, {"member" : "modules.Core.main.WriteBack#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Core\/main\/WriteBack.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Core\/main\/WriteBack.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Core\/main\/WriteBack.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Core\/main\/WriteBack.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Core\/main\/WriteBack.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Core\/main\/WriteBack.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Core\/main\/WriteBack.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Core\/main\/WriteBack.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Core\/main\/WriteBack.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Core\/main\/WriteBack.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Core\/main\/WriteBack.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Core\/main\/WriteBack.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Core\/main\/WriteBack.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Core\/main\/WriteBack.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Core\/main\/WriteBack.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Core\/main\/WriteBack.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Core\/main\/WriteBack.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Core\/main\/WriteBack.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Core\/main\/WriteBack.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Core\/main\/WriteBack.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Core\/main\/WriteBack.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Core\/main\/WriteBack.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Core\/main\/WriteBack.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/WriteBack.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/WriteBack.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/WriteBack.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/WriteBack.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/WriteBack.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): WriteBack.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/WriteBack.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/WriteBack.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/WriteBack.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/WriteBack.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/WriteBack.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/WriteBack.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/WriteBack.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/WriteBack.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/WriteBack.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/WriteBack.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/WriteBack.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/WriteBack.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/WriteBack.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/WriteBack.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/WriteBack.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Core\/main\/WriteBack.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/WriteBack.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/WriteBack.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/WriteBack.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/WriteBack.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/WriteBack.html", "kind" : "class"}, {"name" : "modules.Core.main.WriteBackBarrierContents", "shortDescription" : "", "members_class" : [{"label" : "writeAddress", "tail" : ": UInt", "member" : "modules.Core.main.WriteBackBarrierContents.writeAddress", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#writeAddress:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.Core.main.WriteBackBarrierContents.writeEnable", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"label" : "writeData", "tail" : ": UInt", "member" : "modules.Core.main.WriteBackBarrierContents.writeData", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#writeData:chisel3.UInt", "kind" : "val"}, {"label" : "PC", "tail" : ": UInt", "member" : "modules.Core.main.WriteBackBarrierContents.PC", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#PC:chisel3.UInt", "kind" : "val"}, {"member" : "modules.Core.main.WriteBackBarrierContents#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): WriteBackBarrierContents.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): WriteBackBarrierContents.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): WriteBackBarrierContents.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Core\/main\/WriteBackBarrierContents.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Core\/main\/WriteBackBarrierContents.html", "kind" : "class"}], "modules.Dummy2.main" : [{"name" : "modules.Dummy2.main.Dummy2", "shortDescription" : "", "object" : "modules\/Dummy2\/main\/Dummy2$.html", "members_class" : [{"label" : "xor", "tail" : ": UInt", "member" : "modules.Dummy2.main.Dummy2.xor", "link" : "modules\/Dummy2\/main\/Dummy2.html#xor:chisel3.UInt", "kind" : "val"}, {"label" : "c", "tail" : ": UInt", "member" : "modules.Dummy2.main.Dummy2.c", "link" : "modules\/Dummy2\/main\/Dummy2.html#c:chisel3.UInt", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Dummy2.main.Dummy2.io", "link" : "modules\/Dummy2\/main\/Dummy2.html#io:chisel3.Bundle{valin:chisel3.Bundle{vala:chisel3.UInt;valb:chisel3.UInt};valout:chisel3.Bundle{valc:chisel3.UInt;vald:chisel3.UInt}}", "kind" : "val"}, {"member" : "modules.Dummy2.main.Dummy2#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/Dummy2\/main\/Dummy2.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/Dummy2\/main\/Dummy2.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/Dummy2\/main\/Dummy2.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/Dummy2\/main\/Dummy2.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/Dummy2\/main\/Dummy2.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/Dummy2\/main\/Dummy2.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/Dummy2\/main\/Dummy2.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/Dummy2\/main\/Dummy2.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/Dummy2\/main\/Dummy2.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/Dummy2\/main\/Dummy2.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/Dummy2\/main\/Dummy2.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/Dummy2\/main\/Dummy2.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/Dummy2\/main\/Dummy2.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/Dummy2\/main\/Dummy2.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/Dummy2\/main\/Dummy2.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/Dummy2\/main\/Dummy2.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/Dummy2\/main\/Dummy2.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/Dummy2\/main\/Dummy2.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/Dummy2\/main\/Dummy2.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/Dummy2\/main\/Dummy2.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/Dummy2\/main\/Dummy2.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/Dummy2\/main\/Dummy2.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/Dummy2\/main\/Dummy2.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/Dummy2\/main\/Dummy2.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/Dummy2\/main\/Dummy2.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/Dummy2\/main\/Dummy2.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/Dummy2\/main\/Dummy2.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/Dummy2\/main\/Dummy2.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): Dummy2.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/Dummy2\/main\/Dummy2.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/Dummy2\/main\/Dummy2.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/Dummy2\/main\/Dummy2.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Dummy2\/main\/Dummy2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Dummy2\/main\/Dummy2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Dummy2\/main\/Dummy2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Dummy2\/main\/Dummy2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Dummy2\/main\/Dummy2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Dummy2\/main\/Dummy2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Dummy2\/main\/Dummy2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Dummy2\/main\/Dummy2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Dummy2\/main\/Dummy2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Dummy2\/main\/Dummy2.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Dummy2\/main\/Dummy2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Dummy2\/main\/Dummy2.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Dummy2\/main\/Dummy2.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Dummy2\/main\/Dummy2.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Dummy2\/main\/Dummy2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Dummy2\/main\/Dummy2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Dummy2\/main\/Dummy2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getIOPort", "tail" : "(width: Int): Bundle { ... \/* 2 definitions in type refinement *\/ }", "member" : "modules.Dummy2.main.Dummy2.getIOPort", "link" : "modules\/Dummy2\/main\/Dummy2$.html#getIOPort(width:Int):chisel3.Bundle{valin:chisel3.Bundle{vala:chisel3.UInt;valb:chisel3.UInt};valout:chisel3.Bundle{valc:chisel3.UInt;vald:chisel3.UInt}}", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/Dummy2\/main\/Dummy2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/Dummy2\/main\/Dummy2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/Dummy2\/main\/Dummy2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/Dummy2\/main\/Dummy2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/Dummy2\/main\/Dummy2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/Dummy2\/main\/Dummy2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/Dummy2\/main\/Dummy2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Dummy2\/main\/Dummy2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Dummy2\/main\/Dummy2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/Dummy2\/main\/Dummy2$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/Dummy2\/main\/Dummy2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/Dummy2\/main\/Dummy2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/Dummy2\/main\/Dummy2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/Dummy2\/main\/Dummy2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/Dummy2\/main\/Dummy2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/Dummy2\/main\/Dummy2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/Dummy2\/main\/Dummy2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/Dummy2\/main\/Dummy2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/Dummy2\/main\/Dummy2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/Dummy2\/main\/Dummy2.html", "kind" : "class"}], "modules.L2Cache.main" : [{"name" : "modules.L2Cache.main.CacheAddrDataL2", "shortDescription" : "", "members_class" : [{"label" : "line", "tail" : "(): UInt", "member" : "modules.L2Cache.main.CacheAddrDataL2.line", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#line:chisel3.UInt", "kind" : "def"}, {"label" : "group", "tail" : "(): UInt", "member" : "modules.L2Cache.main.CacheAddrDataL2.group", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#group:chisel3.UInt", "kind" : "def"}, {"label" : "way", "tail" : "(): UInt", "member" : "modules.L2Cache.main.CacheAddrDataL2.way", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#way:chisel3.UInt", "kind" : "def"}, {"label" : "tagData", "tail" : "(): UInt", "member" : "modules.L2Cache.main.CacheAddrDataL2.tagData", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#tagData:chisel3.UInt", "kind" : "def"}, {"label" : "tag", "tail" : "(): TagType", "member" : "modules.L2Cache.main.CacheAddrDataL2.tag", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#tag:modules.Cache.main.TagType", "kind" : "def"}, {"member" : "modules.L2Cache.main.CacheAddrDataL2#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/L2Cache\/main\/CacheAddrDataL2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/L2Cache\/main\/CacheAddrDataL2.html", "kind" : "class"}, {"name" : "modules.L2Cache.main.CacheAddrWireL2", "shortDescription" : "", "object" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html", "members_class" : [{"label" : ":=", "tail" : "(that: => UInt): Unit", "member" : "modules.L2Cache.main.CacheAddrWireL2.:=", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#:=(that:=>chisel3.UInt):Unit", "kind" : "def"}, {"label" : "line", "tail" : "(): UInt", "member" : "modules.L2Cache.main.CacheAddrWireL2.line", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#line:chisel3.UInt", "kind" : "def"}, {"label" : "group", "tail" : "(): UInt", "member" : "modules.L2Cache.main.CacheAddrWireL2.group", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#group:chisel3.UInt", "kind" : "def"}, {"label" : "way", "tail" : "(): UInt", "member" : "modules.L2Cache.main.CacheAddrWireL2.way", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#way:chisel3.UInt", "kind" : "def"}, {"label" : "tagData", "tail" : "(): UInt", "member" : "modules.L2Cache.main.CacheAddrWireL2.tagData", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#tagData:chisel3.UInt", "kind" : "def"}, {"label" : "tag", "tail" : "(): TagType", "member" : "modules.L2Cache.main.CacheAddrWireL2.tag", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#tag:modules.Cache.main.TagType", "kind" : "def"}, {"label" : "address", "tail" : ": UInt", "member" : "modules.L2Cache.main.CacheAddrWireL2.address", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#address:chisel3.UInt", "kind" : "val"}, {"member" : "modules.L2Cache.main.CacheAddrWireL2#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): CacheAddrWireL2.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): CacheAddrWireL2.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): CacheAddrWireL2.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getDefaultValue", "tail" : "(): UInt", "member" : "modules.L2Cache.main.CacheAddrWireL2.getDefaultValue", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#getDefaultValue:chisel3.UInt", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/L2Cache\/main\/CacheAddrWireL2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/L2Cache\/main\/CacheAddrWireL2.html", "kind" : "class"}, {"name" : "modules.L2Cache.main.L1L2CacheBundle", "shortDescription" : "", "object" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html", "members_class" : [{"label" : "addr", "tail" : ": UInt", "member" : "modules.L2Cache.main.L1L2CacheBundle.addr", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#addr:chisel3.UInt", "kind" : "val"}, {"label" : "writeEnable", "tail" : ": Bool", "member" : "modules.L2Cache.main.L1L2CacheBundle.writeEnable", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#writeEnable:chisel3.Bool", "kind" : "val"}, {"member" : "modules.L2Cache.main.L1L2CacheBundle#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.Bundle.toPrintable", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#toPrintable:chisel3.Printable", "kind" : "def"}, {"label" : "_cloneTypeImpl", "tail" : "(): Bundle", "member" : "chisel3.Bundle._cloneTypeImpl", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#_cloneTypeImpl:chisel3.Bundle", "kind" : "def"}, {"label" : "cloneType", "tail" : "(): L1L2CacheBundle.this.type", "member" : "chisel3.Bundle.cloneType", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#cloneType:Bundle.this.type", "kind" : "def"}, {"label" : "_usingPlugin", "tail" : "(): Boolean", "member" : "chisel3.Bundle._usingPlugin", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#_usingPlugin:Boolean", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.Bundle.ignoreSeq", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "_elementsImpl", "tail" : "(): Iterable[(String, Any)]", "member" : "chisel3.Bundle._elementsImpl", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#_elementsImpl:Iterable[(String,Any)]", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqMap[String, Data]", "member" : "chisel3.Bundle.elements", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#elements:scala.collection.immutable.SeqMap[String,chisel3.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.Bundle.className", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.Record.getElements", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#getElements:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "chisel3.Record.toString", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#toString():String", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.Aggregate.do_asUInt", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):chisel3.UInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(): Option[BigInt]", "member" : "chisel3.Aggregate.litOption", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#litOption:Option[BigInt]", "kind" : "def"}, {"label" : "asUInt", "tail" : "(dummy: Int*): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#asUInt(dummy:Int*):chisel3.UInt", "kind" : "final macro def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.Data.asUInt", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#asUInt:chisel3.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.Data.do_asTypeOf", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#do_asTypeOf[T<:chisel3.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.Data.asTypeOf", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#asTypeOf[T<:chisel3.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.Data.widthOption", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.Data.isWidthKnown", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.Data.getWidth", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#getWidth:Int", "kind" : "final def"}, {"label" : "litValue", "tail" : "(dummy: Int*): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#litValue(dummy:Int*):BigInt", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.Data.litValue", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#litValue:BigInt", "kind" : "def"}, {"label" : "litOption", "tail" : "(dummy: Int*): Option[BigInt]", "member" : "chisel3.Data.litOption", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#litOption(dummy:Int*):Option[BigInt]", "kind" : "def"}, {"label" : "isLit", "tail" : "(dummy: Int*): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#isLit(dummy:Int*):Boolean", "kind" : "def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.Data.isLit", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#isLit:Boolean", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.<>", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#<>(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: => Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.Data.:=", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#:=(that:=>chisel3.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.CompileOptions):Unit", "kind" : "final def"}, {"label" : "bindingToString", "tail" : "(): String", "member" : "chisel3.Data.bindingToString", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#bindingToString:String", "kind" : "def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.Data.binding_=", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#binding_=(target:chisel3.internal.Binding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Option[Binding]", "member" : "chisel3.Data.binding", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#binding:Option[chisel3.internal.Binding]", "kind" : "def"}, {"label" : "autoSeed", "tail" : "(name: String): L1L2CacheBundle.this.type", "member" : "chisel3.Data.autoSeed", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#autoSeed(name:String):Data.this.type", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toAbsoluteTarget", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#toAbsoluteTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ReferenceTarget", "member" : "chisel3.internal.NamedComponent.toTarget", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#toTarget:firrtl.annotations.ReferenceTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#instanceName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): L1L2CacheBundle.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getBundleWidth", "tail" : "(c: GlobalConfig): Int", "member" : "modules.L2Cache.main.L1L2CacheBundle.getBundleWidth", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#getBundleWidth(implicitc:utils.GlobalConfigLoader.GlobalConfig):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/L2Cache\/main\/L1L2CacheBundle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/L2Cache\/main\/L1L2CacheBundle.html", "kind" : "class"}, {"name" : "modules.L2Cache.main.L2Cache", "shortDescription" : "", "members_class" : [{"label" : "addrInfo", "tail" : ": CacheAddrDataL2", "member" : "modules.L2Cache.main.L2Cache.addrInfo", "link" : "modules\/L2Cache\/main\/L2Cache.html#addrInfo:modules.L2Cache.main.CacheAddrDataL2", "kind" : "val"}, {"label" : "readAddressWire", "tail" : ": AddressChannel[AXI4ConfigMaster]", "member" : "modules.L2Cache.main.L2Cache.readAddressWire", "link" : "modules\/L2Cache\/main\/L2Cache.html#readAddressWire:modules.AXI4.main.AddressChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster]", "kind" : "val"}, {"label" : "ac", "tail" : ": AXI4ConfigMaster", "member" : "modules.L2Cache.main.L2Cache.ac", "link" : "modules\/L2Cache\/main\/L2Cache.html#ac:modules.AXI4.main.ConfigTypes.AXI4ConfigMaster", "kind" : "implicit val"}, {"label" : "stateMatrix", "tail" : ": Seq[(UInt, UInt)]", "member" : "modules.L2Cache.main.L2Cache.stateMatrix", "link" : "modules\/L2Cache\/main\/L2Cache.html#stateMatrix:Seq[(chisel3.UInt,chisel3.UInt)]", "kind" : "val"}, {"label" : "axiMaster", "tail" : ": AXI4Master", "member" : "modules.L2Cache.main.L2Cache.axiMaster", "link" : "modules\/L2Cache\/main\/L2Cache.html#axiMaster:modules.AXI4.main.AXI4Master", "kind" : "val"}, {"label" : "onData", "tail" : ": Function1[DataChannel[AXI4ConfigMaster], _]", "member" : "modules.L2Cache.main.L2Cache.onData", "link" : "modules\/L2Cache\/main\/L2Cache.html#onData:Function1[modules.AXI4.main.DataChannel[modules.AXI4.main.ConfigTypes.AXI4ConfigMaster],_]", "kind" : "val"}, {"label" : "writingCacheLineData", "tail" : ": CacheLine", "member" : "modules.L2Cache.main.L2Cache.writingCacheLineData", "link" : "modules\/L2Cache\/main\/L2Cache.html#writingCacheLineData:modules.Cache.main.CacheLine", "kind" : "val"}, {"label" : "writeMemCnt", "tail" : ": UInt", "member" : "modules.L2Cache.main.L2Cache.writeMemCnt", "link" : "modules\/L2Cache\/main\/L2Cache.html#writeMemCnt:chisel3.UInt", "kind" : "val"}, {"label" : "hitLineReg", "tail" : ": CacheLine", "member" : "modules.L2Cache.main.L2Cache.hitLineReg", "link" : "modules\/L2Cache\/main\/L2Cache.html#hitLineReg:modules.Cache.main.CacheLine", "kind" : "val"}, {"label" : "getTagData", "tail" : "(addr: UInt): UInt", "member" : "modules.L2Cache.main.L2Cache.getTagData", "link" : "modules\/L2Cache\/main\/L2Cache.html#getTagData(addr:chisel3.UInt):chisel3.UInt", "kind" : "def"}, {"label" : "getHitLine", "tail" : "(targetTag: TagType): CacheLine", "member" : "modules.L2Cache.main.L2Cache.getHitLine", "link" : "modules\/L2Cache\/main\/L2Cache.html#getHitLine(targetTag:modules.Cache.main.TagType):modules.Cache.main.CacheLine", "kind" : "def"}, {"label" : "state", "tail" : ": UInt", "member" : "modules.L2Cache.main.L2Cache.state", "link" : "modules\/L2Cache\/main\/L2Cache.html#state:chisel3.UInt", "kind" : "val"}, {"label" : "nextState", "tail" : ": UInt", "member" : "modules.L2Cache.main.L2Cache.nextState", "link" : "modules\/L2Cache\/main\/L2Cache.html#nextState:chisel3.UInt", "kind" : "val"}, {"label" : "readDoneRespState", "tail" : ": UInt", "member" : "modules.L2Cache.main.L2Cache.readDoneRespState", "link" : "modules\/L2Cache\/main\/L2Cache.html#readDoneRespState:chisel3.UInt", "kind" : "val"}, {"label" : "readFromDDRState", "tail" : ": UInt", "member" : "modules.L2Cache.main.L2Cache.readFromDDRState", "link" : "modules\/L2Cache\/main\/L2Cache.html#readFromDDRState:chisel3.UInt", "kind" : "val"}, {"label" : "readHittingState", "tail" : ": UInt", "member" : "modules.L2Cache.main.L2Cache.readHittingState", "link" : "modules\/L2Cache\/main\/L2Cache.html#readHittingState:chisel3.UInt", "kind" : "val"}, {"label" : "idleState", "tail" : ": UInt", "member" : "modules.L2Cache.main.L2Cache.idleState", "link" : "modules\/L2Cache\/main\/L2Cache.html#idleState:chisel3.UInt", "kind" : "val"}, {"label" : "states", "tail" : ": List[UInt]", "member" : "modules.L2Cache.main.L2Cache.states", "link" : "modules\/L2Cache\/main\/L2Cache.html#states:List[chisel3.UInt]", "kind" : "val"}, {"label" : "waysIndex", "tail" : ": IndexedSeq[(UInt) => UInt]", "member" : "modules.L2Cache.main.L2Cache.waysIndex", "link" : "modules\/L2Cache\/main\/L2Cache.html#waysIndex:IndexedSeq[chisel3.UInt=>chisel3.UInt]", "kind" : "val"}, {"label" : "mem", "tail" : ": SyncReadMem[UInt]", "member" : "modules.L2Cache.main.L2Cache.mem", "link" : "modules\/L2Cache\/main\/L2Cache.html#mem:chisel3.SyncReadMem[chisel3.UInt]", "kind" : "val"}, {"label" : "selectedL1CacheBundle", "tail" : ": L1L2CacheBundle", "member" : "modules.L2Cache.main.L2Cache.selectedL1CacheBundle", "link" : "modules\/L2Cache\/main\/L2Cache.html#selectedL1CacheBundle:modules.L2Cache.main.L1L2CacheBundle", "kind" : "val"}, {"label" : "getAddressOkay", "tail" : ": Bool", "member" : "modules.L2Cache.main.L2Cache.getAddressOkay", "link" : "modules\/L2Cache\/main\/L2Cache.html#getAddressOkay:chisel3.Bool", "kind" : "val"}, {"label" : "selectedReg", "tail" : ": L1L2CacheBundleExtended", "member" : "modules.L2Cache.main.L2Cache.selectedReg", "link" : "modules\/L2Cache\/main\/L2Cache.html#selectedReg:L2Cache.this.L1L2CacheBundleExtended", "kind" : "val"}, {"label" : "selectedRegDefault", "tail" : ": L1L2CacheBundleExtended", "member" : "modules.L2Cache.main.L2Cache.selectedRegDefault", "link" : "modules\/L2Cache\/main\/L2Cache.html#selectedRegDefault:L2Cache.this.L1L2CacheBundleExtended", "kind" : "val"}, {"label" : "L1L2CacheBundleExtended", "tail" : "", "member" : "modules.L2Cache.main.L2Cache.L1L2CacheBundleExtended", "link" : "modules\/L2Cache\/main\/L2Cache.html#L1L2CacheBundleExtendedextendsBundle", "kind" : "class"}, {"label" : "selected", "tail" : ": DecoupledIO[UInt]", "member" : "modules.L2Cache.main.L2Cache.selected", "link" : "modules\/L2Cache\/main\/L2Cache.html#selected:chisel3.util.DecoupledIO[chisel3.UInt]", "kind" : "val"}, {"label" : "arb", "tail" : ": Arbiter[UInt]", "member" : "modules.L2Cache.main.L2Cache.arb", "link" : "modules\/L2Cache\/main\/L2Cache.html#arb:chisel3.util.Arbiter[chisel3.UInt]", "kind" : "val"}, {"label" : "io", "tail" : ": Bundle { ... \/* 3 definitions in type refinement *\/ }", "member" : "modules.L2Cache.main.L2Cache.io", "link" : "modules\/L2Cache\/main\/L2Cache.html#io:chisel3.Bundle{valinICache:chisel3.util.DecoupledIO[chisel3.UInt];valinDCache:chisel3.util.DecoupledIO[chisel3.UInt];vallineOut:chisel3.util.DecoupledIO[chisel3.UInt]}", "kind" : "val"}, {"label" : "CacheLineType", "tail" : "(): UInt", "member" : "modules.L2Cache.main.L2Cache.CacheLineType", "link" : "modules\/L2Cache\/main\/L2Cache.html#CacheLineType:chisel3.UInt", "kind" : "def"}, {"label" : "L1L2Type", "tail" : "(): UInt", "member" : "modules.L2Cache.main.L2Cache.L1L2Type", "link" : "modules\/L2Cache\/main\/L2Cache.html#L1L2Type:chisel3.UInt", "kind" : "def"}, {"member" : "modules.L2Cache.main.L2Cache#<init>", "error" : "unsupported entity"}, {"label" : "override_reset_=", "tail" : "(rhs: Option[Bool]): Unit", "member" : "chisel3.Module.override_reset_=", "link" : "modules\/L2Cache\/main\/L2Cache.html#override_reset_=(rhs:Option[chisel3.Bool]):Unit", "kind" : "def"}, {"label" : "override_clock_=", "tail" : "(rhs: Option[Clock]): Unit", "member" : "chisel3.Module.override_clock_=", "link" : "modules\/L2Cache\/main\/L2Cache.html#override_clock_=(rhs:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "override_reset", "tail" : "(): Option[Bool]", "member" : "chisel3.Module.override_reset", "link" : "modules\/L2Cache\/main\/L2Cache.html#override_reset:Option[chisel3.Bool]", "kind" : "def"}, {"label" : "override_clock", "tail" : "(): Option[Clock]", "member" : "chisel3.Module.override_clock", "link" : "modules\/L2Cache\/main\/L2Cache.html#override_clock:Option[chisel3.Clock]", "kind" : "def"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.Module.reset", "link" : "modules\/L2Cache\/main\/L2Cache.html#reset:chisel3.Reset", "kind" : "final val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.Module.clock", "link" : "modules\/L2Cache\/main\/L2Cache.html#clock:chisel3.Clock", "kind" : "final val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.RawModule.getPorts", "link" : "modules\/L2Cache\/main\/L2Cache.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.RawModule.compileOptions", "link" : "modules\/L2Cache\/main\/L2Cache.html#compileOptions:chisel3.CompileOptions", "kind" : "val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.RawModule.getCommands", "link" : "modules\/L2Cache\/main\/L2Cache.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "modules\/L2Cache\/main\/L2Cache.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "modules\/L2Cache\/main\/L2Cache.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "modules\/L2Cache\/main\/L2Cache.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "modules\/L2Cache\/main\/L2Cache.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "modules\/L2Cache\/main\/L2Cache.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "modules\/L2Cache\/main\/L2Cache.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "modules\/L2Cache\/main\/L2Cache.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "modules\/L2Cache\/main\/L2Cache.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "modules\/L2Cache\/main\/L2Cache.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "modules\/L2Cache\/main\/L2Cache.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "modules\/L2Cache\/main\/L2Cache.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "modules\/L2Cache\/main\/L2Cache.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "modules\/L2Cache\/main\/L2Cache.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "modules\/L2Cache\/main\/L2Cache.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "modules\/L2Cache\/main\/L2Cache.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "modules\/L2Cache\/main\/L2Cache.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "modules\/L2Cache\/main\/L2Cache.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "modules\/L2Cache\/main\/L2Cache.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "modules\/L2Cache\/main\/L2Cache.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: => String): L2Cache.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "modules\/L2Cache\/main\/L2Cache.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "modules\/L2Cache\/main\/L2Cache.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "modules\/L2Cache\/main\/L2Cache.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "modules\/L2Cache\/main\/L2Cache.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "modules\/L2Cache\/main\/L2Cache.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "modules\/L2Cache\/main\/L2Cache.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "modules\/L2Cache\/main\/L2Cache.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "modules\/L2Cache\/main\/L2Cache.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "modules\/L2Cache\/main\/L2Cache.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "modules\/L2Cache\/main\/L2Cache.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/L2Cache.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/L2Cache.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "modules\/L2Cache\/main\/L2Cache.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "modules\/L2Cache\/main\/L2Cache.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "modules\/L2Cache\/main\/L2Cache.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "modules\/L2Cache\/main\/L2Cache.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "modules\/L2Cache\/main\/L2Cache.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "modules\/L2Cache\/main\/L2Cache.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "modules\/L2Cache\/main\/L2Cache.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "modules\/L2Cache\/main\/L2Cache.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "modules\/L2Cache\/main\/L2Cache.html", "kind" : "class"}]};